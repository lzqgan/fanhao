[{"firstHeader":"sort","last_chapter_rule":"","title":"道长仓库Pro","author":"@LoyDgIk","version":157,"type":"tool","url":"hiker://empty","col_type":"icon_2_round","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\n    const {\n        getApi,\n        color,\n        small,\n        getFile,\n        htmlTag,\n        api,\n        md\n    } = $.require(\"hiker://page/utiliy\");\n\nconst lsg=$.require(\"hiker://page/localStorage?rule=道长仓库Pro\");\nlet classA = getVar(\"Warehouse.class\", \"0\");\nlet listUrl = getApi(\"usersUrl\") + classA,\n    myUrl = getApi(\"devSelf\");\n// myUrl = getApi(\"rulesAllUrl\");\nputVar(\"Warehouse.filter\", \"\");\nvar noWait=true;//无需重试\nvar timeout=500;\nvar tmp_headers={\n    timeout:timeout\n};\ntry{\n    var userList = JSON.parse(request(listUrl,tmp_headers)).result,\n        nowCon = 0,\n        ruleCount = JSON.parse(request(getApi(\"ruleCountUrl\"),tmp_headers)).result;\n}catch(e){\n    noWait=false;\n    setResult([{\n        title:'仓库同时访问量过大或网络差，繁忙中...\\n请耐心等待稍后再试',\n        desc:'点击尝试重新访问',\n        col_type:'text_1',\n        url:$('#noLoading#').lazyRule(()=>{\n            refreshPage(false);\n            return 'toast://已刷新'\n        })\n    }]);\n}\nif(noWait){\n    let data = [];\n    let classTab = [\n        [\"上次活跃\", \"0\"],\n        [\"规则数\", \"1\"],\n        [\"注册时间\", \"-1\"]\n    ]\n    for (let item of classTab) {\n        data.push({\n            title: item[1] === classA ? \"““\" + item[0] + \"””\" : item[0],\n            url: $(\"#noLoading#\").lazyRule((key) => {\n                putVar(\"Warehouse.class\", key);\n                refreshPage(false);\n                return \"hiker://empty\";\n            }, item[1]),\n            col_type: \"scroll_button\"\n        });\n    }\n    data.push({\n        title: \"全部规则\",\n        url: \"hiker://page/AllPublicRule?url=hiker://empty#fypage#noHistory##noRecordHistory#\",\n        col_type: \"scroll_button\"\n    });\n    data.push({\n        title: \"刷新依赖\",\n        url: $('#noLoading#').lazyRule((jsonUrl)=>{\n            jsonUrl = jsonUrl+'2505';\n            // log(jsonUrl);\n            let text = request(jsonUrl);\n            if(!/version/.test(text)){\n                return 'toast://服务器正忙,请稍候再试...'\n            }\n            deleteCache(jsonUrl);\n            try {\n                require(jsonUrl);\n                confirm({title:'刷新成功提示',content:\"toast://已刷新,当前版本信息:\\n\"+JSON.stringify(version)})\n                return 'hiker://empty'\n            }catch (e) {\n                return 'toast://糟糕，本地缓存插件被清除了，但是服务器通讯失败!'\n            }\n        },getApi(\"importUrl\")),\n        col_type: \"scroll_button\"\n    });\n    data.push({\n        title:\"通免:\"+color(lsg.getItem(\"通免\",\"X5\"),\"#ff7000\"),\n        col_type:\"scroll_button\",\n        url:$('#noLoading#').lazyRule(()=>{\n            const lsg=$.require(\"hiker://page/localStorage?rule=道长仓库Pro\");\n            if(lsg.getItem(\"通免\",\"X5\")==\"X5\"){\n                lsg.setItem(\"通免\",\"WEB\");\n            }else{\n                lsg.setItem(\"通免\",\"X5\");\n            }\n            refreshPage(false);\n            return \"toast://已设置仓库通免模式为:\"+lsg.getItem(\"通免\");\n        })\n    });\n    data.push({\n        title:\"排序:\"+color(getItem(\"排序\",\"时间优先\"),\"#ff7000\"),\n        col_type:\"scroll_button\",\n        url:$('#noLoading#').lazyRule((color)=>{\n            let next=getItem(\"排序\",\"时间优先\")==='时间优先'?'新版优先':'时间优先';\n            setItem(\"排序\",next);\n            //refreshPage(false);\n            updateItem('sort',{title:\"排序:\"+color(next,\"#ff7000\")})\n            return \"toast://已设置仓库开发者规则排序模式为:\"+next;\n        },color),\n        extra:{\n            id:'sort'\n        }\n    });\n    data.push({\n        title:color(\"仓库公告\",\"#ff7000\"),\n        col_type:\"scroll_button\",\n        url:$('hiker://empty#noHistory##noRecordHistory#').rule((md)=>{\n            require(md);\n            let d = [];\n            let 仓库公告=\"暂无公告\";\n            try{\n                仓库公告=fetch('https://gitcode.net/qq_32394351/dr/-/raw/master/js/仓库公告.md');\n            }catch(e){}\n            if(仓库公告) {\n                d.push({\n                    title: marked.parse(仓库公告),\n                    col_type: 'rich_text',\n                    url: 'hiker://empty'\n                });\n            }\n            setResult(d);\n        },md)\n    });\n\n    data.push({\n        title:color(\"升级仓库\",\"#15ab21\"),\n        col_type:\"scroll_button\",\n        url:$('#noLoading#').lazyRule(()=>{\n            const {getApi} = $.require(\"hiker://page/utiliy\");\n            let ruleHead = '海阔视界首页频道规则【道长仓库Pro】￥home_rule_url￥';\n            let url = getApi('importUrl')+\"1094\";\n            let importUrl = 'rule://'+base64Encode(ruleHead+url);\n            return importUrl\n        })\n    });\n\n    data.push({\n        title:color(\"升级$扩展\",\"#15ab21\"),\n        col_type:\"scroll_button\",\n        url:$('#noLoading#').lazyRule(()=>{\n            const {getApi} = $.require(\"hiker://page/utiliy\");\n            let ruleHead = '海阔视界，网页插件￥js_url￥$hiker@';\n            let url = getApi('importUrl')+\"5111\";\n            let importUrl = 'rule://'+base64Encode(ruleHead+url);\n            return importUrl\n        })\n    });\n\n    addListener('onClose', $.toString(() => {\n        clearVar(\"Warehouse.class\");\n    }));\n    let {\n        username,\n        password,\n        user\n    } = getFile();\n\n    let is_login = false;\n    let is_manager = false;\n    if (username !== void 0 && password !== void 0) {\n        myUrl += '?qq=' + username + '&password=' + password;\n        let code_str = request(myUrl,tmp_headers);\n        let code = {};\n        try{\n            code=JSON.parse(code_str);\n        }catch(e){}\n        if (code.status === 0&& code.result.active) {\n            is_login = true;\n            if(code.result.is_manager){\n                is_manager = true;\n                putVar('house.is_manager','真');\n                putVar('house.username',username);\n                putVar('house.password',password);\n            }else{\n                putVar('house.is_manager','');\n                clearVar('house.username');\n                clearVar('house.password');\n            }\n        }\n    }\n    if (is_login) {\n        try{\n            nowCon = JSON.parse(request(getApi(\"nowConUrl\"),tmp_headers)).result;\n        }catch(e){\n            nowCon='未知';\n        }\n        let devData = userList.find(item => item.qq === username);\n        data.push({\n            title: '<strong><span style=\"color: #ff7000\">' + devData.name + '</span></strong>&nbsp;&nbsp;&nbsp;&nbsp;<small><u>规则管理 ></u></small>',\n            pic_url: devData.avatar,\n            col_type: \"avatar\",\n            url: \"hiker://page/devManage#noHistory##noRecordHistory#\",\n            extra: {\n                //username: username,\n                //password: password,\n                dev: devData\n            }\n        });\n        data.push({\n            col_type: 'text_1',\n            title: small(\"现有 \" + color(userList.length, \"#ff7000\") + \" 名开发者，\" + color(ruleCount[0], \"#ff7000\") + \" 条公开规则，\" + color(ruleCount[1], \"#ff7000\") + \" 条集芳阁规则。在线:\"+color(nowCon, \"#ff7000\")),\n            url: \"toast://喵喵喵?\",\n        });\n    } else {\n        data.push({\n            title: small(color(\"开发者登录\", \"#00BFFF\")),\n            col_type: 'text_center_1',\n            desc: small(\"现有\" + color(userList.length, \"#ff7000\") + \"名开发者，\" + color(ruleCount[0], \"#ff7000\") + \"条公开规则，\" + color(0, \"#ff7000\") + \"条集芳阁规则。\"),\n            url: \"hiker://page/devLogin\"\n        });\n    }\n    if (Array.isArray(user) && user.length === 2) {\n        let userlogin = request(api.dis_login, {\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify({\n                \"params\": {\n                    \"qq\": user[0],\n                    \"auth_code\": user[1]\n                }\n            }),\n            method: 'POST',\n            timeout:timeout\n        });\n        userlogin = JSON.parse(userlogin).result;\n        if (userlogin.status === 0) {\n            userlogin = userlogin.result\n            data.push({\n                title: userlogin.name + \"&nbsp;&nbsp;\" + userlogin.qq + \"&nbsp;&nbsp;&nbsp;&nbsp;<small><u>更换账号 ></u></small>\",\n                col_type: 'avatar',\n                pic_url: userlogin.avatar_url,\n                url: \"hiker://page/Userregistration\"\n            });\n            data.splice(3,0,{\n                title: userlogin.has_reply?\"🆕回复\":\"🔔回复\",\n                url: \"hiker://page/MyReply?url=hiker://empty#fypage#noHistory##noRecordHistory#\",\n                col_type: \"scroll_button\",\n                extra:{\n                    auth_code:user[1],\n                    qq:user[0]\n                }\n            });\n        } else {\n            data.push({\n                title: userlogin.detail,\n                col_type: 'text_center_1',\n                desc: \"““””<small><u>重新获取验证码 ></u></small>\",\n                url: \"hiker://page/Userregistration\"\n            });\n        }\n    } else {\n        data.push({\n            title: \"评论登录/注册\",\n            col_type: 'text_center_1',\n            desc: \"\",\n            url: \"hiker://page/Userregistration\"\n        });\n    }\n    for (var item of userList) {\n        data.push({\n            title: item.name + \"(\" + item.rule_num + \")\",\n            desc: item.id + ':' + item.nick_name,\n            pic_url: item.avatar,\n            url: \"hiker://page/rules#noHistory#\",\n            extra: {\n                avatarUrl: item.avatar,\n                qq: item.qq,\n                id:item.id,\n                can_upload:item.can_upload\n            }\n        });\n    }\n\n    data.push({\n        col_type: 'long_text'\n    });\n    setResult(data);\n    let img = [\n        [\n            \"hiker://files/icon/赞.svg\", \"https://bafybeiaeetwbc3thoy22y5zd7al6rndeqbrbwhszqb6oitnf7a5zvsz5pe.ipfs.cf-ipfs.com/\"\n        ],\n        [\n            \"hiker://files/icon/踩.svg\", \"https://bafybeiehxynphaafe4mukacs7we4d6lrb35kppdiffjv4vwnsq22nfqnl4.ipfs.cf-ipfs.com/\"\n        ],\n        [\n            \"hiker://files/icon/评论.svg\", \"https://bafybeifhxi5rdnxq5xly7r4qdbwico2343smelxdqoytalguctgc2ojsdy.ipfs.cf-ipfs.com/\"\n        ]\n    ]\n    for (let item of img) {\n        if (!fileExist(item[0])) {\n            writeFile(item[0], request(item[1]));\n        }\n    }\n}","searchFind":"js:\nvar d = [];\nconst {\n    api,\n    getApi,\n    localRuleVer    \n} = $.require(\"hiker://page/utiliy\");\nvar html = request(getApi(\"search\") + \"?key=\" + MY_URL.replace(\"hiker://empty#\", \"\")); // 获取源码\nvar rule_list = JSON.parse(html).result;\nlet filter = getVar(\"Warehouse.filter\", \"\");\nif (filter !== \"\") {\n    rule_list = rule_list.filter(item => item.author === filter);\n}\nif (rule_list.length === 0) {\n    d.push({\n        title: '共搜索到' + rule_list.length + \"条记录\",\n        desc: '详情请找道长,qq 434857005',\n        url: \"hiker://empty\",\n        col_type: 'text_center_1'\n    });\n}\nlet homeList = JSON.parse(request(api.home));\n\nfor (let item of rule_list) {\n    //let lver=localRuleVer(homeList, item);\n    let label = \"\",\n        lver = -2;\n    if (item.data_type === \"home_rule_url\") {\n        lver = localRuleVer(homeList, item);\n        if (lver === -1) {\n            label = \"🆕\";\n        } else if (lver < item.ver) {\n            label = \"🆙\";\n        }\n    }\n    d.push({\n        title: label+item.name,\n        desc: item.type,\n        content: item.author/*+\"\\n本地版本:\"+lver+\"\\t\\t云端版本:\"+item.ver*/+ '\\n更新于:' + item.last_update,\n        url: \"hiker://page/ruleDetail#noHistory##noRecordHistory#\",\n        extra: {\n            lver: lver,\n            id: item.id\n        },\n        pic_url: item.pic_url\n    });\n\n}\n\nsetResult(d);","search_url":"hiker://empty#**","titleColor":"#ff228be6","group":"工具","detail_col_type":"text_1","detail_find_rule":"","sdetail_col_type":"text_1","sdetail_find_rule":"","ua":"mobile","preRule":"$.require('hiker://page/libs?rule=道长仓库Pro');","pages":"[{\"col_type\":\"movie_3\",\"name\":\"工具\",\"path\":\"utiliy\",\"rule\":\"js:\\nlet host = \\\"http://hiker.nokia.press\\\";\\n//let host = \\\"http://192.168.3.94:8079\\\";\\nlet home = base64Decode(\\\"aGlrZXI6Ly9ob21l\\\");\\nvar api = {\\n    host: host+\\\"/hikerule\\\",\\n    usersUrl: \\\"/dev/users?order=\\\", //用户列表\\n    ruleCountUrl: \\\"/dev/rulecount\\\", //获取规则数量\\n    rulesUrl: \\\"/dev/get\\\", //用户对应的规则列表仅仅获取公开\\n    rulesAllUrl: \\\"/dev/getall\\\", //开发者对应的规则列表可获取私有\\n    devSelf:'/dev/getself',//获取开发者信息\\n    manCanUpload:'/set_can_upload/',//超管设置开发者是否可上传\\n    manRuleSafe:'/set_rule_safe/',//超管设置规则安全性\\n    manRuleGood:'/set_rule_good/',//超管设置规则优质性\\n    importUrl: \\\"/rulelist.json?id=\\\", //规则详情可导入\\n    infoSetUrl: \\\"/dev/set_info\\\",\\n    nowConUrl: \\\"/sql_info/get_now_con\\\",\\n    infoGetUrl: \\\"/dev/get_info?name=\\\",\\n    settingsGetUrl: \\\"/dev/get_settings?name=\\\",\\n    gupload: \\\"/dev/gupload\\\",\\n    gtimeover: \\\"/dev/gtimeover\\\",\\n    getbyid: \\\"/dev/getbyid\\\",\\n    ruleListJson: \\\"/rulelist.json\\\",\\n    auth: \\\"/dev/get_auth\\\",\\n    timeover: \\\"/dev/timeover\\\",\\n    share: \\\"/dev/share\\\",\\n    genAuth: \\\"/dev/gen_auth\\\",\\n    deleteUrl: \\\"/dev/delete\\\",\\n    jsonList: \\\"/dev/json_list\\\",\\n    search: \\\"/dev/search\\\",\\n    new_dev: \\\"/dev_regist/new\\\",\\n    new_getId: \\\"/dev_regist/get_id\\\",\\n    new_confirm: \\\"/dev_regist/confirm\\\",\\n    modify_pwd: \\\"/modify/password\\\",\\n    modify_name: \\\"/modify/name\\\",\\n    modify_ava: \\\"/modify/avatar\\\",\\n    user: \\\"/dev/user/\\\",\\n    get_rule_note: \\\"/modify/get_rule_note/\\\",\\n    set_rule_pic: \\\"/modify/rule_pic/\\\",\\n    set_rule_note: \\\"/modify/rule_note/\\\"\\n}\\n$.exports.range = function(m, n) {\\n    return Math.floor(Math.random() * (m - n + 1) + n);\\n}\\n$.exports.mapColType = function(target, type, n) {\\n    for (let i = 0; i < n; i++) {\\n        target.push({\\n            col_type: type\\n        });\\n    }\\n}\\nvar getApi = function(k) {\\n    return api.host + api[k];\\n};\\n$.exports.getApi=getApi;\\n$.exports.md=getApi('importUrl')+\\\"3187\\\";\\n$.exports.localRuleVer = function(localRuleList, rule) {\\n    let localRule;\\n    for (let i = 0; i < localRuleList.length; i++) {\\n        let item = localRuleList[i];\\n        let au = item.author || \\\"\\\";\\n        let sameAu=au.length > 0 && rule.author.includes(au);\\n        sameAu=true;//不判断作者默认为true\\n        if (item.title === rule.name && sameAu) {\\n            localRule = item;\\n            break;\\n        }\\n    }\\n    if (localRule === void 0) {\\n        return -1;\\n    } else {\\n        return localRule.version;\\n    }\\n}\\n$.exports.color = function(text, color) {\\n    text += \\\"\\\";\\n    if (text.indexOf(\\\"““””\\\") === 0) {\\n        text.replace(\\\"““””\\\", \\\"\\\");\\n    }\\n    return \\\"““””<font color='\\\" + color + \\\"'>\\\" + text + \\\"</font>\\\";\\n}\\n\\n$.exports.sleep = function(timeout){\\n    java.lang.Thread.sleep(timeout);\\n}\\nfunction htmlTag(tag, text) {\\n    text += \\\"\\\";\\n    if (text.indexOf(\\\"““””\\\") === 0) {\\n        text.replace(\\\"““””\\\", \\\"\\\");\\n    }\\n    return \\\"““””\\\" + \\\"<\\\" + tag + \\\">\\\" + text + \\\"</\\\" + tag + \\\">\\\";\\n\\n}\\n\\nfunction getNowFormatDate() {\\n            let date = new Date();\\n            let seperator1 = \\\"-\\\";\\n            let seperator2 = \\\":\\\";\\n            let month = date.getMonth() + 1;\\n            let strDate = date.getDate();\\n            let strHours = date.getHours();\\n            let strMinutes = date.getMinutes();\\n            let strSeconds = date.getSeconds()+1;\\n            if (month >= 1 && month <= 9) {\\n                month = \\\"0\\\" + month\\n            }\\n            if (strDate >= 0 && strDate <= 9) {\\n                strDate = \\\"0\\\" + strDate\\n            }\\n            if (strHours >= 0 && strHours <= 9) {\\n                strHours = \\\"0\\\" + strHours\\n            }\\n            if (strMinutes >= 0 && strMinutes <= 9) {\\n                strMinutes = \\\"0\\\" + strMinutes\\n            }\\n            if (strSeconds >= 0 && strSeconds <= 9) {\\n                strSeconds = \\\"0\\\" + strSeconds\\n            }\\n            //let currentdate = date.getFullYear() + seperator1 + month + seperator1 + strDate + \\\" \\\" + strHours + seperator2 + strMinutes + seperator2 + strSeconds;\\n            let currentdate = (date.getFullYear()-2020)+''+ month +''+ strDate +''+ strHours+'' + strMinutes +''+ Math.ceil(strSeconds/7);\\n            return parseInt(currentdate)\\n        }\\n$.exports.getNowFormatDate = getNowFormatDate;\\n$.exports.htmlTag = htmlTag;\\n$.exports.small = function(text) {\\n    return htmlTag(\\\"small\\\", text);\\n}\\n$.exports.getFile = function() {\\n    var File = request(\\\"hiker://files/WarehouseUSER.json\\\") || \\\"{}\\\";\\n    try {\\n        return JSON.parse(File);\\n    } catch (e) {\\n        writeFile(\\\"hiker://files/WarehouseUSER.json\\\", \\\"{}\\\");\\n        return {};\\n    }\\n}\\n$.exports.getUserDate =function(){\\n    var File = request(\\\"hiker://files/WarehouseUSERA.json\\\") || \\\"[]\\\";\\n    try {\\n        return JSON.parse(File);\\n    } catch (e) {\\n        writeFile(\\\"hiker://files/WarehouseUSERA.json\\\", \\\"[]\\\");\\n        return [];\\n    }\\n}\\n$.exports.existFile = function(spath, ipath, headers) {\\n    let scode = request(spath);\\n    if (!scode) {\\n        writeFile(spath, request(ipath, headers));\\n    }\\n}\\n\\nlet newApi = {\\n    \\\"dis_new\\\": \\\"/hikerule/new_rule_discuss/\\\",\\n    \\\"dis_verify\\\": \\\"/hikerule/rule_discuss/get_yzm\\\",\\n    \\\"dis_get\\\": \\\"/hikerule/rule_discuss/\\\",\\n    \\\"dis_set\\\": \\\"/hikerule/modify/can_discuss/\\\",\\n    \\\"dis_new_user\\\": \\\"/hikerule/rule_discuss/new_user\\\",\\n    \\\"dis_login\\\":\\\"/hikerule/rule_discuss/user_login\\\",\\n    \\\"dis_dev_discuss\\\":\\\"/hikerule/modify/dev_can_discuss\\\",\\n    \\\"dis_dev_control\\\":\\\"/hikerule/rule_discuss/remove/\\\",\\n    \\\"all_rule\\\":\\\"/hikerule/get_rules\\\",\\n    \\\"dis_get_reply\\\":\\\"/hikerule/get_reply_rule_discuss\\\",\\n    \\\"dis_reply\\\":\\\"/hikerule/dev_new_rule_discuss/\\\",\\n}\\n\\nfunction setApi(object) {\\n    let target = {};\\n    for (let key in object) {\\n        target[key]=host+object[key]\\n    }\\n    return target;\\n}\\n\\n$.exports.api = setApi(newApi);\\n$.exports.api.host=host;\\n$.exports.api.home=home;\"},{\"col_type\":\"movie_3\",\"name\":\"开发者登录\",\"path\":\"devLogin\",\"rule\":\"js:\\nsetPageTitle(\\\"开发者登录\\\");\\nconst {\\n    getApi,\\n    htmlTag,\\n    mapColType,\\n    small,\\ngetFile\\n} = $.require(\\\"hiker://page/utiliy\\\");\\nvar data = [];\\naddListener('onClose', $.toString(()=>{\\n    clearVar(\\\"WarehouseUsername\\\");\\n    clearVar(\\\"WarehousePassword\\\");\\n}))\\ndata.push({\\n    title: '账号',\\n    col_type: 'input',\\n    extra: {\\n        defaultValue: getVar('WarehouseUsername',''),\\n        type:\\\"number\\\",\\n        onChange: 'putVar(\\\"WarehouseUsername\\\",input)'\\n    }\\n}, {\\n    title: '密码',\\n    col_type: 'input',\\n    extra: {\\n        defaultValue: getVar('WarehousePassword', ''),\\n        type: \\\"password\\\",\\n        onChange: 'putVar(\\\"WarehousePassword\\\",input)'\\n    }\\n});\\n\\ndata.push({\\n    title:\\\"&nbsp;&nbsp;<a href='hiker://page/Register'>注册</a>\\\",\\n    col_type:\\\"rich_text\\\"\\n});\\nmapColType(data, \\\"line_blank\\\", 1);\\nlet user = getFile();\\ndata.push({\\n    title: htmlTag(\\\"b\\\", \\\"登录\\\"),\\n    url: $().lazyRule((url, f)=> {\\n        let username = getVar('WarehouseUsername', ''),\\n            password = getVar('WarehousePassword', '');\\n        if(username === \\\"\\\" && password ===\\\"\\\"){\\n            return \\\"toast://账号和密码不能为空\\\"\\n        }\\n        let myUrl = url + '?qq=' + username + '&password=' + password;\\n        let code_str = request(myUrl);\\n        let code = JSON.parse(code_str);\\n        if (code.status == 0) {\\n            f.username=username;\\n            f.password=password\\n            writeFile('hiker://files/WarehouseUSER.json', JSON.stringify(f));\\n            back();\\n            return \\\"toast://登录成功\\\";\\n        }else{\\n            return \\\"toast://账号或密码错误\\\";\\n        }\\n    }, getApi(\\\"rulesAllUrl\\\"),user),\\n    col_type: 'text_center_1'\\n});\\nsetResult(data);\"},{\"col_type\":\"icon_2_round\",\"name\":\"开发者管理\",\"path\":\"devManage\",\"rule\":\"js:\\nsetPageTitle(\\\"规则管理\\\");\\naddListener('onClose', 'clearVar(\\\"Warehouse.back\\\",\\\"\\\");');\\nif (getVar(\\\"Warehouse.back\\\") === \\\"1\\\") {\\n    back();\\n}\\nconst {\\n    getApi,\\n    color,\\n    small,\\n    getFile,\\n    existFile,\\n    mapColType,\\n    api\\n} = $.require(\\\"hiker://page/utiliy\\\");\\nlet {\\n    dev\\n} = MY_PARAMS;\\nlet {\\n    username,\\n    password,\\n} = getFile();\\n//existFile(\\\"hiker://files/rules/dzHouse/html/开发者分享.html\\\", \\\"https://erp.scwinbao.com/hikerule/rulelist.json?id=539\\\");\\nlet ruleList = JSON.parse(request(getApi(\\\"rulesAllUrl\\\") + '?qq=' + username + '&password=' + password)).result;\\nlet MOBILE_UA = 'Mozilla/5.0 (Linux; Android 5.0; SM-G900P Build/LRX21T) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.146 Mobile Safari/537.36';\\nlet infoSetUrl = getApi(\\\"infoSetUrl\\\");\\nlet infoGetUrl = getApi(\\\"infoGetUrl\\\") + username;\\nlet settingsGetUrl = getApi(\\\"settingsGetUrl\\\") + username;\\nputMyVar(\\\"dev_set_info\\\", [username, password, infoSetUrl, MOBILE_UA, infoGetUrl].join(\\\"$$\\\"));\\nlet data = [];\\ndata.push({\\n    title: '““””<big>仓库设置</big>&nbsp;&nbsp;&nbsp;<small><u>（ 个人资料 >）</u></small>',\\n    desc: '““””您共有 <span style=\\\"color: #ff7000\\\">' + ruleList.length + '</span>' + \\\" 条规则。\\\\n点击规则可进行分享、删除、导入操作及查看详情\\\",\\n    url: \\\"hiker://page/PersonalData#noHistory##noRecordHistory#\\\",\\n    extra:{id:dev.id},\\n    col_type: 'text_1'\\n});\\nmapColType(data, \\\"line\\\", 2);\\ndata.push({\\n    title: small(color(\\\"更改公告✍\\\", \\\"#34b1ff\\\")),\\n    // url: \\\"x5://file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/rules/dzHouse/html/dev_info_edit.html\\\",\\n    url: \\\"hiker://page/devInfoEdit\\\",\\n    col_type: 'text_3'\\n});\\ndata.push({\\n    title: small(color(\\\"更多分享📲\\\", \\\"#34b1ff\\\")),\\n    //url: \\\"x5://file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/rules/dzHouse/html/开发者分享.html\\\",\\n    url: \\\"hiker://page/moreShare\\\",\\n    col_type: 'text_3'\\n});\\ndata.push({\\n    title: small(color(\\\"升级依赖📥\\\", \\\"#34b1ff\\\")),\\n    url: $(\\\"升级会重新从仓库拉取相关的静态页面到本地\\\\n确认升级吗?\\\").confirm((host) => {\\n        writeFile(\\\"hiker://files/rules/dzHouse/html/开发者分享.html\\\", request(host+'/hikerule/rulelist.json?id=539'));\\n        writeFile(\\\"hiker://files/rules/dzHouse/html/dev_info_edit.html\\\", request(host+'/hikerule/rulelist.json?id=402'));\\n        writeFile(\\\"hiker://files/rules/dzHouse/html/dev_info_get.html\\\", request(host+'/hikerule/rulelist.json?id=404'));\\n        refreshPage(false);\\n        return \\\"toast://已重置开发者分享,简介查看,简介编辑等静态文件\\\";\\n    },api.host),\\n    col_type: 'text_3'\\n});\\nlet devSetBack;\\ntry {\\n    devSetBack = JSON.parse(request(settingsGetUrl));\\n} catch (e) {\\n    devSetBack = {};\\n}\\n\\nfunction setSettingItem(basic) {\\n    let temp = {\\n        title: basic.title,\\n        col_type: basic.col_type,\\n        url: $(basic.confirm).confirm((url, msg) => {\\n            let back = request(url);\\n            let ret = JSON.parse(back);\\n            if (ret.status == 0) {\\n                refreshPage(true);\\n                return \\\"toast://\\\" + msg[0];\\n            } else {\\n                refreshPage(false);\\n                return \\\"toast://\\\" + msg[1] + \\\"\\\\n\\\" + ret.detail;\\n            }\\n        }, basic.url, basic.msg)\\n    };\\n    return temp;\\n}\\nif (devSetBack.status == 0) {\\n    let devSettings = devSetBack.result;\\n    let share = {\\n        col_type: \\\"text_3\\\"\\n    };\\n    if (devSettings.share_public) {\\n        share.title = small(color(\\\"公开上传\\\", \\\"green\\\") + color(\\\"(私藏)\\\", \\\"#00bfff\\\"));\\n        share.url = getApi(\\\"gupload\\\") + \\\"?qq=\\\" + username + \\\"&password=\\\" + password + \\\"&flag=1\\\";\\n        share.confirm = \\\"是否确认私藏以后提交的规则?\\\";\\n        share.msg = [\\\"已私藏\\\", \\\"私藏失败\\\"];\\n    } else {\\n        share.title = small(color(\\\"私密上传\\\", \\\"red\\\") + color(\\\"(公开)\\\", \\\"#adff2f\\\"));\\n        share.url = getApi(\\\"gupload\\\") + \\\"?qq=\\\" + username + \\\"&password=\\\" + password;\\n        share.confirm = \\\"是否确认公开以后提交的规则?\\\";\\n        share.msg = [\\\"已公开\\\", \\\"公开失败\\\"];\\n    }\\n    data.push(setSettingItem(share));\\n    let timeOver = {\\n        col_type: \\\"text_3\\\"\\n    };\\n    if (devSettings.time_over) {\\n        timeOver.title = small(color(\\\"短时秘钥\\\", \\\"green\\\") + color(\\\"(永久)\\\", \\\"#00bfff\\\"));\\n        timeOver.url = getApi(\\\"gtimeover\\\") + \\\"?qq=\\\" + username + \\\"&password=\\\" + password + \\\"&flag=1\\\";\\n        timeOver.confirm = \\\"是否确认以后的私藏规则分享不过期?\\\";\\n        timeOver.msg = [\\\"已设为永久\\\", \\\"设为永久失败\\\"];\\n    } else {\\n        timeOver.title = small(color(\\\"永久秘钥\\\", \\\"red\\\") + color(\\\"(过期)\\\", \\\"#adff2f\\\"));\\n        timeOver.url = getApi(\\\"gtimeover\\\") + \\\"?qq=\\\" + username + \\\"&password=\\\" + password;\\n        timeOver.confirm = \\\"确认要以后分享的私藏规则自动到期?\\\";\\n        timeOver.msg = [\\\"已设为过期\\\", \\\"设为过期失败\\\"];\\n    }\\n    data.push(setSettingItem(timeOver));\\n    let discuss = {\\n        col_type: \\\"text_3\\\"\\n    };\\n    if (devSettings.can_discuss) {\\n        discuss.title = small(color(\\\"允许评论\\\", \\\"red\\\") + color(\\\"(不许)\\\", \\\"#adff2f\\\"));\\n        discuss.url = api.dis_dev_discuss + \\\"?qq=\\\" + username + \\\"&password=\\\" + password+ \\\"&flag=1\\\";\\n        discuss.confirm = \\\"是否确认以后上传的规则允许评论?\\\";\\n        discuss.msg = [\\\"已设为不许\\\", \\\"设置失败\\\"];\\n\\n    } else {\\n        discuss.title = small(color(\\\"不许评论\\\", \\\"green\\\") + color(\\\"(允许)\\\", \\\"#00bfff\\\"));\\n        discuss.url = api.dis_dev_discuss + \\\"?qq=\\\" + username + \\\"&password=\\\" + password;\\n        discuss.confirm = \\\"是否确认以后上传的规则允许评论?\\\";\\n        discuss.msg = [\\\"已设为允许\\\", \\\"设置失败\\\"];\\n    }\\n    data.push(setSettingItem(discuss));\\n}\\nmapColType(data, \\\"line\\\", 2);\\nfor (let item of ruleList) {\\n    let my_t_excode1 = '';\\n    let my_t_excode2 = '';\\n    if (item.state != 'public') {\\n        my_t_excode1 += '㊙️';\\n    } else {\\n        my_t_excode1 += '';\\n    }\\n    data.push({\\n        title: my_t_excode1 + item.name + my_t_excode2,\\n        url: \\\"hiker://page/manageRule#noHistory##noRecordHistory#\\\",\\n        extra: {\\n            id: item.id,\\n            //username: username,\\n            //password: password\\n        },\\n        pic_url: item.pic,\\n    })\\n}\\nif (ruleList.length === 0) {\\n    data.push({\\n        title: \\\"<h5 style='text-align:center'>快来上传你的第一条规则吧！</h5>\\\",\\n        col_type: \\\"rich_text\\\"\\n    });\\n}\\nsetResult(data);\"},{\"col_type\":\"movie_3\",\"name\":\"规则详细-dev\",\"path\":\"manageRule\",\"rule\":\"js:\\n    const {\\n        getApi,\\n        color,\\n        small,\\n        getFile,\\n        existFile,\\n        mapColType,\\n        htmlTag,\\n        api,\\n        md,\\n    } = $.require(\\\"hiker://page/utiliy\\\");\\nlet {\\n    id\\n} = MY_PARAMS;\\nlet {\\n    username,\\n    password,\\n} = getFile();\\naddListener('onClose', $.toString(() => {\\n    refreshPage(false);\\n}));\\nlet dataItem = JSON.parse(request(getApi(\\\"getbyid\\\") + \\\"?id=\\\" + id)).result;\\nsetPageTitle(\\\"编辑「\\\" + dataItem.name + \\\"」\\\");\\nlet reqByGet = \\\"?id=\\\" + dataItem.id + \\\"&qq=\\\" + username + \\\"&password=\\\" + password;\\nlet ruleListJson = getApi(\\\"ruleListJson\\\") + \\\"?id=\\\";\\nlet data = [];\\ndata.push({\\n    title: htmlTag(\\\"big\\\", \\\"版本\\\"),\\n    desc: \\\"““””云端版本:\\\" + color(dataItem.ver, \\\"#5cff2c\\\") + \\\"\\\\n上次提交于: [\\\" + color(dataItem.last_update, \\\"#ff7000\\\") + \\\"]\\\",\\n    url: $(\\\"<开发者>\\\\n\\\" + dataItem.author + \\\"\\\\n<名称>\\\\n\\\" + dataItem.name + \\\"\\\\n<云端版本>\\\\n\\\" + dataItem.ver + \\\"\\\\n<更新时间>\\\\n[\\\" + dataItem.last_update + \\\"]\\\").confirm(() => {}),\\n    col_type: 'text_1'\\n});\\nlet dataType = {\\n    home_rule_url: '首页云规则',\\n    publish: '提交云仓库规则',\\n    js_url: '网页插件规则',\\n    html: '静态页面',\\n    config: '主页配置'\\n};\\n\\nlet basic = {\\n    col_type: \\\"text_1\\\",\\n    url: \\\"hiker://empty\\\"\\n};\\nlet dataTypeTips = dataType[dataItem.data_type] || '未知规则:' + dataItem.data_type;\\n\\nbasic.title = htmlTag(\\\"big\\\", \\\"类型\\\") + \\\"\\\\t\\\\t\\\\t\\\" + small(\\\"(id:\\\" + dataItem.id + \\\")\\\");\\nbasic.desc = \\\"数据类型：\\\" + color(dataTypeTips, \\\"#cb54ff\\\") + \\\"\\\\n分享状态为：\\\" + dataItem.state;\\nif ([\\\"html\\\", \\\"config\\\", \\\"js_url\\\"].includes(dataItem.data_type)) {\\n    basic.desc += \\\"\\\\n““”” =>\\\" + small(\\\"点此预览\\\");\\n    basic.url = ruleListJson + dataItem.id;\\n}\\nlet auth = \\\"\\\";\\nif (dataItem.state == \\\"private\\\") {\\n    let auth_back = JSON.parse(request(getApi(\\\"auth\\\") + reqByGet));\\n    basic.title = basic.title + \\\"\\\\n\\\" + small(color(auth_back.result, \\\"grey\\\"));\\n    auth = '&auth=' + auth_back.result;\\n    basic.url = basic.url === \\\"hiker://empty\\\" ? basic.url : basic.url + auth;\\n}\\ndata.push(basic);\\nlet notes = request(getApi(\\\"get_rule_note\\\") + id);\\nnotes = JSON.parse(notes).result;\\nrequire(md);\\nlet notesHtml=\\\"\\\"\\ntry{\\n    notesHtml=marked.parse(notes);\\n}catch(e){}\\nif (notes !== false) {\\n    data.push({\\n        title: htmlTag(\\\"big\\\", \\\"备注\\\") + \\\"\\\\t\\\\t\\\\t\\\" + small(htmlTag(\\\"u\\\", \\\"查看完整公告 >\\\")),\\n        desc: notes,\\n        col_type: \\\"text_1\\\",\\n        url: \\\"hiker://page/info\\\",\\n        extra: {\\n            text: notesHtml,\\n            name: dataItem.name,\\n            // type: \\\"long_text\\\"\\n            type: \\\"rich_text\\\"\\n        }\\n    });\\n}\\ndata.push({\\n    title: htmlTag(\\\"big\\\", \\\"操作\\\"),\\n    col_type: \\\"text_1\\\",\\n    url: \\\"toast://你才是最帅的那个人！\\\"\\n});\\nlet importUrl, ruleCode, shareUrl, backCode = \\\"\\\";\\nlet subUrl = ruleListJson + dataItem.id + auth;\\nif (!dataItem.is_json) {\\n    backCode = request(subUrl);\\n}\\nswitch (dataItem.data_type) {\\n    case \\\"home_rule_url\\\":\\n        ruleCode = \\\"海阔视界首页频道规则【\\\" + dataItem.name + \\\"】￥home_rule_url￥\\\" + ruleListJson + dataItem.id + auth;\\n        importUrl = \\\"rule://\\\" + base64Encode(ruleCode)\\n        break;\\n    case 'publish':\\n        ruleCode = '海阔视界规则分享，当前分享的是：' + dataItem.name + '￥publish￥' + base64Encode(backCode);\\n        importUrl = 'rule://' + base64Encode(ruleCode);\\n        break;\\n    case 'js_url':\\n        ruleCode = '海阔视界规则分享，当前分享的是：网页插件￥js_url￥' + dataItem.name + '@base64://' + base64Encode(backCode);\\n        importUrl = 'rule://' + base64Encode(ruleCode);\\n        break;\\n    case 'html':\\n        let file_tmp = dataItem.name.split('.');\\n        let file_path = file_tmp.length > 1 ? file_tmp[file_tmp.length - 1] + \\\"/\\\" + dataItem.name : dataItem.name;\\n        ruleCode = \\\"海阔视界本地文件分享￥file_url￥hiker://files/rules/dzHouse/\\\" + file_path + \\\"@\\\" + ruleListJson + dataItem.id + auth;\\n        importUrl = 'rule://' + base64Encode(ruleCode);\\n        break\\n    case \\\"config\\\":\\n        importUrl = $().rule(password => {\\n            eval(fetch(\\\"hiker://assets/home.js\\\"));\\n            HikerHome.load(\\\"import\\\", password);\\n        }, backCode);\\n        break;\\n}\\nlet my_col_type = \\\"text_2\\\";\\nif (importUrl) {\\n    data.push({\\n        title: \\\"导入规则\\\",\\n        url: importUrl,\\n        col_type: my_col_type\\n    });\\n    if(dataItem.is_json_list&&/home_rule_url|html/.test(dataItem.data_type)){\\n        data.push({\\n            title: '““””<span style=\\\"color: #ff7000\\\">导入道德经</span>',\\n            url: $().lazyRule((dataItem,subUrl)=>{\\n                // let title = \\\"H-\\\"+dataItem.name+\\\".\\\"+dataItem.author;\\n                let title = \\\"J-\\\"+dataItem.name.split('.')[0];\\n                let subObj = {\\n                    title: title,\\n                    url: subUrl,\\n                    desc: \\\"hiker://files/rules/dzHouse/ruleCache/\\\"+title+\\\".json\\\",\\n                    code: \\\"\\\",\\n                    active: false,//禁用并发更新\\n                }\\n                let shareText = base64Encode(JSON.stringify(subObj));\\n                var pastes = getPastes();\\n                var url = sharePaste(shareText,pastes.slice(-1)[0]);\\n                let import_rule= \\\"轻合集订阅：\\\"+title+'\\\\n'+url;\\n                copy(import_rule);\\n                const path = 'hiker://files/rules/dzHouse/ruleCache/sub.json';\\n                $.rc(config.lib.sub);\\n                return 订阅导入(path)\\n            },dataItem,subUrl),\\n            col_type: my_col_type\\n        });\\n    }\\n}\\nif (ruleCode) {\\n    data.push({\\n        title: \\\"分享规则\\\",\\n        url: \\\"copy://\\\" + ruleCode,\\n        col_type: my_col_type\\n    });\\n}\\n\\nfunction setSettingItem(basic, pattern) {\\n    let temp = {\\n        title: basic.title,\\n        col_type: basic.col_type,\\n        url: $(basic.confirm).confirm((url, msg, pattern) => {\\n            let backA = request(url);\\n            let ret = JSON.parse(backA);\\n            if (ret.status == 0) {\\n                pattern ? back() : refreshPage(false);\\n                return \\\"toast://\\\" + msg[0];\\n            } else {\\n                pattern ? back() : refreshPage(false);\\n                return \\\"toast://\\\" + msg[1] + \\\"\\\\n\\\" + ret.detail;\\n            }\\n        }, basic.url, basic.msg, pattern)\\n    };\\n    return temp;\\n}\\nif (dataItem.state == 'private') {\\n    data.push({\\n        title: \\\"设为公开\\\",\\n        url: $(getApi(\\\"share\\\") + reqByGet + \\\"&flag\\\" + \\\"#noLoading#\\\").lazyRule(() => {\\n            request(input);\\n            refreshPage(false);\\n            return \\\"toast://已设为公开\\\";\\n        }),\\n        col_type: my_col_type\\n    }, {\\n        title: \\\"随机密钥\\\",\\n        col_type: my_col_type,\\n        url: $(getApi(\\\"genAuth\\\") + reqByGet + \\\"#noLoading#\\\").lazyRule(() => {\\n            let back = request(input);\\n            let ret = JSON.parse(back);\\n            if (ret.status == 0) {\\n                refreshPage(false);\\n                return \\\"toast://已生成随机密码\\\\n\\\" + ret.result\\n            } else {\\n                refreshPage(true);\\n                return \\\"toast://随机密码生成失败\\\"\\n            }\\n        })\\n    });\\n    let timeOver = {\\n        col_type: my_col_type\\n    };\\n    if (dataItem.time_over) {\\n        timeOver.title = small(color(\\\"短时密钥\\\", \\\"green\\\") + color(\\\"(→永久)\\\", \\\"red\\\"));\\n        timeOver.url = getApi(\\\"timeover\\\") + reqByGet + \\\"&flag=1\\\";\\n        timeOver.confirm = \\\"是否确认以后的私藏规则分享不过期?\\\";\\n        timeOver.msg = [\\\"已设为永久\\\", \\\"设为永久失败\\\"];\\n    } else {\\n        timeOver.title = small(color(\\\"永久密钥\\\", \\\"red\\\") + color(\\\"(→短时)\\\", \\\"green\\\"));\\n        timeOver.url = getApi(\\\"timeover\\\") + reqByGet;\\n        timeOver.confirm = \\\"确认要以后分享的私藏规则自动到期?\\\";\\n        timeOver.msg = [\\\"已设为过期\\\", \\\"设为过期失败\\\"];\\n    }\\n    data.push(setSettingItem(timeOver));\\n} else if (dataItem.state == 'public') {\\n    data.push({\\n        title: \\\"设为私有\\\",\\n        url: $(getApi(\\\"share\\\") + reqByGet + \\\"&flag=1#noLoading#\\\").lazyRule(() => {\\n            request(input);\\n            refreshPage(false);\\n            return \\\"toast://已设为私有\\\";\\n        }),\\n        col_type: my_col_type\\n    });\\n}\\ndata.push(setSettingItem({\\n    title: \\\"删除数据\\\",\\n    confirm: \\\"是否确认删除\\\",\\n    msg: [\\\"已删除\\\", \\\"删除失败\\\"],\\n    url: getApi(\\\"deleteUrl\\\") + reqByGet,\\n    col_type: my_col_type\\n}, true));\\ndata.push({\\n    title: \\\"设置图标\\\",\\n    url: $(dataItem.pic_url, \\\"输入图标地址\\\").input(api => {\\n        if (input === \\\"\\\") {\\n            return \\\"toast://你在逗我链接哪?\\\"\\n        }\\n        let result = request(api + \\\"&rule_pic=\\\" + input);\\n        result = JSON.parse(result);\\n        if (result.status !== 0) {\\n            return \\\"toast://\\\" + result.detail;\\n        }\\n        return \\\"toast://修改成功\\\";\\n    }, getApi(\\\"set_rule_pic\\\") + dataItem.id + reqByGet),\\n    col_type: my_col_type\\n});\\n\\ndata.push({\\n    title: dataItem.can_discuss ? \\\"禁止评论\\\" : \\\"开启评论\\\",\\n    url: $(api.dis_set + dataItem.id + reqByGet + \\\"&state=\\\" + (dataItem.can_discuss ? \\\"\\\" : 1)).lazyRule((can_discuss) => {\\n        request(input);\\n        refreshPage(false);\\n        return can_discuss ? \\\"toast://已禁止评论\\\" : \\\"toast://已开启评论\\\";\\n    }, dataItem.can_discuss),\\n    col_type: my_col_type\\n});\\nMY_PARAMS.name = dataItem.name;\\nMY_PARAMS.username=username;\\nMY_PARAMS.password=password;\\ndata.push({\\n    title: \\\"设置备注\\\",\\n    url: \\\"hiker://page/set_rule_notes\\\",\\n    extra: MY_PARAMS,\\n    col_type: my_col_type\\n});\\nif (dataItem.is_json && dataItem.data_type === \\\"home_rule_url\\\" && !dataItem.is_json_list) {\\n    data.push({\\n        title: '进入频道',\\n        url: $( /*\\\"#noLoading#\\\"*/ ).lazyRule((name,home) => {\\n            let ruleList = JSON.parse(request(home));\\n            let hasRule = ruleList.some(item => item.title === name);\\n            if (hasRule) {\\n                putVar(\\\"Warehouse.back\\\", \\\"1\\\");\\n                back();\\n                return home+\\\"s@\\\" + name;\\n            } else {\\n                return \\\"toast://未安装\\\";\\n            }\\n        }, dataItem.name,api.home),\\n        col_type: my_col_type\\n    });\\n}\\ndata.push({\\n    col_type: \\\"line_blank\\\"\\n});\\ndata.push({\\n    title: dataItem.good_num,\\n    pic_url: \\\"hiker://files/icon/赞.svg\\\",\\n    col_type: \\\"icon_small_3\\\",\\n    url: \\\"hiker://empty\\\"\\n});\\ndata.push({\\n    title: dataItem.bad_num,\\n    pic_url: \\\"hiker://files/icon/踩.svg\\\",\\n    col_type: \\\"icon_small_3\\\",\\n    url: \\\"hiker://empty\\\"\\n});\\ndata.push({\\n    title: \\\"评论\\\",\\n    pic_url: \\\"hiker://files/icon/评论.svg\\\",\\n    col_type: \\\"icon_small_3\\\",\\n    url: \\\"hiker://page/Reply#noHistory##noRecordHistory#\\\",\\n    extra: {\\n        ruleId: dataItem.id,\\n        name: dataItem.author,\\n        password: password,\\n        username: username\\n    }\\n});\\nlet totalSum = dataItem.good_num + dataItem.bad_num;\\n\\ndata.push({\\n    title: htmlTag(\\\"big\\\", \\\"评论(\\\" + totalSum + \\\")\\\") + \\\"\\\\t\\\\t\\\\t\\\" + small(htmlTag(\\\"u\\\", \\\"查看全部评论(控评) >\\\")),\\n    col_type: \\\"text_1\\\",\\n    url: \\\"hiker://page/Comment\\\",\\n    extra: {\\n        url: \\\"hiker://empty#fypage#noHistory##noRecordHistory#\\\",\\n        id: dataItem.id,\\n        totalSum: totalSum,\\n        no_active: true,\\n        username: username,\\n        password: password\\n    }\\n});\\n//const longestSum=120;\\nlet icon = {\\n    \\\"good\\\": \\\"👍\\\",\\n    \\\"bad\\\": \\\"👎\\\",\\n    \\\"reply\\\": \\\"开发者🗣\\\"\\n}\\nif (totalSum === 0) {\\n    data.push({\\n        title: \\\"<h5 style='text-align:center'>一条评论也没有，快来抢沙发吧！</h5>\\\",\\n        col_type: \\\"rich_text\\\"\\n    });\\n} else {\\n    let commentList = JSON.parse(request(api.dis_get + dataItem.id + \\\"?limit=5\\\")).result;\\n    for (let item of commentList) {\\n        let Reply = item.discuss_type===\\\"reply\\\"&&item.reply_to_name!==false&&item.reply_to_id!==false?\\\"‘‘回复@\\\"+item.reply_to_name+\\\" #\\\"+item.discuss_id+\\\"’’\\\\n\\\":\\\"\\\";\\n        data.push({\\n            title: item.name + \\\"&nbsp;&nbsp;<font color='gray'><small>#\\\" + item.id + \\\"</small><font>\\\",\\n            col_type: \\\"avatar\\\",\\n            url: \\\"hiker://page/Reply\\\",\\n            extra:{\\n                ruleId: dataItem.id,\\n                name: item.name,\\n                password: password,\\n                username: username,\\n                replyId:item.id\\n            },\\n            pic_url: item.avatar_url\\n        });\\n        data.push({\\n            title: item.discuss_text,\\n            desc: Reply+item.create_date + \\\"·\\\" + icon[item.discuss_type],\\n            col_type: \\\"text_1\\\",\\n            url: \\\"hiker://page/info\\\",\\n            extra: {\\n                name: item.name,\\n                type: \\\"long_text\\\",\\n                text: item.discuss_text\\n            },\\n            pic_url: item.avatar_url\\n        });\\n    }\\n}\\ndata.push({\\n    col_type: \\\"line_blank\\\"\\n});\\nsetResult(data);\"},{\"col_type\":\"icon_2_round\",\"name\":\"规则列表\",\"path\":\"rules\",\"rule\":\"js:\\n    addListener('onClose',$.toString(()=>{\\n        clearVar(\\\"Warehouse.back\\\");\\n        clearVar(\\\"Warehouse.filter\\\");\\n        clearVar(\\\"Warehouse.type\\\");\\n        if(getVar('Warehouse.can_upload','')){\\n            log('操作过禁止上传:'+getVar('Warehouse.can_upload'));\\n            clearVar(\\\"Warehouse.can_upload\\\");\\n            refreshPage(true);\\n        }\\n    }));\\n\\nif (getVar(\\\"Warehouse.back\\\") === \\\"1\\\") {\\n    back(false);\\n}\\n\\nconst {\\n    getApi,\\n    api,\\n    color,\\n    small,\\n    localRuleVer,\\n    htmlTag,\\n    md\\n} = $.require(\\\"hiker://page/utiliy\\\");\\nconst { normalSort } = $.require(\\\"hiker://page/sort\\\");\\nlet {\\n    avatarUrl,\\n    qq,\\n    id,\\n    can_upload\\n} = MY_PARAMS;\\nlet dataType = getVar(\\\"Warehouse.type\\\",\\\"\\\");\\nlet backCode = JSON.parse(request(getApi(\\\"rulesUrl\\\") + \\\"?name=\\\" + qq+\\\"&data_type=\\\"+dataType));\\nlet devName = backCode.dev_name;\\nputVar(\\\"Warehouse.filter\\\", devName);\\nlet ruleList = backCode.result;\\nlet subUrl = getApi(\\\"jsonList\\\") + \\\"?name=\\\" + qq;\\nlet hasSub = hasHomeSub(subUrl);\\nlet devInfo = \\\"这个人很懒,什么都没写哦~\\\";\\nlet tmpJson = JSON.parse(request(getApi(\\\"infoGetUrl\\\") + qq));\\nif (tmpJson.status == 0) {\\n    devInfo = tmpJson.result || devInfo;\\n}\\nlet subFlag = hasSub ? '🆗' : '📡';\\nlet data = [];\\nrequire(md);\\ndevInfo=marked.parse(devInfo);\\ndata.push({\\n    title: \\\"““””\\\" + devName + \\\"\\\\n\\\\n\\\" + small(htmlTag(\\\"u\\\", \\\"点击查看完整公告\\\")),\\n    desc: small(devInfo),\\n    url: 'hiker://page/info',\\n    extra: {\\n        text: devInfo,\\n        name: devName,\\n        type:\\\"rich_text\\\"\\n    },\\n    pic_url: avatarUrl,\\n    col_type: 'movie_1_vertical_pic'\\n});\\ndata.push({\\n    title: \\\"<big>订阅管理</big>&nbsp;&nbsp;<small>(当前\\\" + (hasSub ? \\\"已订阅\\\" : \\\"未订阅\\\") + \\\")</small>\\\",\\n    col_type: \\\"rich_text\\\"\\n});\\n\\nlet sub_code = '海阔视界合集规则订阅￥home_sub￥' + devName + \\\"合集@@\\\" + subUrl;\\nlet rulesCode = '海阔视界合集规则￥home_rule_url￥' + subUrl;\\ndata.push({\\n    title: '““””<span style=\\\"color: #ff7000\\\">一键订阅</span>',\\n    desc: '订阅““””<span style=\\\"color: #5cff2c\\\">' + devName + '</span>的所有单规则，合集需单独订阅',\\n    url: sub_code,\\n    col_type: 'text_2'\\n});\\ndata.push({\\n    title: '““””<span style=\\\"color: #ff7000\\\">导入全部</span>',\\n    url: rulesCode,\\n    col_type: 'text_2'\\n});\\ndata.push({\\n    title: '““””<span style=\\\"color: #ff7000\\\">导入轻合集</span>',\\n    url: $().lazyRule((devName,subUrl,avatarUrl)=>{\\n        const {genRule}=$.require(\\\"hiker://page/genApi\\\");\\n        log(\\\"轻合集图标链接:\\\"+avatarUrl);\\n        let import_rule=genRule(\\\"轻合集.\\\"+devName,subUrl,avatarUrl);\\n        //copy(import_rule);\\n        let ruleCode=parsePaste(import_rule.split(\\\"\\\\n\\\")[0]);\\n        //return \\\"hiker://empty\\\"\\n        importUrl = 'rule://' + base64Encode(ruleCode);\\n        return importUrl\\n    },devName,subUrl,avatarUrl),\\n    col_type: 'text_2'\\n});\\ndata.push({\\n    title: '““””<span style=\\\"color: #ff7000\\\">导入道德经</span>',\\n    url: $().lazyRule((devName,subUrl,avatarUrl)=>{\\n        let title = \\\"H-\\\"+devName;\\n        let subObj = {\\n            title: title,\\n            url: subUrl,\\n            desc: \\\"hiker://files/rules/dzHouse/ruleCache/\\\"+title+\\\".json\\\",\\n            code: \\\"\\\",\\n            active: false,//禁用并发更新\\n        }\\n        let shareText = base64Encode(JSON.stringify(subObj));\\n        var pastes = getPastes();\\n        var url = sharePaste(shareText,pastes.slice(-1)[0]);\\n        let import_rule= \\\"轻合集订阅：\\\"+title+'\\\\n'+url;\\n        copy(import_rule);\\n        const path = 'hiker://files/rules/dzHouse/ruleCache/sub.json';\\n        $.rc(config.lib.sub);\\n        return 订阅导入(path)\\n    },devName,subUrl,avatarUrl),\\n    col_type: 'text_2'\\n});\\nlet can_upload_api = getApi(\\\"manCanUpload\\\")+id;\\nif(getVar('house.is_manager')){\\n    let tips = can_upload?'能':'否';\\n    // log('tips:'+tips);\\n    // log('can_upload:'+can_upload);\\n    data.push({\\n        title:'⚠能否上传:'+(getVar('Warehouse.can_upload')||tips),\\n        col_type:'scroll_button',\\n        url:'hiker://empty'\\n    });\\n    function setUpload(flag,can_upload_api) {\\n        flag = flag || '';\\n        try {\\n            let code = fetch(can_upload_api, {\\n                headers: {\\\"User-Agent\\\": MOBILE_UA},\\n                body: {\\n                    \\\"params\\\":\\n                        {\\n                            \\\"username\\\": getVar('house.username'),\\n                            \\\"password\\\": getVar('house.password'),\\n                            \\\"can_upload\\\": !!flag\\n                        }\\n                }\\n            });\\n            code = JSON.parse(code).result;\\n            if (code.status === 0) {\\n                return code.detail\\n            } else {\\n                return '操作失败:' + code.detail\\n            }\\n        } catch (e) {\\n            return '操作失败:' + e.message\\n        }\\n    }\\n    data.push({\\n        title:'🚫禁止上传',\\n        col_type:'scroll_button',\\n        url:$('禁止该开发者上传规则?你的操作将被系统记录').confirm((id,can_upload_api,setUpload)=>{\\n            let ret = setUpload(false,can_upload_api);\\n            if(!/操作失败/.test(ret)){\\n                putVar('Warehouse.can_upload','否');\\n                refreshPage(false);\\n            }\\n            return 'toast://'+ret\\n        },id,can_upload_api,setUpload)\\n    });\\n    data.push({\\n        title:'✅允许上传',\\n        col_type:'scroll_button',\\n        url:$('允许该开发者上传规则?你的操作将被系统记录').confirm((id,can_upload_api,setUpload)=>{\\n            let ret = setUpload(true,can_upload_api);\\n            if(!/操作失败/.test(ret)){\\n                putVar('Warehouse.can_upload','是');\\n                refreshPage(false);\\n            }\\n            return 'toast://'+ret\\n        },id,can_upload_api,setUpload)\\n    });\\n}\\ndata.push({\\n    title: \\\"<small>提示：开发者单独分享的合集文件只能单独导入。</small>\\\",\\n    col_type: \\\"rich_text\\\"\\n});\\ndata.push({\\n    title: \\\"<big>规则列表</big>&nbsp;&nbsp;<small>(共\\\" + ruleList.length + \\\"条)</small>\\\",\\n    col_type: \\\"rich_text\\\"\\n});\\nlet dataTypeList = {\\n    \\\"\\\":\\\"全部\\\",\\n    \\\"home_rule_url\\\": '小程序',\\n    //\\\"publish\\\": '提交云仓库规则',\\n    \\\"js_url\\\": '网页插件',\\n    \\\"html\\\": '静态页面',\\n    \\\"config\\\": '主题'\\n};\\nfor(let key in dataTypeList){\\n    data.push({\\n        title:dataType===key?\\\"““\\\"+dataTypeList[key]+\\\"””\\\":dataTypeList[key],\\n        url:$(\\\"#noLoading#\\\").lazyRule((key)=>{\\n            putVar(\\\"Warehouse.type\\\",key);\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\";\\n        },key),\\n        col_type:\\\"scroll_button\\\"\\n    });\\n}\\nif (ruleList.length > 20) {\\n    data.push({\\n        title: \\\"搜索\\\",\\n        url: $.toString(name => \\\"hiker://search?s=\\\" + input + \\\"&rule=\\\" + name, MY_RULE.title),\\n        col_type: \\\"input\\\",\\n        desc: \\\"搜索当前开发者的规则\\\"\\n    });\\n}\\nlet homeList = JSON.parse(request(api.home));\\nlet mRuleList = [];\\nfor (var item of ruleList) {\\n    var name = item.name;\\n    if (item.is_tap) {\\n        let location = JSON.parse(request(getApi(\\\"ruleListJson\\\") + \\\"?id=\\\" + item.id));\\n        item.id = location.id;\\n        item.name = location.name;\\n        item.author = location.author;\\n        item.data_type = location.data_type;\\n        item.ver = location.ver\\n    }\\n    item.version = item.ver;\\n    let label = \\\"\\\",\\n        lver = -2;\\n    if (item.is_json && item.data_type === \\\"home_rule_url\\\") {\\n        lver = localRuleVer(homeList, item);\\n        if (lver === -1) {\\n            label = \\\"🆕\\\";\\n        } else if (lver < item.ver) {\\n            label = \\\"🆙\\\";\\n        }\\n    }\\n    mRuleList.push({\\n        title: label + name,\\n        url: \\\"hiker://page/ruleDetail#noHistory##noRecordHistory#\\\",\\n        extra: {\\n            lver: lver,\\n            id: item.id\\n        },\\n        pic_url: item.pic,\\n    });\\n}\\n/* 归并排序 Start */\\nif(getItem(\\\"排序\\\",\\\"时间优先\\\")==='新版优先'){\\n    mRuleList = normalSort(mRuleList);\\n}\\n/* 归并排序 End */\\ndata.push.apply(data, mRuleList)\\nsetResult(data);\\n\"},{\"col_type\":\"movie_3\",\"name\":\"规则详细-user\",\"path\":\"ruleDetail\",\"rule\":\"js:\\n    const {\\n        getApi,\\n        color,\\n        small,\\n        htmlTag,\\n        api,\\n        md\\n    } = $.require(\\\"hiker://page/utiliy\\\");\\nlet {\\n    id,\\n    lver,\\n    isAll\\n} = MY_PARAMS;\\nif(getParam(\\\"id\\\")){\\n    isAll = true;\\n    id = getParam(\\\"id\\\");\\n    lver = lver || \\\"未获取版本号\\\";\\n}\\naddListener('onClose', $.toString((isAll) => {\\n    if(!isAll){\\n        refreshPage(false);\\n    }\\n},isAll));\\nlet dataItem = JSON.parse(request(getApi(\\\"getbyid\\\") + \\\"?id=\\\" + id)).result;\\nsetPageTitle(\\\"「\\\" + dataItem.name + \\\"」\\\")\\nlet ruleListJson = getApi(\\\"ruleListJson\\\") + \\\"?id=\\\";\\nlet data = [];\\nvar hasSub = false;\\n\\nif (dataItem.is_json_list) {\\n    hasSub = hasHomeSub(ruleListJson + dataItem.id);\\n} else if (!dataItem.is_json_list && dataItem.data_type == 'home_rule_url') {\\n    hasSub = hasHomeSub(ruleListJson + dataItem.id + '&debug=true');\\n}\\n\\ndata.push({\\n    title: htmlTag(\\\"big\\\", \\\"版本\\\"),\\n    desc: \\\"““””开发者：\\\" + color(dataItem.author, \\\"#228BE6\\\") + \\\"\\\\n云端版本：\\\" + color(dataItem.ver, \\\"#5cff2c\\\") + \\\"\\\\t\\\\t本地版本：\\\" + color(lver, \\\"#5cff2c\\\") + \\\"\\\\n更新于: [\\\" + color(dataItem.last_update, \\\"#ff7000\\\") + \\\"]\\\",\\n    url: $(\\\"<开发者>\\\\n\\\" + dataItem.author + \\\"\\\\n<名称>\\\\n\\\" + dataItem.name + \\\"\\\\n<云端版本>\\\\n\\\" + dataItem.ver + \\\"\\\\n<本地版本>\\\\n\\\" + lver + \\\"\\\\n<更新时间>\\\\n[\\\" + dataItem.last_update + \\\"]\\\").confirm(() => {}),\\n    col_type: 'text_1'\\n});\\nlet dataType = {\\n    home_rule_url: '首页云规则',\\n    publish: '提交云仓库规则',\\n    js_url: '网页插件规则',\\n    html: '静态页面',\\n    config: '主页配置'\\n};\\n\\nlet basic = {\\n    col_type: \\\"text_1\\\",\\n    url: \\\"hiker://empty\\\"\\n};\\nlet dataTypeTips = dataType[dataItem.data_type] || '未知规则：' + dataItem.data_type;\\n\\nlet safe_tip=dataItem.is_safe?\\\"安全\\\":\\\"危险\\\";\\nlet good_tip = dataItem.is_good?small(color(\\\"【优质规则】\\\",'#ff7000')):\\\"\\\";\\nlet not_safe_note=dataItem.not_safe_note;\\nbasic.title = htmlTag(\\\"big\\\", \\\"类型\\\") + \\\"\\\\t\\\\t\\\\t\\\" + small(\\\"(id:\\\" + dataItem.id + \\\")\\\")+\\\"\\\\t\\\\t\\\\t\\\" + small(\\\"(风险检测:\\\" +safe_tip+\\\")\\\")+good_tip;\\nbasic.desc = \\\"数据类型：\\\" + color(dataTypeTips, \\\"#cb54ff\\\") + \\\"\\\\n分享状态为：\\\" + dataItem.state;\\nif ([\\\"html\\\", \\\"config\\\", \\\"js_url\\\"].includes(dataItem.data_type)) {\\n    basic.desc += \\\"\\\\n““”” =>\\\" + small(\\\"点此预览\\\");\\n    basic.url = ruleListJson + dataItem.id;\\n}\\n\\ndata.push(basic);\\nlet hasSubs = \\\"\\\";\\nif (hasSub) {\\n    hasSubs = \\\"\\\\t\\\\t\\\\t\\\" + small(\\\"已订阅\\\")\\n}\\n\\nlet notes = request(getApi(\\\"get_rule_note\\\") + id);\\nnotes = JSON.parse(notes).result;\\nrequire(md);\\nlet notesHtml=\\\"\\\"\\ntry{\\n    notesHtml=marked.parse(notes);\\n}catch(e){}\\n\\nif (notes !== false) {\\n    data.push({\\n        title: htmlTag(\\\"big\\\", \\\"备注\\\") + \\\"\\\\t\\\\t\\\\t\\\" + small(htmlTag(\\\"u\\\", \\\"查看完整公告 >\\\")),\\n        desc: notes,\\n        col_type: \\\"text_1\\\",\\n        url: \\\"hiker://page/info\\\",\\n        extra: {\\n            text: notesHtml,\\n            name: dataItem.name,\\n            // type: \\\"long_text\\\"\\n            type: \\\"rich_text\\\"\\n        }\\n    });\\n}\\ndata.push({\\n    title: htmlTag(\\\"big\\\", \\\"操作(分享详细页)\\\") + hasSubs,\\n    col_type: \\\"text_1\\\",\\n    url: \\\"copy://道长仓库「\\\"+dataItem.name+\\\"」\\\\n\\\"+id+'@import=js:$.require(\\\"hiker://page/ruleDetailImport?rule=道长仓库Pro\\\", input)'\\n});\\nlet importUrl, ruleCode, shareUrl, backCode = \\\"\\\";\\nif (!dataItem.is_json) {\\n    backCode = request(ruleListJson + dataItem.id);\\n}\\nswitch (dataItem.data_type) {\\n    case \\\"home_rule_url\\\":\\n        ruleCode = \\\"海阔视界首页频道规则【\\\" + dataItem.name + \\\"】￥home_rule_url￥\\\" + ruleListJson + dataItem.id;\\n        importUrl = \\\"rule://\\\" + base64Encode(ruleCode)\\n        break;\\n    case 'publish':\\n        ruleCode = '海阔视界规则分享，当前分享的是：' + dataItem.name + '￥publish￥' + base64Encode(backCode);\\n        importUrl = 'rule://' + base64Encode(ruleCode);\\n        break;\\n    case 'js_url':\\n        ruleCode = '海阔视界规则分享，当前分享的是：网页插件￥js_url￥' + dataItem.name + '@base64://' + base64Encode(backCode);\\n        importUrl = 'rule://' + base64Encode(ruleCode);\\n        break;\\n    case 'html':\\n        let file_tmp = dataItem.name.split('.');\\n        let file_path = file_tmp.length > 1 ? file_tmp[file_tmp.length - 1] + \\\"/\\\" + dataItem.name : dataItem.name;\\n        ruleCode = \\\"海阔视界本地文件分享￥file_url￥hiker://files/rules/dzHouse/\\\" + file_path + \\\"@\\\" + ruleListJson + dataItem.id;\\n        importUrl = 'rule://' + base64Encode(ruleCode);\\n        break\\n    case \\\"config\\\":\\n        importUrl = $().rule(password => {\\n            eval(fetch(\\\"hiker://assets/home.js\\\"));\\n            HikerHome.load(\\\"import\\\", password);\\n        }, backCode);\\n        break;\\n}\\nlet my_col_type = \\\"text_2\\\";\\nlet my_col_type2 = \\\"text_3\\\";\\nif (importUrl) {\\n    data.push({\\n        title: \\\"导入规则\\\",\\n        url: dataItem.is_safe?importUrl:'toast://风险规则禁止导入!!!',\\n        col_type: my_col_type\\n    });\\n}\\nif (ruleCode) {\\n    data.push({\\n        title: \\\"分享口令\\\",\\n        url: \\\"copy://\\\" + ruleCode,\\n        col_type: my_col_type\\n    });\\n}\\n\\nif (importUrl) {\\n    if (dataItem.is_json_list && !hasSub) {\\n        let sub_rule_code = '海阔视界合集规则订阅￥home_sub￥' + dataItem.name + \\\"@@\\\" + ruleListJson + dataItem.id;\\n        let sub_url = 'rule://' + base64Encode(sub_rule_code);\\n        data.push({\\n            title: '订阅合集',\\n            url: sub_url,\\n            col_type: my_col_type2\\n        });\\n        data.push({\\n            title: '““””<span style=\\\"color: #ff7000\\\">导入轻合集</span>',\\n            url: $().lazyRule((dataItem,subUrl)=>{\\n                const {genRule}=$.require(\\\"hiker://page/genApi\\\");\\n                let import_rule=genRule(dataItem.name+\\\".\\\"+dataItem.author,subUrl);\\n                //copy(import_rule);\\n                let ruleCode=parsePaste(import_rule.split(\\\"\\\\n\\\")[0]);\\n                //return \\\"hiker://empty\\\"\\n                importUrl = 'rule://' + base64Encode(ruleCode);\\n                return importUrl\\n            },dataItem,ruleListJson + dataItem.id),\\n            col_type: my_col_type2\\n        });\\n        data.push({\\n            title: '““””<span style=\\\"color: #ff7000\\\">导入道德经</span>',\\n            url: $().lazyRule((dataItem,subUrl)=>{\\n                // let title = \\\"H-\\\"+dataItem.name+\\\".\\\"+dataItem.author;\\n                let title = \\\"J-\\\"+dataItem.name.split('.')[0];\\n                let subObj = {\\n                    title: title,\\n                    url: subUrl,\\n                    desc: \\\"hiker://files/rules/dzHouse/ruleCache/\\\"+title+\\\".json\\\",\\n                    code: \\\"\\\",\\n                    active: false,//禁用并发更新\\n                }\\n                let shareText = base64Encode(JSON.stringify(subObj));\\n                var pastes = getPastes();\\n                var url = sharePaste(shareText,pastes.slice(-1)[0]);\\n                let import_rule= \\\"轻合集订阅：\\\"+title+'\\\\n'+url;\\n                copy(import_rule);\\n                const path = 'hiker://files/rules/dzHouse/ruleCache/sub.json';\\n                $.rc(config.lib.sub);\\n                return 订阅导入(path)\\n            },dataItem,ruleListJson + dataItem.id),\\n            col_type: my_col_type2\\n        });\\n        data.push({\\n            title: \\\"<small>提示：开发者单独分享的合集文件只能单独导入。</small>\\\",\\n            col_type: \\\"rich_text\\\"\\n        });\\n    } else if (!dataItem.is_json_list && !hasSub && dataItem.data_type == 'home_rule_url') {\\n        let sub_rule_code = '海阔视界单规则订阅￥home_sub￥' + dataItem.name + \\\"@@\\\" + ruleListJson + dataItem.id + '&debug=true';\\n        let sub_url = 'rule://' + base64Encode(sub_rule_code);\\n        data.push({\\n            title: '订阅规则',\\n            url: sub_url,\\n            col_type: my_col_type\\n        })\\n    }\\n}\\nif (dataItem.is_json && dataItem.data_type === \\\"home_rule_url\\\" && !dataItem.is_json_list) {\\n    data.push({\\n        title: '进入频道',\\n        url: $( /*\\\"#noLoading#\\\"*/ ).lazyRule((name,home) => {\\n            let ruleList = JSON.parse(request(home));\\n            let hasRule = ruleList.some(item => item.title === name);\\n            if (hasRule) {\\n                putVar(\\\"Warehouse.back\\\", \\\"1\\\");\\n                back();\\n                return home+\\\"s@\\\" + name;\\n            } else {\\n                return \\\"toast://未安装\\\";\\n            }\\n        }, dataItem.name,api.home),\\n        col_type: my_col_type\\n    })\\n}\\nlet man_rule_safe = getApi(\\\"manRuleSafe\\\")+dataItem.id;\\nlet man_rule_good = getApi(\\\"manRuleGood\\\")+dataItem.id;\\n// dataItem.is_safe;\\nif(getVar('house.is_manager')){\\n    function setIsSafe(flag,man_rule_safe) {\\n        flag = flag || '';\\n        try {\\n            let code = fetch(man_rule_safe, {\\n                headers: {\\\"User-Agent\\\": MOBILE_UA},\\n                body: {\\n                    \\\"params\\\":\\n                        {\\n                            \\\"username\\\": getVar('house.username'),\\n                            \\\"password\\\": getVar('house.password'),\\n                            \\\"is_safe\\\": !!flag\\n                        }\\n                }\\n            });\\n            code = JSON.parse(code).result;\\n            if (code.status === 0) {\\n                return code.detail\\n            } else {\\n                return '操作失败:' + code.detail\\n            }\\n        } catch (e) {\\n            return '操作失败:' + e.message\\n        }\\n    }\\n    function setIsGood(flag,man_rule_good) {\\n        flag = flag || '';\\n        try {\\n            let code = fetch(man_rule_good, {\\n                headers: {\\\"User-Agent\\\": MOBILE_UA},\\n                body: {\\n                    \\\"params\\\":\\n                        {\\n                            \\\"username\\\": getVar('house.username'),\\n                            \\\"password\\\": getVar('house.password'),\\n                            \\\"is_good\\\": !!flag\\n                        }\\n                }\\n            });\\n            code = JSON.parse(code).result;\\n            if (code.status === 0) {\\n                return code.detail\\n            } else {\\n                return '操作失败:' + code.detail\\n            }\\n        } catch (e) {\\n            return '操作失败:' + e.message\\n        }\\n    }\\n    data.push({\\n        title:'🚫风险',\\n        col_type:'scroll_button',\\n        url:$('标记该规则为风险?风险规则无法被导入').confirm((id,man_rule_safe,setIsSafe)=>{\\n            let ret = setIsSafe(false,man_rule_safe);\\n            if(!/操作失败/.test(ret)){\\n                refreshPage(false);\\n            }\\n            return 'toast://'+ret\\n        },dataItem.id,man_rule_safe,setIsSafe)\\n    });\\n    data.push({\\n        title:'✅正常',\\n        col_type:'scroll_button',\\n        url:$('标记该规则为正常?').confirm((id,man_rule_safe,setIsSafe)=>{\\n            let ret = setIsSafe(true,man_rule_safe);\\n            if(!/操作失败/.test(ret)){\\n                refreshPage(false);\\n            }\\n            return 'toast://'+ret\\n        },dataItem.id,man_rule_safe,setIsSafe)\\n    });\\n    data.push({\\n        title:'♥非优质',\\n        col_type:'scroll_button',\\n        url:$('标记该规则为非优质?').confirm((id,man_rule_good,setIsGood)=>{\\n            let ret = setIsGood(false,man_rule_good);\\n            if(!/操作失败/.test(ret)){\\n                refreshPage(false);\\n            }\\n            return 'toast://'+ret\\n        },dataItem.id,man_rule_good,setIsGood)\\n    });\\n    data.push({\\n        title:'💖优质',\\n        col_type:'scroll_button',\\n        url:$('标记该规则为优质?').confirm((id,man_rule_good,setIsGood)=>{\\n            let ret = setIsGood(true,man_rule_good);\\n            if(!/操作失败/.test(ret)){\\n                refreshPage(false);\\n            }\\n            return 'toast://'+ret\\n        },dataItem.id,man_rule_good,setIsGood)\\n    });\\n}\\n\\ndata.push({\\n    col_type: \\\"line_blank\\\"\\n});\\ndata.push({\\n    title: dataItem.good_num,\\n    pic_url: \\\"hiker://files/icon/赞.svg\\\",\\n    col_type: \\\"icon_small_3\\\",\\n    url: \\\"hiker://page/MakeAcomment#noHistory##noRecordHistory#\\\",\\n    extra: {\\n        id: dataItem.id,\\n        name: dataItem.name\\n    }\\n});\\ndata.push({\\n    title: dataItem.bad_num,\\n    pic_url: \\\"hiker://files/icon/踩.svg\\\",\\n    col_type: \\\"icon_small_3\\\",\\n    url: \\\"hiker://page/MakeAcomment#noHistory##noRecordHistory#\\\",\\n    extra: {\\n        id: dataItem.id,\\n        name: dataItem.name,\\n        defaultType:\\\"bad\\\"\\n    }\\n});\\ndata.push({\\n    title: \\\"评论\\\",\\n    pic_url: \\\"hiker://files/icon/评论.svg\\\",\\n    col_type: \\\"icon_small_3\\\",\\n    url: \\\"hiker://page/MakeAcomment#noHistory##noRecordHistory#\\\",\\n    extra: {\\n        id: dataItem.id,\\n        name: dataItem.name\\n    }\\n});\\nlet totalSum = dataItem.good_num + dataItem.bad_num;\\n\\ndata.push({\\n    title: htmlTag(\\\"big\\\", \\\"评论(\\\" + totalSum + \\\")\\\") + \\\"\\\\t\\\\t\\\\t\\\" + small(htmlTag(\\\"u\\\", \\\"查看全部评论 >\\\")),\\n    col_type: \\\"text_1\\\",\\n    url: \\\"hiker://page/Comment\\\",\\n    extra: {\\n        url: \\\"hiker://empty#fypage#noHistory##noRecordHistory#\\\",\\n        id: dataItem.id,\\n        totalSum: totalSum,\\n        no_active: false\\n    }\\n});\\n//const longestSum=120;\\nlet icon = {\\n    \\\"good\\\": \\\"👍\\\",\\n    \\\"bad\\\": \\\"👎\\\",\\n    \\\"reply\\\":\\\"开发者🗣\\\"\\n}\\nif (totalSum === 0) {\\n    data.push({\\n        title: \\\"<h5 style='text-align:center'>一条评论也没有，快来抢沙发吧！</h5>\\\",\\n        col_type: \\\"rich_text\\\"\\n    });\\n} else {\\n    let commentList = JSON.parse(request(api.dis_get + dataItem.id + \\\"?limit=5\\\")).result;\\n    for (let item of commentList) {\\n        let Reply = item.discuss_type===\\\"reply\\\"&&item.reply_to_name!==false&&item.reply_to_id!==false?\\\"‘‘回复@\\\"+item.reply_to_name+\\\" #\\\"+item.discuss_id+\\\"’’\\\\n\\\":\\\"\\\";\\n        data.push({\\n            title: item.name + \\\"&nbsp;&nbsp;<font color='gray'><small>#\\\" + item.id + \\\"</small><font>\\\",\\n            col_type: \\\"avatar\\\",\\n            //url: \\\"toast://\\\" + item.qq,\\n            url:\\\"mqqwpa://im/chat?chat_type=wpa&uin=\\\"+item.qq,\\n            pic_url: item.avatar_url\\n        });\\n        data.push({\\n            title: item.discuss_text,\\n            desc: Reply+item.create_date + \\\"·\\\" + icon[item.discuss_type],\\n            col_type: \\\"text_1\\\",\\n            url: \\\"hiker://page/info\\\",\\n            extra:{\\n                name:item.name,\\n                type:\\\"long_text\\\",\\n                text:item.discuss_text\\n            },\\n            pic_url: item.avatar_url\\n        });\\n    }\\n    data.push({\\n        col_type: \\\"line_blank\\\"\\n    });\\n}\\n\\nsetResult(data);\"},{\"col_type\":\"rich_text\",\"name\":\"查看\",\"path\":\"info\",\"rule\":\"js:\\nsetPageTitle(\\\"查看「\\\"+MY_PARAMS.name+\\\"」\\\")\\nsetResult([{\\n    title: MY_PARAMS.text,\\n    col_type:MY_PARAMS.type\\n}]);\"},{\"col_type\":\"movie_3\",\"name\":\"开发者注册\",\"path\":\"Register\",\"rule\":\"js:\\nsetPageTitle(\\\"开发者注册\\\");\\nconst {\\n    getApi,\\n    htmlTag,\\n    mapColType,\\n    small\\n} = $.require(\\\"hiker://page/utiliy\\\");\\nvar data = [];\\naddListener('onClose', $.toString(() => {\\n    clearVar(\\\"Warehouse.Password\\\");\\n    clearVar(\\\"Warehouse.Username\\\");\\n    clearVar(\\\"Warehouse.Description\\\");\\n    clearVar(\\\"Warehouse.UserAddress\\\");\\n}));\\naddListener('onRefresh', $.toString(()=>{\\n    putVar(\\\"Warehouse.Wait\\\", \\\"\\\");\\n}));\\ndata.push({\\n    title: '账号',\\n    desc: \\\"请输入账号(必填)\\\",\\n    col_type: 'input',\\n    extra: {\\n        defaultValue: getVar('Warehouse.Username', ''),\\n        type: \\\"number\\\",\\n        onChange: 'putVar(\\\"Warehouse.Username\\\",input)'\\n    }\\n}, {\\n    title: '密码',\\n    desc: \\\"请输入密码(必填)\\\",\\n    col_type: 'input',\\n    extra: {\\n        defaultValue: getVar('Warehouse.Password', ''),\\n        type: \\\"password\\\",\\n        onChange: 'putVar(\\\"Warehouse.Password\\\",input)'\\n    }\\n});\\nmapColType(data, \\\"line_blank\\\", 1);\\ndata.push({\\n    title: '昵称',\\n    desc: \\\"请输入昵称(必填)\\\",\\n    col_type: 'input',\\n    extra: {\\n        defaultValue: getVar('Warehouse.UserAddress', ''),\\n        onChange: 'putVar(\\\"Warehouse.UserAddress\\\",input)'\\n    }\\n}, {\\n    title: '描述',\\n    desc: \\\"说说为什么要注册吧\\\\n(可以增加通过概率,选填)\\\",\\n    col_type: 'input',\\n    extra: {\\n        defaultValue: getVar('Warehouse.Description', ''),\\n        type: \\\"textarea\\\",\\n        onChange: 'putVar(\\\"Warehouse.Description\\\",input)'\\n    }\\n})\\n\\nmapColType(data, \\\"line_blank\\\", 1);\\n\\ndata.push({\\n    title: htmlTag(\\\"b\\\", \\\"注册\\\"),\\n    url: $(getApi(\\\"new_dev\\\")+\\\"#noLoading#\\\").lazyRule((getId, confirm) => {\\n        let username = getVar('Warehouse.Username', \\\"\\\"),\\n            password = getVar('Warehouse.Password', \\\"\\\"),\\n            description = getVar('Warehouse.Description', \\\"\\\"),\\n            name = getVar(\\\"Warehouse.UserAddress\\\", \\\"\\\");\\n        if ([username, password, name].includes(\\\"\\\")) {\\n            return \\\"toast://账号,密码和昵称不能为空\\\";\\n        }\\n        showLoading(\\\"正在提交申请表\\\");\\n        let result = request(input, {\\n            headers: {\\n                'content-type': 'application/json'\\n            },\\n            body: JSON.stringify({\\n                \\\"params\\\": {\\n                    \\\"reason\\\": description,\\n                    \\\"name\\\": name,\\n                    \\\"password\\\": password,\\n                    \\\"qq\\\": username\\n                }\\n            }),\\n            method: 'post'\\n        });\\n        result = JSON.parse(result).result;\\n        hideLoading();\\n        if (result.status !== 0) {\\n            return \\\"toast://\\\" + result.detail;\\n        }\\n        let idresult = JSON.parse(request(getId + \\\"?qq=\\\" + username));\\n        if (idresult.status !== 0) {\\n            return \\\"toast://\\\" + idresult.detail;\\n        }\\n        \\n        return $(\\\"\\\", \\\"输入邮箱验证码\\\\n\\\" + result.detail).input((confirm, id, account) => {\\n            showLoading(\\\"请耐心等待\\\");\\n            try {\\n                let result = request(confirm, {\\n                    headers: {\\n                        'content-type': 'application/json'\\n                    },\\n                    body: JSON.stringify({\\n                        \\\"params\\\": {\\n                            \\\"regist_id\\\": id,\\n                            \\\"yzm\\\": input\\n                        }\\n                    }),\\n                    method: 'POST'\\n                });\\n                result = JSON.parse(result).result;\\n                if (result.status !== 0) {\\n                    hideLoading();\\n                    return \\\"toast://\\\" + result.detail;\\n                } else {\\n                    putVar(\\\"WarehouseUsername\\\", account[0]);\\n                    putVar(\\\"WarehousePassword\\\", account[1]);\\n                    hideLoading();\\n                    back();\\n                    return \\\"toast://成功提交注册注册\\\\n\\\"+result.detail;\\n                }\\n            } catch (e) {\\n                hideLoading();\\n                return \\\"toast://出错了呐\\\";\\n            }\\n        }, confirm, idresult.result, [username, password]);\\n    }, getApi(\\\"new_getId\\\"), getApi(\\\"new_confirm\\\")),\\n    col_type: 'text_center_1'\\n});\\nsetResult(data);\"},{\"col_type\":\"text_1\",\"name\":\"个人资料\",\"path\":\"PersonalData\",\"rule\":\"js:\\nsetPageTitle(\\\"个人资料\\\");\\nvar data=[];\\nconst {\\n    getApi,\\n    getFile,\\n    api\\n} = $.require(\\\"hiker://page/utiliy\\\");\\n\\ndata.push({\\n    col_type:\\\"line_blank\\\"\\n});\\n\\nlet {username,password} = getFile();\\nlet dev = JSON.parse(request(getApi(\\\"user\\\")+MY_PARAMS.id)).result;\\ndata.push({\\n    title:\\\"头像\\\",\\n    desc:dev.avatar,\\n    url:\\\"hiker://page/modify_PersonalData#noHistory##noRecordHistory#\\\",\\n    extra:{\\n        dev:dev,\\n        username:username,\\n        password:password,\\n        Pattern:0\\n    },\\n    col_type:\\\"text_1\\\"\\n});\\n\\n\\ndata.push({\\n    title:\\\"昵称\\\",\\n    desc:dev.name,\\n    url:\\\"hiker://page/modify_PersonalData#noHistory##noRecordHistory#\\\",\\n    extra:{\\n        dev:dev,\\n        username:username,\\n        password:password,\\n        Pattern:1\\n    },\\n    col_type:\\\"text_1\\\"\\n});\\n\\ndata.push({\\n    title:\\\"密码\\\",\\n    url:\\\"hiker://page/modify_PersonalData#noHistory##noRecordHistory#\\\",\\n    extra:{\\n        dev:dev,\\n        username:username,\\n        password:password,\\n        Pattern:2\\n    },\\n    col_type:\\\"text_1\\\"\\n});\\ndata.push({\\n    col_type:\\\"line_blank\\\"\\n});\\ndata.push({\\n    title:\\\"账号：\\\"+username,\\n    url:\\\"copy://\\\"+username,\\n    col_type:\\\"text_1\\\"\\n});\\ndata.push({\\n    title:\\\"UID：\\\"+dev.id,\\n    url:\\\"copy://\\\"+dev.id,\\n    col_type:\\\"text_1\\\"\\n});\\ndata.push({\\n    col_type:\\\"line_blank\\\"\\n});\\ndata.push({\\n    title:\\\"提交云仓库规则\\\",\\n    url:$(\\\"#noLoading#\\\").lazyRule((host)=>{\\n        let code=request(host+\\\"/hikerule/rulelist.json?id=145\\\");\\n        let word=\\\"￥publish￥\\\"+base64Encode(code);\\n        return \\\"rule://\\\"+base64Encode(word);\\n    },api.host),\\n    col_type:\\\"text_1\\\"\\n});\\ndata.push({\\n    title:\\\"同步提交云仓库账号密码\\\",\\n    url:\\\"rule://\\\"+base64Encode(\\\"￥publish_account￥\\\"+username+\\\"@\\\"+password),\\n    col_type:\\\"text_1\\\"\\n});\\ndata.push({\\n    col_type:\\\"line_blank\\\"\\n});\\ndata.push({\\n    title:\\\"你一共发布了「\\\"+dev.rule_num+\\\"」条规则\\\",\\n    url:\\\"hiker://empty\\\",\\n    col_type:\\\"text_1\\\"\\n});\\ndata.push({\\n    col_type:\\\"line_blank\\\"\\n});\\nlet user = getFile();\\ndata.push({\\n    title:\\\"注销登录\\\",\\n    url:$(\\\"确认注销登录?\\\").confirm(f => {\\n        f.username=\\\"\\\";\\n        f.password=\\\"\\\";\\n        writeFile('hiker://files/WarehouseUSER.json', JSON.stringify(f));\\n        putVar(\\\"Warehouse.back\\\",\\\"1\\\");\\n        back();\\n        return \\\"toast://已注销\\\";\\n    },user),\\n    col_type:\\\"text_center_1\\\"\\n});\\nsetResult(data);\"},{\"col_type\":\"movie_3\",\"name\":\"更改个人资料\",\"path\":\"modify_PersonalData\",\"rule\":\"js:\\nconst {\\n    getApi,\\n    color,\\n    small,\\n    getFile,\\n    htmlTag\\n} = $.require(\\\"hiker://page/utiliy\\\");\\nlet {\\n    dev,\\n    username,\\n    password,\\n    Pattern\\n} = MY_PARAMS;\\nvar data = [];\\nlet path = \\\"?qq=\\\" + username + \\\"&password=\\\" + password;\\naddListener('onClose', $.toString(() => {\\n    clearVar(\\\"Warehouse.m.petName\\\");\\n    clearVar(\\\"Warehouse.m.avatar\\\");\\n    clearVar(\\\"Warehouse.m.Password.c\\\");\\n    clearVar(\\\"Warehouse.m.Password.x\\\");\\n    clearVar(\\\"Warehouse.m.Password.y\\\");\\n}));\\nfunction m_petName() {\\n    data.push({\\n        col_type: \\\"line_blank\\\"\\n    });\\n    data.push({\\n        col_type: 'input',\\n        desc: \\\"请输入新昵称\\\",\\n        extra: {\\n            titleVisible: false,\\n            defaultValue: getVar('Warehouse.m.petName', '')||dev.name,\\n            onChange: 'putVar(\\\"Warehouse.m.petName\\\",input)'\\n        }\\n    });\\n    data.push({\\n        col_type: \\\"line_blank\\\"\\n    });\\n    data.push({\\n        title: \\\"保存\\\",\\n        url: $(getApi(\\\"modify_name\\\") + path).lazyRule(() => {\\n            let newPetName = getVar('Warehouse.m.petName', '');\\n            if (newPetName == \\\"\\\") {\\n                return \\\"toast://你还什么都没填啊!\\\";\\n            }\\n            let result = request(input + \\\"&name=\\\" + encodeURIComponent(newPetName));\\n            result = JSON.parse(result);\\n            if (result.status === 0) {\\n                back();\\n                return \\\"toast://修改成功\\\";\\n            } else {\\n                return \\\"toast://\\\" + result.detail;\\n            }\\n        }),\\n        col_type: 'text_center_1'\\n    });\\n}\\n\\nfunction m_avatar() {\\n    data.push({\\n        col_type: \\\"line_blank\\\"\\n    });\\n    data.push({\\n        col_type: 'input',\\n        desc: \\\"请输入新的头像链接\\\",\\n        extra: {\\n            titleVisible: false,\\n            defaultValue: getVar('Warehouse.m.avatar', '') || dev.avatar,\\n            onChange: 'putVar(\\\"Warehouse.m.avatar\\\",input)'\\n        }\\n    });\\n    data.push({\\n        col_type: \\\"line_blank\\\"\\n    });\\n    data.push({\\n        title: \\\"保存\\\",\\n        url: $(getApi(\\\"modify_ava\\\") + path).lazyRule(() => {\\n            let newAvatar = getVar('Warehouse.m.avatar', '');\\n            \\n            let result = request(input + \\\"&avatar_url=\\\" + encodeURIComponent(newAvatar));\\n            result = JSON.parse(result);\\n            if (result.status === 0) {\\n                back();\\n                return \\\"toast://修改成功\\\";\\n            } else {\\n                return \\\"toast://\\\" + result.detail;\\n            }\\n        }),\\n        col_type: 'text_center_1'\\n    });\\n}\\n\\nfunction m_pwd() {\\n    data.push({\\n        col_type: \\\"line_blank\\\"\\n    });\\n    data.push({\\n        title:\\\"原密码\\\",\\n        col_type: 'input',\\n        desc: \\\"请输入原密码\\\",\\n        extra: {\\n            type:\\\"password\\\",\\n            defaultValue: getVar('Warehouse.m.Password.y', ''),\\n            onChange: 'putVar(\\\"Warehouse.m.Password.y\\\",input)'\\n        }\\n    });\\n    data.push({\\n        col_type: \\\"line_blank\\\"\\n    });\\n    data.push({\\n        title:\\\"新密码\\\",\\n        col_type: 'input',\\n        desc: \\\"请输入新密码\\\",\\n        extra: {\\n            type:\\\"password\\\",\\n            defaultValue: getVar('Warehouse.m.Password.x', ''),\\n            onChange: 'putVar(\\\"Warehouse.m.Password.x\\\",input)'\\n        }\\n    });\\n    data.push({\\n        title:\\\"重复新密码\\\",\\n        col_type: 'input',\\n        desc: \\\"请重复新密码\\\",\\n        extra: {\\n            type:\\\"password\\\",\\n            titleVisible: false,\\n            defaultValue: getVar('Warehouse.m.Password.c', ''),\\n            onChange: 'putVar(\\\"Warehouse.m.Password.c\\\",input)'\\n        }\\n    });\\n    data.push({\\n        col_type: \\\"line_blank\\\"\\n    });\\n    data.push({\\n        title: \\\"保存\\\",\\n        url: $(getApi(\\\"modify_pwd\\\")+path).lazyRule((password,username) => {\\n            let old_password = getVar('Warehouse.m.Password.y', '');\\n            let new_password = getVar('Warehouse.m.Password.x', '');\\n            let new_password_again = getVar('Warehouse.m.Password.c', '');\\n            if (old_password!==password) {\\n                return \\\"toast://原密码错误\\\";\\n            }\\n            if(new_password===\\\"\\\"){\\n                return \\\"toast://请输入新密码\\\";\\n            }\\n            if(new_password!==new_password_again){\\n                return \\\"toast://两次密码不同\\\"\\n            }\\n            let result = request(input + \\\"&new_password=\\\" + new_password+\\\"&new_password_re=\\\"+new_password_again);\\n            result = JSON.parse(result);\\n            if (result.status === 0) {\\n                writeFile(\\\"hiker://files/WarehouseUSER.json\\\",JSON.stringify({\\n                    username:username,\\n                    password:new_password\\n                }));\\n                back();\\n                return \\\"toast://修改成功\\\";\\n            } else {\\n                return \\\"toast://\\\" + result.detail;\\n            }\\n        },password,username),\\n        col_type: 'text_center_1'\\n    });\\n}\\n\\nswitch (Pattern) {\\n    case 0:\\n        setPageTitle(\\\"修改头像\\\");\\n        m_avatar();\\n        break;\\n    case 1:\\n        setPageTitle(\\\"修改昵称\\\");\\n        m_petName();\\n        break;\\n    case 2:\\n        setPageTitle(\\\"修改密码\\\");\\n        m_pwd();\\n        break;\\n}\\nsetResult(data);\"},{\"col_type\":\"movie_3\",\"name\":\"编辑规则备注\",\"path\":\"set_rule_notes\",\"rule\":\"js:\\nlet data = [];\\nconst {\\n    getApi\\n} = $.require(\\\"hiker://page/utiliy\\\");\\nlet {\\n    id,\\n    username,\\n    password,\\n    name\\n} = MY_PARAMS;\\nsetPageTitle(\\\"备注「\\\"+name+\\\"」\\\");\\naddListener('onClose',\\\"clearVar('Warehouse.rule.notes', '')\\\");\\nlet notes=request(getApi(\\\"get_rule_note\\\")+id);\\nnotes=JSON.parse(notes).result;\\ndata.push({\\n    desc: \\\"规则备注......\\\",\\n    col_type: 'input',\\n    extra: {\\n        titleVisible: false,\\n        defaultValue: getVar('Warehouse.rule.notes', '')||notes||\\\"\\\",\\n        type: \\\"textarea\\\",\\n        height:-1,\\n        onChange: 'putVar(\\\"Warehouse.rule.notes\\\",input)'\\n    }\\n});\\n\\ndata.push({\\n    title: \\\"保存\\\",\\n    col_type: \\\"text_center_1\\\",\\n    url: $(getApi(\\\"set_rule_note\\\") + id).lazyRule((username, password) => {\\n        let notes = getVar('Warehouse.rule.notes', '');\\n        let result = request(input, {\\n            headers: {\\n                'content-type': 'application/json'\\n            },\\n            body: JSON.stringify({\\n                \\\"params\\\": {\\n                    \\\"qq\\\": username,\\n                    \\\"password\\\": password,\\n                    \\\"note\\\":notes\\n                }\\n            }),\\n            method: 'POST'\\n        });\\n        result = JSON.parse(result).result;\\n        if (result.status !== 0) {\\n            return \\\"toast://\\\" + result.detail;\\n        }\\n        back(false);\\n        return \\\"toast://修改成功\\\";\\n    }, username, password)\\n});\\nsetResult(data);\"},{\"col_type\":\"line\",\"name\":\"评论列表\",\"path\":\"Comment\",\"rule\":\"js:\\nsetPageTitle(\\\"评论列表\\\");\\nconst {\\n    api\\n} = $.require(\\\"hiker://page/utiliy\\\");\\nlet data = [];\\nlet {\\n    totalSum,\\n    id,\\n    no_active,\\n    username,\\n    password\\n} = MY_PARAMS;\\nlet page = parseInt(MY_URL.split(\\\"#\\\")[1]);\\nlet discuss_type = getVar(\\\"Warehouse.comment.discuss_type\\\", \\\"\\\");\\nif (page === 1) {\\n    data.push({\\n        col_type: \\\"line_blank\\\"\\n    });\\n    addListener('onClose', $.toString(() => {\\n        putVar(\\\"Warehouse.comment.discuss_type\\\", \\\"\\\");\\n    }));\\n    data.push({\\n        title: \\\"全部\\\" + (discuss_type === \\\"\\\" ? \\\"◉\\\" : \\\"○\\\"),\\n        url: $(\\\"#noLoading#\\\").lazyRule(() => {\\n            putVar(\\\"Warehouse.comment.discuss_type\\\", \\\"\\\");\\n            refreshPage();\\n            return \\\"hiker://empty\\\";\\n        }),\\n        col_type: 'text_4'\\n\\n    });\\n    data.push({\\n        title: \\\"👍赞\\\" + (discuss_type === \\\"good\\\" ? \\\"◉\\\" : \\\"○\\\"),\\n        url: $(\\\"#noLoading#\\\").lazyRule(() => {\\n            putVar(\\\"Warehouse.comment.discuss_type\\\", \\\"good\\\");\\n            refreshPage();\\n            return \\\"hiker://empty\\\";\\n        }),\\n        col_type: 'text_4'\\n\\n    });\\n    data.push({\\n        title: \\\"👎踩\\\" + (discuss_type === \\\"bad\\\" ? \\\"◉\\\" : \\\"○\\\"),\\n        url: $(\\\"#noLoading#\\\").lazyRule(() => {\\n            putVar(\\\"Warehouse.comment.discuss_type\\\", \\\"bad\\\");\\n            refreshPage();\\n            return \\\"hiker://empty\\\";\\n        }),\\n        col_type: 'text_4'\\n    });\\n    data.push({\\n        title: \\\"回复\\\" + (discuss_type === \\\"reply\\\" ? \\\"◉\\\" : \\\"○\\\"),\\n        url: $(\\\"#noLoading#\\\").lazyRule(() => {\\n            putVar(\\\"Warehouse.comment.discuss_type\\\", \\\"reply\\\");\\n            refreshPage();\\n            return \\\"hiker://empty\\\";\\n        }),\\n        col_type: 'text_4'\\n    });\\n}\\n\\n\\nlet icon = {\\n    \\\"good\\\": \\\"👍\\\",\\n    \\\"bad\\\": \\\"👎\\\",\\n    \\\"reply\\\":\\\"开发者🗣\\\"\\n}\\nlet control=(pid,active)=>void 0;\\nif(no_active){\\n    control=function(pid,active){\\n        data.push({\\n            title:active?\\\"隐藏评论\\\":\\\"展示评论\\\",\\n            url:$(api.dis_dev_control+pid+\\\"?qq=\\\" + username + \\\"&password=\\\" + password+\\\"#noLoading#\\\").lazyRule(()=>{\\n                let result=JSON.parse(request(input));\\n                refreshPage(false)\\n                return \\\"toast://\\\"+result.detail;\\n            }),\\n            col_type:\\\"text_2\\\"\\n        });\\n        data.push({\\n            title:\\\"删除评论\\\",\\n            url:$(\\\"确认删除该评论?\\\").confirm((input)=>{\\n                let result=JSON.parse(request(input));\\n                refreshPage(false)\\n                return \\\"toast://\\\"+result.detail;\\n            },api.dis_dev_control+pid+\\\"?qq=\\\" + username + \\\"&password=\\\" + password+\\\"&delete=1\\\"),\\n            col_type:\\\"text_2\\\"\\n        });\\n        data.push({\\n            col_type:\\\"line\\\"\\n        });\\n        data.push({\\n            col_type:\\\"line\\\"\\n        });\\n    }\\n}\\nif (totalSum === 0) {\\n    data.push({\\n        title: \\\"<h5 style='text-align:center'>一条评论也没有，快来抢沙发吧！</h5>\\\",\\n        col_type: \\\"rich_text\\\"\\n    });\\n} else {\\n    let commentList = JSON.parse(request(api.dis_get + id + \\\"?limit=5&page=\\\" + page + \\\"&no_active=\\\" + no_active + \\\"&discuss_type=\\\" + discuss_type)).result;\\n    for (let item of commentList) {\\n        let Reply = item.discuss_type===\\\"reply\\\"&&item.reply_to_name!==false&&item.reply_to_id!==false?\\\"‘‘回复@\\\"+item.reply_to_name+\\\" #\\\"+item.discuss_id+\\\"’’\\\\n\\\":\\\"\\\";\\n        data.push({\\n            title: item.name + \\\"&nbsp;&nbsp;<font color='gray'><small>#\\\" + item.id + \\\"</small><font>\\\",\\n            col_type: \\\"avatar\\\",\\n            //url: no_active?\\\"hiker://page/Reply\\\":\\\"toast://\\\" + item.qq,\\n\\t\\t       url:no_active?\\\"hiker://page/Reply\\\":\\\"mqqwpa://im/chat?chat_type=wpa&uin=\\\"+item.qq,\\n            extra:{\\n                ruleId: id,\\n                name: item.name,\\n                password: password,\\n                username: username,\\n                replyId:item.id\\n            },\\n            pic_url: item.avatar_url\\n        });\\n        data.push({\\n            title: item.discuss_text,\\n            desc: Reply+item.create_date + \\\"·\\\" + icon[item.discuss_type],\\n            col_type: \\\"text_1\\\",\\n            url: \\\"hiker://page/info\\\",\\n            extra:{\\n                name:item.name,\\n                type:\\\"long_text\\\",\\n                text:item.discuss_text\\n            },\\n            pic_url: item.avatar_url\\n        });\\n        control(item.id,item.active);\\n    }\\n    if (commentList.length === 0) {\\n        data.push({\\n            col_type: \\\"line_blank\\\"\\n        });\\n    }\\n}\\n\\nsetResult(data)\"},{\"col_type\":\"movie_3\",\"name\":\"发表评论\",\"path\":\"MakeAcomment\",\"rule\":\"js:\\nlet data = [];\\nconst {\\n    api,\\n    getFile\\n} = $.require(\\\"hiker://page/utiliy\\\");\\nlet {\\n    id,\\n    name,\\n    defaultType\\n} = MY_PARAMS;\\nlet user=getFile().user||[\\\"\\\",\\\"\\\"];\\n\\nsetPageTitle(\\\"评论(\\\" + name + \\\")\\\");\\naddListener('onClose', $.toString(() => {\\n    clearVar(\\\"Warehouse.comment.type\\\");\\n    clearVar(\\\"Warehouse.comment.text\\\");\\n    clearVar(\\\"Warehouse.comment.qq\\\");\\n    refreshPage(false);\\n}));\\nlet type = getVar(\\\"Warehouse.comment.type\\\") || defaultType||\\\"good\\\";\\ndata.push({\\n    desc: \\\"评论......\\\",\\n    col_type: 'input',\\n    extra: {\\n        titleVisible: false,\\n        defaultValue: getVar('Warehouse.comment.text', ''),\\n        type: \\\"textarea\\\",\\n        height:7,\\n        onChange: 'putVar(\\\"Warehouse.comment.text\\\",input)'\\n    }\\n});\\ndata.push({\\n    title:\\\"账号：\\\"+(user[0]||\\\"\\\"),\\n    desc:\\\"验证码：\\\"+(user[1]||\\\"\\\"),\\n    url:\\\"hiker://page/Userregistration\\\",\\n    col_type: 'text_1',\\n    \\n});\\n\\ndata.push({\\n    title:  (type === \\\"good\\\" ? \\\"◉\\\" : \\\"○\\\")+\\\" 👍\\\",\\n    url: $(\\\"#noLoading#\\\").lazyRule(() => {\\n        putVar(\\\"Warehouse.comment.type\\\", \\\"good\\\");\\n        refreshPage();\\n        return \\\"hiker://empty\\\";\\n    }),\\n    col_type: 'text_2'\\n\\n});\\ndata.push({\\n    title:  (type === \\\"bad\\\" ? \\\"◉\\\" : \\\"○\\\")+\\\" 👎\\\",\\n    url: $(\\\"#noLoading#\\\").lazyRule(() => {\\n        putVar(\\\"Warehouse.comment.type\\\", \\\"bad\\\");\\n        refreshPage();\\n        return \\\"hiker://empty\\\";\\n    }),\\n    col_type: 'text_2'\\n});\\n\\ndata.push({\\n    title: \\\"提交\\\",\\n    col_type: \\\"text_center_1\\\",\\n    url: $(api.dis_new + id).lazyRule((Account) => {\\n        let text = getVar('Warehouse.comment.text', '');\\n        let [qq,auth_code] = Account;\\n        let type = getVar('Warehouse.comment.type') || 'good';\\n        qq=qq||\\\"\\\";\\n        auth_code=auth_code||\\\"\\\";\\n        if(qq==\\\"\\\"||auth_code==\\\"\\\"){\\n            return \\\"toast://未登录账号\\\";\\n        }\\n        if(text==\\\"\\\"){\\n            return \\\"toast://你还什么都没写啊\\\";\\n        }\\n        function r(p) {\\n            let result = request(input, {\\n                headers: {\\n                    'content-type': 'application/json'\\n                },\\n                body: JSON.stringify(p),\\n                method: 'POST'\\n            });\\n            return JSON.parse(result).result;\\n        }\\n        let p = {\\n            \\\"params\\\": {\\n                \\\"discuss_text\\\": text,\\n                \\\"qq\\\": qq,\\n                \\\"discuss_type\\\": type,\\n                \\\"auth_code\\\": auth_code\\n            }\\n        }\\n        let result = r(p);\\n        if(result.status===0){\\n            back(false);\\n        }\\n        return \\\"toast://\\\"+result.detail;\\n\\n    },user)\\n});\\n\\nsetResult(data);\"},{\"col_type\":\"movie_3\",\"name\":\"伪用户注册\",\"path\":\"Userregistration\",\"rule\":\"js:\\nconst {\\n    api,\\n    getFile,\\n    getUserDate\\n} = $.require(\\\"hiker://page/utiliy\\\");\\nlet data = [];\\ndata.push({\\n    col_type: \\\"line_blank\\\"\\n});\\nsetPageTitle(\\\"用户列表管理\\\");\\naddListener('onClose', $.toString(() => {\\n    clearVar(\\\"Warehouse.m.qq\\\");\\n    clearVar(\\\"Warehouse.m.yzm\\\");\\n}));\\nlet user = getFile();\\nlet userName = user.user || [\\\"\\\"];\\nuserName = userName[0];\\ndata.push({\\n    title: \\\"““””<big>(添加/验证)账号</big>\\\",\\n    col_type: \\\"text_1\\\",\\n    url: \\\"hiker://empty\\\"\\n});\\n\\ndata.push({\\n    title: \\\"获取\\\",\\n    col_type: 'input',\\n    desc: \\\"请输入qq\\\",\\n    url: $.toString((a, b) => {\\n        let qq = input;\\n        if (qq == \\\"\\\") {\\n            return \\\"toast://你还什么都没填啊!\\\";\\n        }\\n        showLoading(\\\"获取中...\\\")\\n        return $(\\\"#noLoading#\\\").lazyRule((qq, a, b) => {\\n        try {\\n            let result = request(a, {\\n                headers: {\\n                    'content-type': 'application/json'\\n                },\\n                body: JSON.stringify({\\n                    \\\"params\\\": {\\n                        \\\"qq\\\": qq\\n                    }\\n                }),\\n                method: 'POST'\\n            });\\n            result = JSON.parse(result).result;\\n            if (result.status === 0) {\\n                hideLoading();\\n                return \\\"toast://\\\" + result.detail;\\n            } else {\\n                let result2 = JSON.parse(request(b + \\\"?qq=\\\" + qq));\\n                hideLoading();\\n                return \\\"toast://\\\" + result2.detail;\\n            }\\n        } catch (e) {\\n            hideLoading();\\n            throw e;\\n        }\\n        }, qq, a, b);\\n\\n    }, api.dis_new_user, api.dis_verify),\\n    extra: {\\n        type: \\\"number\\\",\\n        defaultValue: getVar('Warehouse.m.qq', '') || userName,\\n        onChange: 'putVar(\\\"Warehouse.m.qq\\\",input)'\\n    }\\n});\\n\\ndata.push({\\n    col_type: 'input',\\n    desc: \\\"请输入验证码\\\",\\n    extra: {\\n        titleVisible: false,\\n        defaultValue: getVar('Warehouse.m.yzm', ''),\\n        onChange: 'putVar(\\\"Warehouse.m.yzm\\\",input)'\\n    }\\n});\\ndata.push({\\n    col_type: 'rich_text',\\n    title: \\\"<small>提示：1.每天只能获取5次验证码.<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.<s>验证码有效期持续一周左右</s>(暂时不会，忘记验证码可通过QQ号获取)</small>\\\"\\n});\\n\\nlet userList = getUserDate();\\ndata.push({\\n    title: \\\"验证/登录\\\",\\n    url: $(\\\"确定保存，验证码填错，无法评论哦\\\").confirm((f, l, login) => {\\n        let qq = getVar('Warehouse.m.qq', '');\\n        let yzm = getVar('Warehouse.m.yzm', '');\\n        if (qq == \\\"\\\" || yzm == \\\"\\\") {\\n            return \\\"toast://qq或验证码为空\\\";\\n        }\\n        let result = request(login, {\\n            headers: {\\n                'content-type': 'application/json'\\n            },\\n            body: JSON.stringify({\\n                \\\"params\\\": {\\n                    \\\"qq\\\": qq,\\n                    \\\"auth_code\\\": yzm\\n                }\\n            }),\\n            method: 'POST'\\n        });\\n        result = JSON.parse(result).result;\\n        if (result.status === 0) {\\n            f.user = [qq, yzm];\\n            writeFile(\\\"hiker://files/WarehouseUSER.json\\\", JSON.stringify(f));\\n            let index = l.findIndex(item => item[0] === qq);\\n            if (index > -1) {\\n                l.splice(index, 1, [qq, yzm]);\\n            } else if (l.length < 6) {\\n                l.push([qq, yzm]);\\n            } else {\\n                l.splice(0, 1);\\n                l.push([qq, yzm]);\\n            }\\n            writeFile(\\\"hiker://files/WarehouseUSERA.json\\\", JSON.stringify(l));\\n            back();\\n            return \\\"toast://验证成功\\\";\\n        }\\n        return \\\"toast://\\\" + result.detail;\\n    }, user, userList, api.dis_login),\\n    col_type: 'text_center_1'\\n});\\ndata.push({\\n    col_type: \\\"line_blank\\\"\\n});\\ndata.push({\\n    title: \\\"““””<big>账号列表</big>\\\\t\\\\t\\\\t<small>(保留5条记录)</small>\\\",\\n    col_type: \\\"text_1\\\",\\n    url: \\\"hiker://empty\\\"\\n});\\nuserList.reverse();\\n\\nfor (let item of userList) {\\n    data.push({\\n        title: \\\"账号：\\\" + item[0] + (userName === item[0] ? \\\"\\\\t\\\\t\\\\t““[当前账号]””\\\" : \\\"\\\"),\\n        desc: \\\"验证码：\\\" + item[1],\\n        url: $(\\\"是否切换为该[\\\" + item[0] + \\\"]账号\\\").confirm((f, item) => {\\n            f.user = item;\\n            writeFile(\\\"hiker://files/WarehouseUSER.json\\\", JSON.stringify(f));\\n            back();\\n            return \\\"toast://切换成功\\\";\\n        }, user, item),\\n        col_type: \\\"text_1\\\"\\n    });\\n}\\ndata.push({\\n    col_type: \\\"line_blank\\\"\\n});\\ndata.push({\\n    title: \\\"退出账号\\\",\\n    url: $(\\\"确认退出登录状态\\\").confirm((f) => {\\n        f.user = [];\\n        writeFile(\\\"hiker://files/WarehouseUSER.json\\\", JSON.stringify(f));\\n        back();\\n        return \\\"toast://退出成功\\\";\\n    }, user),\\n    col_type: 'text_center_1'\\n});\\nsetResult(data);\"},{\"col_type\":\"movie_3\",\"name\":\"列表排序算法\",\"path\":\"sort\",\"rule\":\"js:\\n/* 规则列表排序 [ UP、NEW、无更新 ] 顺序 */\\n/* 归并排序 Start */\\n/*\\nfunction mergeSort(arr) {\\n    var len = arr.length;\\n    if (len < 2) {\\n        return arr;\\n    }\\n    var middle = Math.floor(len / 2),\\n        left = arr.slice(0, middle),\\n        right = arr.slice(middle);\\n    return merge(mergeSort(left), mergeSort(right));\\n}\\nfunction merge(left, right) {\\n    var result = [];\\n    var isThisVersionList = [];\\n\\n    while (left.length > 0 && right.length > 0) {\\n        if (left[0].title.includes(\\\"🆙\\\")) {\\n            result.push(left.shift());\\n        } else if (right[0].title.includes(\\\"🆙\\\")) {\\n            result.push(right.shift());\\n        } else if (left[0].title.includes(\\\"🆕\\\")) {\\n            result.push(left.shift());\\n        } else if (right[0].title.includes(\\\"🆕\\\")) {\\n            result.push(right.shift());\\n        } else {\\n            isThisVersionList.push(left.shift());\\n            isThisVersionList.push(right.shift());\\n        }\\n    }\\n\\n    while (isThisVersionList.length) result.push(isThisVersionList.shift());\\n\\n    while (left.length)\\n        result.push(left.shift());\\n\\n    while (right.length)\\n        result.push(right.shift());\\n\\n    return result;\\n}\\n$.exports.mergeSort = mergeSort;\\n*/\\n/* 归并排序 End */\\n/* 普通分类排序 Start */\\nfunction normalSort(arr) {\\n    var len = arr.length;\\n    if (len < 2) {\\n        return arr;\\n    }\\n    let upResult = [];\\n    let otherResult = [];\\n    while(arr.length) {\\n        let item = arr.shift();\\n        if(item.title.includes(\\\"🆙\\\")) {\\n            upResult.push(item)\\n        } else {\\n            otherResult.push(item)\\n        }\\n    }\\n    return upResult.concat(otherResult);\\n}\\n$.exports.normalSort = normalSort;\\n/* 普通分类排序 End */\"},{\"col_type\":\"icon_2_round\",\"name\":\"全部公开规则\",\"path\":\"AllPublicRule\",\"rule\":\"js:\\n    const {\\n        api,\\n        localRuleVer,\\n        getApi\\n    } = $.require(\\\"hiker://page/utiliy\\\");\\nconst {\\n    mergeSort\\n} = $.require(\\\"hiker://page/sort\\\");\\nlet dataType = getVar(\\\"Warehouse.type\\\", \\\"\\\");\\nlet order = getVar(\\\"Warehouse.order\\\", \\\"0\\\");\\nlet sort = getVar(\\\"Warehouse.sort\\\", \\\"0\\\");\\nlet good = getVar(\\\"Warehouse.good\\\", \\\"\\\");\\nlet page = MY_URL.split(\\\"#\\\")[1] || 1;\\nlet ruleList = JSON.parse(request(api.all_rule + \\\"?data_type=\\\" + dataType + \\\"&page=\\\" + page + \\\"&limit=20&order=\\\" + order + \\\"&sort=\\\" + sort+ \\\"&is_good=\\\" + good)).result;\\naddListener('onClose', $.toString(() => {\\n    clearVar(\\\"Warehouse.type\\\");\\n    clearVar(\\\"Warehouse.order\\\");\\n    clearVar(\\\"Warehouse.sort\\\");\\n    clearVar(\\\"Warehouse.good\\\");\\n    clearVar(\\\"Warehouse.back\\\");\\n}));\\nlet data = [];\\nif (getVar(\\\"Warehouse.back\\\") === \\\"1\\\") {\\n    back();\\n}\\nfunction tab(arr, type, contrast) {\\n    for (let item of arr) {\\n        data.push({\\n            title: item[1] === contrast ? \\\"““\\\" + item[0] + \\\"””\\\" : item[0],\\n            url: $(\\\"#noLoading#\\\").lazyRule((key, type) => {\\n                putVar(type, key);\\n                refreshPage(false);\\n                return \\\"hiker://empty\\\";\\n            }, item[1], type),\\n            col_type: \\\"scroll_button\\\"\\n        });\\n    }\\n    data.push({\\n        col_type: \\\"blank_block\\\"\\n    });\\n}\\nif (page === \\\"1\\\") {\\n    tab([\\n        [\\\"全部\\\", \\\"\\\"],\\n        [\\\"小程序\\\", \\\"home_rule_url\\\"],\\n        [\\\"提交云仓库规则\\\", \\\"publish\\\"],\\n        [\\\"网页插件\\\", \\\"js_url\\\"],\\n        [\\\"静态页面\\\", \\\"html\\\"],\\n        [\\\"主题\\\", \\\"config\\\"]\\n    ], \\\"Warehouse.type\\\", dataType);\\n    tab([\\n        [\\\"时间\\\", \\\"0\\\"],\\n        [\\\"ID\\\", \\\"1\\\"],\\n        [\\\"好评度\\\", \\\"2\\\"],\\n        [\\\"差评度\\\", \\\"3\\\"],\\n        [\\\"回复数\\\", \\\"4\\\"]\\n    ], \\\"Warehouse.order\\\", order);\\n    tab([\\n        [\\\"倒序\\\", \\\"0\\\"],\\n        [\\\"正序\\\", \\\"1\\\"]\\n    ], \\\"Warehouse.sort\\\", sort);\\n    tab([\\n        [\\\"不论\\\", \\\"\\\"],\\n        [\\\"优质\\\", \\\"1\\\"]\\n    ], \\\"Warehouse.good\\\", good);\\n    data.push({\\n        title: \\\"搜索\\\",\\n        url: $.toString(name => \\\"hiker://search?s=\\\" + input + \\\"&rule=\\\" + name, MY_RULE.title),\\n        col_type: \\\"input\\\",\\n        desc: \\\"搜索全部规则\\\"\\n    });\\n}\\n\\nlet homeList = JSON.parse(request(api.home));\\nlet mRuleList = [];\\nfor (var item of ruleList) {\\n    var name = item.name;\\n    if (item.is_tap) {\\n        let location = JSON.parse(request(getApi(\\\"ruleListJson\\\") + \\\"?id=\\\" + item.id));\\n        item.id = location.id;\\n        item.name = location.name;\\n        item.author = location.author;\\n        item.data_type = location.data_type;\\n        item.ver = location.ver\\n    }\\n    item.version = item.ver;\\n    let label = \\\"\\\",\\n        lver = -2;\\n    if (item.is_json && item.data_type === \\\"home_rule_url\\\") {\\n        lver = localRuleVer(homeList, item);\\n        if (lver === -1) {\\n            label = \\\"🆕\\\";\\n        } else if (lver < item.ver) {\\n            label = \\\"🆙\\\";\\n        }\\n    }\\n    mRuleList.push({\\n        title: label + name,\\n        url: \\\"hiker://page/ruleDetail#noHistory##noRecordHistory#\\\",\\n        extra: {\\n            lver: lver,\\n            id: item.id,\\n            isAll:true\\n        },\\n        pic_url: item.pic,\\n    })\\n}\\n/* 归并排序 Start */\\n//mRuleList = mergeSort(mRuleList);\\n/* 归并排序 End */\\ndata.push.apply(data, mRuleList)\\nsetResult(data);\"},{\"col_type\":\"movie_3\",\"name\":\"回复\",\"path\":\"Reply\",\"rule\":\"js:\\nlet data = [];\\nconst {\\n    api\\n} = $.require(\\\"hiker://page/utiliy\\\");\\nlet {\\n    replyId,\\n    ruleId,\\n    name,\\n    password,\\n    username\\n} = MY_PARAMS;\\n\\n\\nsetPageTitle(\\\"回复(\\\" + name + \\\")\\\");\\naddListener('onClose', $.toString(() => {\\n    clearVar(\\\"Warehouse.comment.text\\\");\\n    refreshPage(false);\\n}));\\n\\ndata.push({\\n    desc: \\\"回复......\\\",\\n    col_type: 'input',\\n    extra: {\\n        titleVisible: false,\\n        defaultValue: getVar('Warehouse.comment.text', ''),\\n        type: \\\"textarea\\\",\\n        height:7,\\n        onChange: 'putVar(\\\"Warehouse.comment.text\\\",input)'\\n    }\\n});\\n\\n\\ndata.push({\\n    title: \\\"提交\\\",\\n    col_type: \\\"text_center_1\\\",\\n    url: $(api.dis_reply + ruleId).lazyRule((password, username, ruleId) => {\\n        let text = getVar('Warehouse.comment.text', '');\\n        if (password == \\\"\\\" || username == \\\"\\\") {\\n            return \\\"toast://未登录账号\\\";\\n        }\\n        if (text == \\\"\\\") {\\n            return \\\"toast://你还什么都没写啊\\\";\\n        }\\n        let result = request(input, {\\n            headers: {\\n                'content-type': 'application/json'\\n            },\\n            body: JSON.stringify({\\n                \\\"params\\\": {\\n                    \\\"discuss_text\\\": text,\\n                    \\\"qq\\\": username,\\n                    \\\"password\\\": password,\\n                    \\\"discuss_id\\\": ruleId\\n                }\\n            }),\\n            method: 'POST'\\n        });\\n        result = JSON.parse(result).result;\\n        if (result.status === 0) {\\n            back(false);\\n        }\\n        return \\\"toast://\\\" + result.detail;\\n\\n    }, password, username, replyId)\\n});\\n\\nsetResult(data);\"},{\"col_type\":\"movie_3\",\"name\":\"我的回复\",\"path\":\"MyReply\",\"rule\":\"js:\\nconst {\\n    api\\n} = $.require(\\\"hiker://page/utiliy\\\");\\nlet {\\n    auth_code,\\n    qq\\n} = MY_PARAMS;\\nlet page = parseInt(MY_URL.split(\\\"#\\\")[1]);\\nlet data=[];\\nlet commentList = JSON.parse(request(api.dis_get_reply + \\\"?limit=5&page=\\\" + page + \\\"&qq=\\\" + qq + \\\"&auth_code=\\\" + auth_code)).result;\\nif (commentList.length === 0) {\\n    data.push({\\n        title: \\\"<h5 style='text-align:center'>别拉了一条也不剩了</h5>\\\",\\n        col_type: \\\"rich_text\\\"\\n    });\\n} else {\\n    for (let item of commentList) {\\n        data.push({\\n            title: item.name + \\\"&nbsp;&nbsp;<font color='gray'><small>#\\\" + item.id + \\\"</small><font>\\\",\\n            col_type: \\\"avatar\\\",\\n            url: \\\"hiker://page/ruleDetail#noHistory##noRecordHistory#\\\",\\n            extra: {\\n                lver: \\\"回复进入不支持查看\\\",\\n                id: item.rule_id[0]\\n            },\\n            pic_url: item.avatar_url\\n        });\\n        data.push({\\n            title: item.discuss_text,\\n            desc: item.create_date + \\\"·\\\"+item.rule_id[1]+\\\"·\\\"+\\\"开发者🗣\\\",\\n            col_type: \\\"text_1\\\",\\n            url: \\\"hiker://page/info\\\",\\n            extra:{\\n                name:item.name,\\n                type:\\\"long_text\\\",\\n                text:item.discuss_text\\n            },\\n            pic_url: item.avatar_url\\n        });\\n    }\\n    \\n}\\nsetResult(data);\\n\"},{\"col_type\":\"movie_3\",\"name\":\"更多分享\",\"path\":\"moreShare\",\"rule\":\"js:\\n    addListener('onClose', $.toString(()=>{\\n        clearVar(\\\"house.upload_code\\\");\\n    }));\\nconst {color,small,api, getFile} = $.require(\\\"hiker://page/utiliy\\\");\\nlet houseFile = getFile||false;\\nlet put_url = api.host+'/hikerule/dev/put';\\nif(!houseFile){\\n    setItem('is_house_vip', 'false');\\n}\\nlet house_data = houseFile();\\n// log(house_data.username+'-'+house_data.password);\\nvar canup = house_data.username.length >= 6 && house_data.password.length > 2;\\nlog('可以上传?'+canup);\\nlet d = [];\\nlet file_type = [{name:'静态文件',value:'html'},{name:'网页插件',value:'js_url'},{name:'主页配置',value:'config'}]; //上传类型\\nlet file_redirect = [{name:'本地',value:'false'},{name:'直链302',value:'true'}]; //是否重定向\\nlet file_ua = [{name:'电脑',value:'pc'},{name:'手机',value:'mobile'}];\\nlet file_type_title = file_type.map((item) => {\\n    let name = getItem('house.file_type','静态文件');\\n    if(item.name===name){\\n        return '👉'+item.name;\\n    }else{\\n        return item.name;\\n    }\\n});\\nlet file_redirect_title = file_redirect.map((item) => {\\n    let name = getItem('house.file_redirect','本地');\\n    if(item.name===name){\\n        return '👉'+item.name;\\n    }else{\\n        return item.name;\\n    }\\n});\\nlet file_ua_title = file_ua.map((item) => {\\n    let name = getItem('house.file_ua','电脑');\\n    if(item.name===name){\\n        return '👉'+item.name;\\n    }else{\\n        return item.name;\\n    }\\n});\\nd.push({col_type: 'x5_webview_single', extra: {js: 'console.log(\\\"我加载了\\\")'}});\\nd.push({\\n    title: '获取',\\n    desc: \\\"文件路径,支持hiker,file,http,主题\\\",\\n    extra: {\\n        onChange: \\\"putVar('house.web_url',input)\\\",\\n        titleVisible: true,\\n        id:'filePath',\\n        defaultValue:getVar('house.web_url')\\n    },\\n    url:$.toString(() => {\\n        let input = getVar('house.web_url','');\\n        if(input.length<2){\\n            return 'toast://链接不可以为空'\\n        } else if(/^hiker:|^file:|^http:|^https:|^\\\\/storage\\\\/|^\\\\/sdcard\\\\//.test(input)){\\n            if(/^\\\\/storage\\\\/|^\\\\/sdcard\\\\//.test(input)){\\n                input = 'file://'+input;\\n            }\\n            log('正常链接:'+input);\\n            let ua = getItem('house.file_ua')==='电脑'?'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.146 Safari/537.36':'Mozilla/5.0 (Linux; Android 9; MI 6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Mobile Safari/537.36';\\n            let web_url_arr = input.split(';');\\n            let web_url = web_url_arr[0];\\n            let headers = {\\n                'Referer':'https://blog.csdn.net',\\n                'User-Agent':ua,\\n                'Accept':'application/json, text/javascript, */*; q=0.01',\\n                'Accept-Language':'zh-CN',\\n            };\\n            if(web_url_arr.length>=3&&web_url_arr[2].length>2){ //设置编码\\n                headers['content-type'] = 'charset='+web_url_arr[2].toUpperCase();\\n            }\\n            let params = {headers:headers,withHeaders:false,redirect:false};\\n            if(web_url_arr.length>=2&&web_url_arr[1].length>2){ // 设置请求方法\\n                params['method'] = web_url_arr[1].toUpperCase();\\n            }\\n            log('开始获取源码');\\n            try {\\n                /*\\n                requestAsync(web_url,params,function (key,code) {\\n                    let back_code = code;\\n                    if(back_code.length>20){\\n                        putVar('house.upload_code',back_code);\\n                        refreshPage(true);\\n                        return 'toast://源码已获取,并部分插入到文本区域'\\n                    }else{\\n                        return 'toast://错误，本次获取到空文本，疑似你没有此文件!';\\n                    }\\n                });\\n                */\\n                let back_code = getItem('house.file_ua')==='电脑'?fetch(web_url,params):request(web_url,params);\\n                if(back_code.length>20){\\n                    putVar('house.upload_code',back_code);\\n                    refreshPage(true);\\n                    return 'toast://源码已获取,并部分插入到文本区域'\\n                }else{\\n                    return 'toast://错误，本次获取到空文本，疑似你没有此文件!';\\n                }\\n            }catch (e) {\\n                log(e.message);\\n                return 'toast://发生了错误:\\\\n'+e.message;\\n            }\\n        }else if(/主题￥|元素￥/.test(input)){\\n            log('主题链接');\\n            let web_url_arr = input.split('￥');\\n            let web_url = web_url_arr[web_url_arr.length-1];\\n            let back_code = parsePaste(web_url);\\n            if(back_code.length>20) {\\n                putVar('house.upload_code',back_code);\\n                refreshPage(true);\\n                return 'toast://源码已获取,并部分插入到文本区域'\\n            }else{\\n                return 'toast://错误，本次获取返回为:\\\\n'+back_code;\\n            }\\n        }else{\\n            return 'toast://非法链接:\\\\n'+getVar('house.web_url');\\n        }\\n    }),\\n    col_type: \\\"input\\\"\\n});\\nd.push({\\n    title: \\\"选择文件路径\\\",\\n    url:$('#noLoading#').lazyRule(()=>{\\n        /*\\n        let fp = 'https://gitcode.net/qq_32394351/dr/-/raw/master/js/fileSelect.js';\\n        let f = require(fp);\\n        */\\n        let fp=config.lib.fileSelect;\\n        let f=$.rc(fp);\\n        return f.fileSelectionUri({\\n            callback: $.toString(() => {\\n                let target = findItem(\\\"filePath\\\").extra;\\n                updateItem(\\\"filePath\\\", {\\n                    extra: Object.assign(target, {\\n                        defaultValue: PATH\\n                    })\\n                });\\n                putVar('house.web_url',PATH);\\n                return true;\\n            }),\\n            onClickType:'confirm',\\n            fileType: \\\".js|.txt|.hiker|.json|.html\\\",\\n            pattern: 0,\\n            requireUrl:fp,\\n            initialPath:getPath('hiker://files/rules/dzHouse/').slice(7),\\n            memory:'true',\\n        });\\n    }),\\n    col_type: \\\"text_center_1\\\",\\n});\\nd.push({\\n    title:'上传类型',\\n    desc:'上传文件的类型,当前为:'+color(getItem('house.file_type','静态文件'),'#ff7000'),\\n    col_type:'text_1',\\n    url:$(file_type_title,2).select(() => {\\n        setItem('house.file_type',input.replace('👉',''));\\n        refreshPage(true);\\n        return 'toast://你选择了:'+input;\\n    })\\n});\\n\\nd.push({\\n    title:'文件定位',\\n    desc:'文件是否属于重定向,当前为:'+color(getItem('house.file_redirect','本地'),'#ff7000'),\\n    col_type:'text_1',\\n    url:$(file_redirect_title,2).select(() => {\\n        setItem('house.file_redirect',input.replace('👉',''));\\n        refreshPage(true);\\n        return 'toast://你选择了:'+input;\\n    })\\n});\\n\\nd.push({\\n    title:'设备UA',\\n    desc:'发起网页请求头标识,当前为:'+color(getItem('house.file_ua','电脑'),'#ff7000'),\\n    col_type:'text_1',\\n    url:$(file_ua_title,2).select(() => {\\n        setItem('house.file_ua',input.replace('👉',''));\\n        refreshPage(true);\\n        return 'toast://你选择了:'+input;\\n    })\\n});\\nfunction compare(name) {\\n    return function(item) {\\n        return item.name === name;\\n    }\\n}\\nd.push({\\n    title:'🗄️环境',\\n    col_type:'flex_button',\\n    url:$().lazyRule((file_type,compare)=>{\\n        log('查看环境变量');\\n        try {\\n            let up_code = getVar('house.upload_code','');\\n            let ftype =  file_type.filter(compare(getItem('house.file_type','静态文件')))[0].value;\\n            let redirect = getItem('house.file_redirect','本地')!=='本地';\\n            let code = !redirect?up_code:input;\\n            let env = {\\n                web_url:getVar('house.web_url',''),\\n                device:getItem('house.file_ua','电脑'),\\n                ftype:ftype||\\\"\\\",\\n                redirect:redirect,\\n                code:code.substring(0,40)||\\\"\\\",\\n            }\\n            log(env);\\n            return 'toast://'+JSON.stringify(env);\\n            // alert(JSON.stringify(env));\\n        }catch (e) {\\n            return 'toast://'+e.message;\\n            // alert(e.message);\\n        }\\n    },file_type,compare)\\n});\\n\\nd.push({\\n    title:'📃教程',\\n    col_type:'flex_button',\\n    url:$().x5Rule(()=>{\\n        let msg = '欢迎使用开发者更多分享工具\\\\n1.输入网址为本地文件路径,hiker://或者file://开头\\\\n2.点击网址输入栏后面的按钮\\\\n3.看文本预览区是否正确\\\\n4.点击上传按钮提交到仓库';\\n        alert(msg);\\n    })\\n});\\n\\nd.push({\\n    title:'🗑️清空',\\n    col_type:'flex_button',\\n    url:$().lazyRule(()=>{\\n        clearVar('house.upload_code');\\n        refreshPage(true);\\n        return 'toast://已清除预览区域内容'\\n    })\\n});\\n\\nd.push({\\n    title:'📲示例',\\n    col_type:'flex_button',\\n    url:$().lazyRule(()=>{\\n        let demo_code = getItem('house.demo','0');\\n        if(demo_code=='0'){\\n            putVar('house.web_url','hiker://files/rules/dzHouse/html/资源网书签.html');\\n            demo_code = parseInt(demo_code)+1;\\n            setItem('house.demo',demo_code+'');\\n        }else{\\n            putVar('house.web_url','file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/rules/dzHouse/html/资源网书签.html');\\n            setItem('house.demo','0');\\n        }\\n        refreshPage(true);\\n        return 'toast://已设置示例地址'\\n    })\\n});\\n\\nd.push({\\n    title:'📤上传',\\n    col_type:'flex_button',\\n    url:$().lazyRule((canup,house_data,put_url,file_type) =>{\\n        function compare(name) {\\n            return function(item) {\\n                return item.name === name;\\n            }\\n        }\\n        const {getNowFormatDate}=$.require(\\\"hiker://page/utiliy\\\");\\n        let up_code = getVar('house.upload_code','');\\n        if(up_code.length < 2){\\n            return 'toast://源码区无内容，请先访问一个静态页面'\\n        }\\n        if(!canup){\\n            return 'toast://你不是开发者，没有提交到仓库的权利!'\\n        }\\n        let input = getVar('house.web_url','');\\n        let web_url = input.split(';')[0];\\n        let fileName = '';\\n        if(/^hiker:|^file:|^http:|^https:|^\\\\/storage\\\\/|^\\\\/sdcard\\\\//.test(web_url)){\\n            fileName = web_url.split('/')[web_url.split('/').length-1];\\n        }else if(/主题￥|元素￥/.test(input)){\\n            let bkarr = up_code.split('￥');\\n            if(bkarr.length<3){\\n                return 'toast://云剪贴板内容有误'\\n            }\\n            switch (bkarr[1]) {\\n                case 'my_home_theme':\\n                    fileName = up_code.split('「')[1].split('」')[0];\\n                    break;\\n                case 'my_home_single':\\n                    fileName = up_code.split('「')[1].split('」')[0];\\n                    break;\\n                case 'js_url':\\n                    fileName = up_code.split('￥')[2].split('@')[0];\\n                    break;\\n            }\\n        }else{\\n            return 'toast://错误，网页链接无内容!';\\n        }\\n        let ua = getItem('house.file_ua')==='电脑'?'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.146 Safari/537.36':'Mozilla/5.0 (Linux; Android 9; MI 6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Mobile Safari/537.36';\\n        let headers = {\\n            'Referer':'https://blog.csdn.net',\\n            \\\"content-type\\\": \\\"application/json\\\",\\n            'User-Agent':ua,\\n            'Accept':'application/json, text/javascript, */*; q=0.01',\\n            'Accept-Language':'zh-CN',\\n        };\\n        let toCompare = '';\\n        if(fileName.endsWith('.html')){\\n            toCompare = '静态文件';\\n        }else if(/主题/.test(fileName)){\\n            toCompare = '主页配置'\\n        }\\n        let ftype =  file_type.filter(compare(toCompare||getItem('house.file_type','静态文件')))[0].value;\\n        let redirect = getItem('house.file_redirect','本地')!=='本地';\\n        if(redirect&&!web_url.startsWith('http')){\\n            return 'toast://直链302重定向网址链接必须http开头';\\n        }\\n        let code = !redirect?up_code:web_url;\\n        let data = {\\\"params\\\":\\n                {\\\"data\\\": {rule_name: fileName, \\\"rule_type\\\": '更多分享', \\\"version\\\":getNowFormatDate(),\\\"rule_value\\\": code,\\n                        data_type:ftype, is_redirect:redirect,deviceUa:getItem('house.file_ua'),\\n                    },\\n                    \\\"name\\\": house_data.username,\\n                    \\\"password\\\": house_data.password}\\n        };\\n        let upparams = {headers:headers,body:JSON.stringify(data),withHeaders:false,redirect:false,method:'POST'};\\n        let backmsg = getItem('house.file_ua')==='电脑'?fetch(put_url,upparams):request(put_url,upparams);\\n        try{\\n            let result = JSON.parse(backmsg).result;\\n            let detail = result.detail;\\n            return 'toast://'+detail;\\n        }catch (e) {\\n            log(e.message);\\n            return 'toast://发生了错误\\\\n'+e.message;\\n        }\\n    },canup,house_data,put_url,file_type)\\n});\\n\\nd.push({\\n    title:'长文本预览区域',\\n    col_type:'text_1',\\n    url:'hiker://empty',\\n    extra: {textSize: 11,lineVisible:false}\\n});\\n\\nd.push({\\n    title:getVar('house.upload_code','').substring(0,10240),\\n    col_type:'long_text',\\n    extra: {textSize: 11}\\n});\\nsetPageTitle(\\\"更多分享\\\");\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"轻合集生成接口\",\"path\":\"genApi\",\"rule\":\"js:\\nfunction genRule(name,url,icon){\\n    icon=icon||'https://z3.ax1x.com/2021/11/16/IWJhxf.png';\\n    const {getNowFormatDate,api,getApi}=$.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\n    String.prototype.replaceAll = function(old,new_str){\\n        return this.split(old).join(new_str);\\n    };\\n    let muban = getApi('importUrl')+\\\"1690\\\";\\n    let muban_word={name:\\\"@轻合集\\\",url:\\\"@地址\\\",ver:\\\"@版本\\\",icon:\\\"@图标\\\"};\\n    let muban_code = fetch(muban);\\n    muban_code=muban_code.replaceAll(muban_word.name,name).replaceAll(muban_word.ver,getNowFormatDate()).replaceAll(muban_word.url,url).replaceAll(muban_word.icon,icon);\\n    let import_code=\\\"海阔视界规则分享，当前分享的是：小程序，无根树，花正清，不断荤腥不戒淫￥home_rule_v2￥base64://@\\\"+name+\\\"@\\\"+base64Encode(muban_code);\\n    var pastes = getPastes();\\n    var url = sharePaste(import_code,pastes.slice(-1)[0]);\\n    let import_rule= url+\\\"\\\\n\\\\n小程序：\\\"+name;\\n    return import_rule;\\n}\\n$.exports.genRule=genRule;\"},{\"col_type\":\"movie_3\",\"name\":\"全局解析免嗅\",\"path\":\"globalParse\",\"rule\":\"js:\\n    function getHeaders(playUrl){\\n        let headers = {};\\n        let refer=playUrl.split(\\\"//\\\")[0]+\\\"//\\\"+playUrl.split(\\\"//\\\")[1].split(\\\"/\\\")[0];\\n        if(/lecloud\\\\.com|bilivideo\\\\.com/.test(playUrl)){\\n            headers = {\\\"Referer\\\": 'https://www.bilibili.com/',\\\"User-Agent\\\":\\\"Mozilla/5.0\\\"}\\n        }else if(/mgtv\\\\.com/.test(playUrl)){\\n            headers = {\\\"Referer\\\": refer,\\\"User-Agent\\\":\\\"Mozilla/5.0\\\"}\\n        }else if(/ixigua\\\\.com/.test(playUrl)){\\n            headers = {\\\"Referer\\\": 'https://www.ixigua.com/',\\\"User-Agent\\\":\\\"Mozilla/5.0\\\"}\\n        }else{\\n            // headers = {\\\"Referer\\\": refer,'User-Agent':'Dart/2.13 (dart:io)'}\\n            // headers = {\\\"Referer\\\": refer,'User-Agent':MOBILE_UA};\\n            headers = {'User-Agent':MOBILE_UA};\\n        }\\n        return headers\\n    }\\nfunction isPic(str){\\n    return /\\\\.(gif|jpg|jpeg|png|GIF|JPG|PNG)$/.test(str);\\n}\\nfunction isVideo(playUrl,rechange){\\n    //注意.php不可以被排除否则融兴解析不了 |.php$\\n    //如果是播放地址就直接返回地址加上UA，不是的话就返回false\\n    // let t1 = new Date().getTime();\\n    let cacheRegx = new RegExp('file:///storage/emulated/(.*?)\\\\\\\\.m3u8|hiker://files/(.*?)\\\\\\\\.m3u8');\\n    if(cacheRegx.test(playUrl)){\\n        return playUrl\\n    }\\n    function getHost(url){\\n        // fba的parseLazy太慢了千万别用\\n        try {\\n            return url.match(/^http(s)?:\\\\/\\\\/(.*?)\\\\//)[0].slice(0,-1);\\n        }catch (e) {\\n            return false\\n        }\\n        /*\\n        if(typeof(log)==='undefined'){\\n            return  fba.parseLazyRule($$$().lazyRule((url)=>{\\n                return getHome(url)\\n            },url))\\n        }else {\\n            return getHome(url)\\n        }\\n        */\\n    }\\n    let pUrl=playUrl.split(\\\";\\\")[0];//获取抠掉海阔ua等参数的网页播放链接\\n    let host = getHost(pUrl); // 获取域名\\n    if(!host){//判断无域名直接不是视频\\n        return false\\n    }\\n    function print(data){\\n        if(typeof(log)==='undefined'){\\n            return  fba.log(data)\\n        }else {\\n            return log(data)\\n        }\\n    }\\n    rechange=typeof(rechange)===\\\"function\\\"?rechange:function(playUrl){return playUrl};\\n    let exceptWords = '.js$|.css$|.ts$|.html$|.htm$|.gif$|.jpg$|.jpeg$|.png$|.ico$|.svg$|.txt$'.split('|').map(it=>'\\\\\\\\'+it).join('|');\\n    var exceptKeys = new RegExp(exceptWords);\\n    let exceptWords1 = 'referer=|url='.split('|').map(it=>it).join('|');\\n    var exceptKeys1 = new RegExp(exceptWords1);\\n    let replaceWords = 'playm3u8|m3u8\\\\.tv'.split('|').map(it=>it).join('|');\\n    let replaceKeys = new RegExp(replaceWords,'g');\\n    let videoWords = \\\"/video/tos|.mp4$|.m3u8$|.flv$|.avi$|.3gp$|.mpeg$|.wmv$|.mov$|rmvb|.dat$|.mp3$|.m4a$|qqBFdownload|mime=video%2F|mime_type=video_|type=m3u8|pt=m3u8\\\".split('|').map((it)=>{\\n        //type=mp4\\n        if(it.startsWith(\\\".\\\")){\\n            return '\\\\\\\\'+it\\n        }else{\\n            return it\\n        }\\n    }).join(\\\"|\\\");\\n    let videoKeys = new RegExp(videoWords);\\n    let rUrl = pUrl.replace(host,'');//获取除开域名的剩余链接\\n    let pUrl2=pUrl.split(\\\"&\\\")[0].split(\\\"?\\\")[0];//获取不带参数的网页链接\\n    let rurl2 = pUrl2.replace(host,'');//获取除开域名的剩余不带参数链接\\n    let hasKey = videoKeys.test(rUrl)||videoKeys.test(rurl2);\\n    let parUrl = pUrl.replace(pUrl.split(\\\"?\\\")[0],''); // 分割问号后剩余参数的完整链接\\n    let excKey = exceptKeys1.test(parUrl);\\n    if(rUrl.split('?').length>2){\\n        let rUrl3=rUrl.split(\\\"?\\\")[1];//获取?分割后的第一段\\n        hasKey = hasKey||videoKeys.test(rUrl3);\\n    }\\n    if(hasKey&&!excKey){\\n        let tips = '检测到疑似多媒体的地址:';\\n        print(\\\"js中\\\"+tips+pUrl);\\n        print(\\\"分割问号后:\\\"+parUrl);\\n    }\\n    // log('1:'+(videoKeys.test(pUrl)||videoKeys.test(pUrl2)||videoKeys.test(pUrl.replace(replaceKeys,\\\"\\\").split(\\\"&\\\")[0].split(\\\"?\\\")[0])));\\n    // log('2:'+!exceptKeys.test(pUrl.split(\\\"?\\\")[0].split('&')[0]));\\n    // log('3:'+!exceptKeys1.test(pUrl.replace(pUrl.split(\\\"?\\\")[0],'')));\\n    if ((hasKey||videoKeys.test(rUrl.replace(replaceKeys,\\\"\\\").split(\\\"&\\\")[0].split(\\\"?\\\")[0]) )&& !exceptKeys.test(pUrl2)&&!exceptKeys1.test(pUrl2)) {\\n        if(!(/User-Agent|Referer@/.test(playUrl))){\\n            if(/lecloud\\\\.com|bilivideo/.test(playUrl)){\\n                playUrl+=\\\";{Referer@https://www.bilibili.com/&&User-Agent@Mozilla/5.0}\\\";\\n            }else if(/ixigua\\\\.com/.test(playUrl)){\\n                playUrl+=\\\"#isvideo=true#;{Referer@https://www.ixigua.com/&&User-Agent@Mozilla/5.0}\\\";\\n            }\\n            else if(/mgtv\\\\.com|byteamone/.test(playUrl)){\\n                playUrl+=\\\";{User-Agent@Mozilla/5.0}\\\";\\n            }else if(/ptwo\\\\.wkfile\\\\.com/.test(playUrl)&&/url=/.test(playUrl)){\\n                playUrl=playUrl.split(\\\"url=\\\")[1]+\\\";{Referer@https://fantuan.tv}\\\"\\n            }\\n            // 处理大师兄之类的app\\n            // else{\\n            //     playUrl+=\\\";{User-Agent@Mozilla/5.0}\\\";\\n            // }\\n        }\\n        playUrl=rechange(playUrl);\\n        if(!/#isVideo=true#/.test(playUrl)){\\n            playUrl+=\\\"#isVideo=true#\\\";\\n        }\\n        // let t2 = new Date().getTime();\\n        // print('判断isVideo耗时:'+(t2-t1));\\n        return playUrl;\\n    }else{\\n        // let t2 = new Date().getTime();\\n        // print('判断isVideo耗时:'+(t2-t1));\\n        return false;\\n    }\\n}\\nfunction comParse(parStr,ej,onlyback,html){\\n    //列表，标题，图片，描述，链接，内容\\n    ej = ej||false;//有二级\\n    onlyback=onlyback||false;//只返回数据\\n    html = html||getResCode();\\n    html = typeof(html)==='string'?html:html.html;\\n    return $.toString((parStr,ej,onlyback,html,isPic)=>{\\n        let t=parStr.split(\\\";\\\");\\n        let d=[];\\n        // let list=pdfa(getResCode(),t[0]);\\n        let list=pdfa(html,t[0]);\\n        let lazy = $('').lazyRule(()=>{\\n            const {lazyParse} = $.require('hiker://page/globalParse?rule=道长仓库Pro');\\n            return lazyParse(input)\\n        });\\n        for(let i in list){\\n            let _pic = t[2]?pd(list[i],t[2]):'';\\n            if(isPic(_pic)&&!/@Referer=/.test(_pic)){\\n                _pic+='@Referer='\\n            }\\n            let it={\\n                title:pdfh(list[i],t[1]),\\n                pic_url:_pic,\\n                desc:pdfh(list[i],t[3]),\\n                url:ej?pd(list[i],t[4]):pd(list[i],t[4])+lazy\\n            };\\n            if(t.length>5){//内容，用于搜索\\n                it.content=pdfh(list[i],t[5])\\n            }\\n            d.push(it);\\n        }\\n        if(onlyback){\\n            return d\\n        }else{\\n            setResult(d)\\n        }\\n    },parStr,ej,onlyback,html,isPic)\\n}\\n\\nfunction isBadVideo(videoUrl) {//是坏的视频\\n    let dmPath = 'hiker://files/cache/diaomao.txt';//吊毛模式过滤文件路径\\n    let dmUrls;\\n    try {\\n        dmUrls = request(dmPath).trim().split('\\\\n').filter(it => it && !it.startsWith('//'));\\n    } catch (e) {\\n        dmUrls = [];\\n    }\\n\\n    function hasDm(videoUrl, dmUrls) {//播放地址是否为吊毛视频\\n        if (dmUrls.length < 1) {\\n            return false\\n        }\\n        function print(str){\\n            if(typeof(log)!=='undefined'){\\n                log(str);\\n            }else{\\n                fba.log(str);\\n            }\\n        }\\n        for (let dmUrl of dmUrls) {\\n            if ((new RegExp(dmUrl)).test(videoUrl)) {//播放地址包含吊毛标志的地址\\n                print('吊毛视频,自动过滤:'+videoUrl);\\n                return true\\n            }\\n        }\\n        print('非吊毛视频,可播放:'+videoUrl);\\n        return false\\n    }\\n\\n    function isDm(ret) {\\n        if (!ret) {\\n            return true\\n        }\\n        return hasDm(ret.split('#')[0].split(';')[0], dmUrls)\\n    }\\n    return isDm(videoUrl)\\n}\\n\\nfunction lazyParse(playUrl,ms,tm,rechange){\\n    // log('调用仓库免嗅探传参超时为:'+ms);\\n    tm = parseInt(tm)||5000;\\n    const {isVideo,getHeaders,isBadVideo} = $.require('hiker://page/globalParse?rule=道长仓库Pro');\\n    let realUrl = isVideo(playUrl,rechange);\\n    //log(realUrl);\\n    if(typeof(realUrl)=='string'){//bool值就是失败\\n        try{\\n            let rurl=realUrl.split(\\\";\\\")[0].split(\\\"#\\\")[0];\\n            return JSON.parse(request(rurl,{timeout:tm})).url\\n        }catch(e){\\n            return realUrl\\n        }\\n        //return realUrl\\n    }\\n\\n    //log(\\\"访问超时:\\\"+tm);\\n    log(\\\"尝试道长仓库x5免嗅:\\\"+playUrl);\\n    clearVar(\\\"_x5jxUrl\\\");\\n    let bad=$(\\\"网络不佳或者疑似对方网站挂了，你要查看其网页吗？\\\").confirm((playUrl)=>{\\n        log(\\\"网站看起来挂了:\\\"+playUrl);\\n        return playUrl\\n    },playUrl);\\n    try{\\n        var back=request(playUrl,{headers: getHeaders(playUrl),timeout:tm});\\n        //var back=fetch(playUrl,{headers: {'User-Agent': PC_UA}});\\n        if(!back){\\n            log(\\\"网站\\\"+playUrl+\\\"确实啥也没返回\\\");\\n            return bad\\n        }else if(/#EXTINF/.test(back)){\\n            //let lcache=\\\"/storage/emulated/0/Android/data/com.example.hikerview/files/Documents/cache/video.m3u8\\\";\\n            //writeFile(lcache,back);\\n            //return lcache+\\\"##\\\"+playUrl+\\\"#isVideo=true#\\\"\\n            playUrl=cacheM3u8(playUrl);\\n            return playUrl\\n        }else if((!/触发了防盗链|未授权|接口防盗/.test(back))&&(!/http|url/.test(back))&&(!/msg|code|html/.test(back))){\\n            log(back);\\n            return 'toast://疑似对方数据加密了，具体数据看日志'\\n        }\\n    }catch(e){\\n        log(e.message);\\n        return bad\\n    }\\n    try {\\n        back=JSON.parse(back);\\n        let realUrl=back.url;\\n        if(typeof(realUrl)==\\\"undefined\\\"||!realUrl){\\n            log(back);\\n            return \\\"toast://道长仓库解析失败！返回播放地址为空\\\"\\n        } else if(typeof(isVideo(realUrl,rechange))=='string'){\\n            return isVideo(realUrl,rechange);\\n        }else{\\n            return realUrl+\\\"#isVideo=true#\\\";\\n        }\\n        //else{\\n        //realUrl+=\\\";{User-Agent@Mozilla/5.0}\\\";\\n        // }\\n    }catch (e) {\\n        log(\\\"检测到解析口非json错误:\\\"+e.message+',开始x5免嗅探');\\n        // require('https://hjdhnx.coding.net/p/hiker/d/dr/git/raw/master/js/lsg.js');//引用本地储存插件\\n        const lsg=$.require(\\\"hiker://page/localStorage?rule=道长仓库Pro\\\");//引用子页面本地储存插件\\n        let local_ms = lsg.getItem('timeout');\\n        let ms = parseInt(ms)||parseInt(local_ms)||5000;\\n        let max_count=Math.ceil(ms/250);\\n        log(\\\"本次嗅探超时:\\\"+ms+\\\"共计待抓包:\\\"+max_count+\\\"次\\\");\\n        showLoading('嗅探中，若失败就切换web嗅探...');\\n        let _x5 = $.toString((isVideo,rechange,playUrl,max_count,PC_UA,isBadVideo)=>{\\n            try {\\n                if(typeof(fba)=='undefined'||!fba){\\n                    var fba = fy_bridge_app;\\n                }\\n                try {\\n                    if(typeof(request)=='undefined'||!request){\\n                        eval(fba.getInternalJs());\\n                    }\\n                }catch (e) {\\n                    fba.log(e.message);\\n                }\\n                fba.putVar(\\\"_x5jxUrl\\\",playUrl);\\n                if(window.count == null){\\n                    window.count=1;\\n                }\\n                let text='';\\n                try {\\n                    text=document.querySelector(\\\"body\\\").innerText;\\n                }catch (e) {fba.log(e.message)}\\n                if(/触发了防盗链|未授权|接口防盗/.test(text)&&window.count===1){\\n                    fba.log(\\\"检测到有授权，开始过授权\\\");\\n                    //location.reload();\\n                    location.href=fba.getVar(\\\"_x5jxUrl\\\");\\n                }\\n                window.count++;\\n                // fba.log('count:'+window.count+',max_count:'+max_count);\\n                if( window.count >= max_count){\\n                    fba.log(\\\"超过\\\"+max_count*250+\\\"毫秒未获取到资源地址，跳到源网页,以下是加载过的地址\\\");\\n                    try {\\n                        let text=document.querySelector(\\\"body\\\").innerText;\\n                        // fba.log(text);\\n                    }catch (e) {fba.log(e.message)}\\n                    fba.log(JSON.stringify(_getUrls()));\\n                    return fba.getVar(\\\"_x5jxUrl\\\");\\n                }\\n                function muteMe(elem) {\\n                    try {\\n                        elem.pause();\\n                    }\\n                    catch (e) {\\n                    }\\n                }\\n                var videos = document.querySelectorAll(\\\"video\\\"), audios = document.querySelectorAll(\\\"audio\\\"), v2 = document.querySelectorAll(\\\"embed\\\"), v3 = document.querySelectorAll(\\\"#player\\\");\\n                try {\\n                    [].forEach.call(videos, function (video) {\\n                        muteMe(video);\\n                    });\\n                } catch (e) {}\\n                try {\\n                    [].forEach.call(audios, function (audio) {\\n                        muteMe(audio);\\n                    });\\n                } catch (e) {}\\n                try {\\n                    [].forEach.call(v2, function (v) {\\n                        muteMe(v);\\n                    });\\n                } catch (e) {}\\n                try {\\n                    [].forEach.call(v3, function (v) {\\n                        muteMe(v);\\n                    });\\n                } catch (e) {}\\n                var urls = _getUrls();\\n                // fba.log(JSON.stringify(urls));\\n                try {\\n                    for(let i in urls) {\\n                        let u=urls[i];\\n                        try{u=decodeURIComponent(u);}catch(e){\\n                            u=unescape(u);\\n                        }\\n                        //\\n                        if(/url=http/.test(u)){\\n                            u = u.split(\\\"url=\\\").slice(-1)[0];\\n                            // fba.log(\\\"url分割:\\\"+u);\\n                        }else if(/url=\\\\//.test(u)&&/\\\\.m3u8/.test(u)){\\n                            let host = u.match(/(.*)\\\\/\\\\/(.*?)\\\\//)[0];\\n                            u = host+u.split(\\\"url=\\\").slice(-1)[0];\\n                            // fba.log(\\\"url分割:\\\"+u);\\n                        }\\n                        else if(/vid=http/.test(u)){\\n                            u = u.split(\\\"vid=\\\").slice(-1)[0];\\n                            fba.log(\\\"vid分割:\\\"+u);\\n                        }else if(/vid=\\\\//.test(u)&&/\\\\.m3u8/.test(u)){\\n                            let host = u.match(/(.*)\\\\/\\\\/(.*?)\\\\//)[0];\\n                            u = host+u.split(\\\"vid=\\\").slice(-1)[0];\\n                            fba.log(\\\"vid分割:\\\"+u);\\n                        }\\n                        else if(/\\\\?(.*)=http/.test(u)&&/\\\\.m3u8/.test(u)){\\n                            u = \\\"http\\\"+u.split(/\\\\?(.*)=http/).slice(-1)[0];\\n                            fba.log(\\\"其他分割:\\\"+u);\\n                        }\\n                        //|index\\\\.m3u8$\\n                        else if(/\\\\/1\\\\.m3u8/.test(u)){\\n                            continue;\\n                        }\\n                        u=u.replace(/&from=.*|&next=.*|&jump=.*/,'');\\n                        let realUrl = isVideo(u,rechange);\\n                        if(typeof(realUrl)=='string'&&!isBadVideo(u)){//过滤吊毛视频\\n                            //fy_bridge_app.setWebUa(PC_UA);\\n                            if(typeof(fba.getHeaderUrl)!=='undefined'&&typeof(rechange)!=='function'){\\n                                // let backUrl = fba.getHeaderUrl(u.replace(\\\";{\\\",\\\"#isVideo=true#;{\\\"));\\n                                let backUrl = fba.getHeaderUrl(urls[i]).replace(';{','#ignoreImg=true##isVideo=true#;{');\\n                                let u1 = backUrl.split('#ignoreImg')[0];\\n                                let u2 = '#ignoreImg'+backUrl.split('#ignoreImg')[1];\\n                                u1 = u1.replace(/&from=.*|&next=.*|&jump=.*/,'');\\n                                if(/url=http/.test(u1)){\\n                                    u1 = u1.split(\\\"url=\\\").slice(-1)[0];\\n                                }else if(/url=\\\\//.test(u1)&&/\\\\.m3u8/.test(u1)){\\n                                    let host1 = u1.match(/(.*)\\\\/\\\\/(.*?)\\\\//)[0];\\n                                    u1 = host1+u1.split(\\\"url=\\\").slice(-1)[0];\\n                                    // fba.log(\\\"url分割:\\\"+u);\\n                                }\\n                                else if(/vid=http/.test(u1)){\\n                                    u1 = u1.split(\\\"vid=\\\").slice(-1)[0];\\n                                }else if(/vid=\\\\//.test(u1)&&/\\\\.m3u8/.test(u1)){\\n                                    let host1 = u1.match(/(.*)\\\\/\\\\/(.*?)\\\\//)[0];\\n                                    u1 = host1+u1.split(\\\"vid=\\\").slice(-1)[0];\\n                                }\\n                                else if(/\\\\?(.*)=http/.test(u1)&&/\\\\.m3u8/.test(u1)){\\n                                    u1 = \\\"http\\\"+u1.split(/\\\\?(.*)=http/).slice(-1)[0];\\n                                }\\n                                backUrl = u1 + u2;\\n                                // fba.log('返回自动加cookie链接:'+backUrl);\\n                                fba.log('返回链接:'+u+'并自动加了cookie,具体cookie在视频播放处查看');\\n                                return backUrl;\\n                            }\\n                            else{\\n                                fba.log(\\\"返回仓库x5免嗅结果:\\\"+realUrl);\\n                                return realUrl\\n                            }\\n                        }\\n                    }\\n                }catch (e) {\\n                    fba.log(e.message)\\n                }\\n            }catch (e) {\\n                // fy_bridge_app.log('x5大范围错误:'+e.message);\\n                alert('x5大范围错误:'+e.message);\\n                return 'toast://报错结束x5'\\n            }\\n        },isVideo,rechange,playUrl,max_count,PC_UA,isBadVideo);\\n        let useWeb=lsg.getItem(\\\"通免\\\",\\\"X5\\\")===\\\"WEB\\\";\\n        //log(\\\"仓库使用web通免替代x5:\\\"+useWeb);\\n        let ruleHead=useWeb&&parseInt(getAppVersion())>=2339?\\\"webRule://\\\":\\\"x5Rule://\\\";\\n        let x5Url = ruleHead+playUrl+ '@' +_x5;\\n        return x5Url\\n    }\\n}\\n\\nfunction x5ParsePro(x5list,x5Timeout,isVideo){\\n    let bpath = 'file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/rules/dzHouse/html/海阔嗅探器.html';\\n    let bcode = fetch(bpath);\\n    if(!bcode||!/fy_bridge_app/.test(bcode)){\\n        log('本地未安装嗅探器，开始安装');\\n        const {api} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\n        let html = fetch(api.host+'/rulelist.json?id=2055');\\n        if(/海阔视界/.test(html)){\\n            writeFile(bpath,html);\\n        }else{\\n            writeFile(bpath,fetch('https://hjdhnx.coding.net/p/hiker/d/dr/git/raw/master/html/getVideo.html'))\\n        }\\n    }\\n    x5Timeout = parseInt(x5Timeout)||5000;\\n    let max_count=(x5Timeout/250); //根据超时自动计算了可执行的次数\\n    putVar('x5List',JSON.stringify(x5list));\\n    let _x5 = $.toString((isVideo, max_count,x5Timeout,isBadVideo) => {\\n        //初始化fba和requst\\n        if (typeof (fba) == 'undefined' || !fba) {\\n            var fba = fy_bridge_app;\\n        }\\n        try {\\n            if (typeof (request) == 'undefined' || !request) {\\n                eval(fba.getInternalJs());\\n            }\\n        } catch (e) {\\n            fba.log(e.message);\\n        }\\n        //------------------\\n        try {\\n            if (window.count == null) {\\n                window.count = 1;\\n            }\\n            let text='';\\n            try {\\n                text=document.querySelector(\\\"body\\\").innerText;\\n            }catch (e) {fba.log(e.message)}\\n            if(/触发了防盗链|未授权|接口防盗/.test(text)&&window.count==1){\\n                location.reload();\\n                fba.log(\\\"检测到有授权，开始过授权\\\");\\n            }\\n            window.count++;\\n            // fba.log('count:' + window.count + ',max_count:' + max_count);\\n            if (window.count >= max_count) {\\n                fba.clearVar('x5List');\\n                fba.hideLoading();\\n                let fmsg = '道长仓库通免解析失败,原因:超时'+x5Timeout+'毫秒';\\n                fba.log(fmsg);\\n                return 'toast://'+fmsg;\\n            }\\n        }catch (e) {\\n            fba.log(e.message);\\n        }\\n\\n        function muteMe(elem) {\\n            try {\\n                elem.pause();\\n            } catch (e) {\\n            }\\n        }\\n\\n        var videos = document.querySelectorAll(\\\"video\\\"), audios = document.querySelectorAll(\\\"audio\\\"),\\n            v2 = document.querySelectorAll(\\\"embed\\\"), v3 = document.querySelectorAll(\\\"#player\\\");\\n        try {\\n            [].forEach.call(videos, function (video) {\\n                muteMe(video);\\n            });\\n        } catch (e) {\\n        }\\n        try {\\n            [].forEach.call(audios, function (audio) {\\n                muteMe(audio);\\n            });\\n        } catch (e) {\\n        }\\n        try {\\n            [].forEach.call(v2, function (v) {\\n                muteMe(v);\\n            });\\n        } catch (e) {\\n        }\\n        try {\\n            [].forEach.call(v3, function (v) {\\n                muteMe(v);\\n            });\\n        } catch (e) {\\n        }\\n        var urls = _getUrls();\\n        try {\\n            for (let i in urls) {\\n                let u=urls[i];\\n                //u=decodeURIComponent(u);\\n                try{u=decodeURIComponent(u);}catch(e){\\n                    u=unescape(u);\\n                }\\n                if(/url=http/.test(u)){\\n                    u = u.split(\\\"url=\\\").slice(-1)[0];\\n                }else if(/vid=http/.test(u)){\\n                    u = u.split(\\\"vid=\\\").slice(-1)[0];\\n                }else if(/\\\\?(.*)=http/.test(u)){\\n                    u = \\\"http\\\"+u.split(/\\\\?(.*)=http/).slice(-1)[0];\\n                    //fba.log(\\\"其他分割:\\\"+u);\\n                }else if(/\\\\/1\\\\.m3u8$/.test(u)){\\n                    continue;\\n                }\\n                u=u.replace(/&from=.*|&next=.*|&jump=.*/,'');\\n                let realUrl = isVideo(u);\\n                if (realUrl&&!isBadVideo(u)) {//过滤吊毛\\n                    fba.log(\\\"仓库x5免嗅结果:\\\" + realUrl);\\n                    fba.clearVar('x5List');\\n                    return realUrl\\n                }\\n            }\\n        } catch (e) {\\n            fba.log(e.message)\\n        }\\n    }, isVideo, max_count,x5Timeout,isBadVideo);\\n    const lsg=$.require(\\\"hiker://page/localStorage?rule=道长仓库Pro\\\");\\n    let useWeb=lsg.getItem(\\\"通免\\\",\\\"X5\\\")===\\\"WEB\\\";\\n    //log(\\\"仓库使用web通免替代x5:\\\"+useWeb);\\n    let ruleHead=useWeb&&parseInt(getAppVersion())>=2339?\\\"webRule://\\\":\\\"x5Rule://\\\";\\n    return ruleHead+bpath+'@' + _x5;\\n}\\n\\nfunction LazyParseFast(playUrlList,getTimeout,x5Timeout){\\n    const {isVideo,getHeaders,x5ParsePro} = $.require('hiker://page/globalParse?rule=道长仓库Pro');\\n    // log('开始执行'+playUrlList.length+'个地址的批量嗅探:'+playUrlList);\\n    log('开始执行'+playUrlList.length+'个地址的批量嗅探');\\n    let playUrls = playUrlList.map((it)=>{\\n        return {\\n            url:it.split(\\\";\\\")[0],\\n            options: {\\n                headers: {\\n                    //\\\"User-Agent\\\": \\\"Dart/2.13 (dart:io)\\\",\\n                    \\\"User-Agent\\\":\\\"Mozilla/5.0\\\"\\n                },\\n                timeout: getTimeout\\n            }\\n        }\\n    });\\n    let bhtml = batchFetch(playUrls);\\n    let videos = [];\\n    let x5list = [];\\n    for(let i in bhtml){\\n        let order = parseInt(i)+1;\\n        let tname=order+'号解析网址:';\\n        //log(tname);\\n        let turl=playUrlList[i].split(\\\";\\\")[0];\\n        let jname=playUrlList[i].split(\\\";\\\").length>1?playUrlList[i].split(\\\";\\\")[1]:\\\"\\\";\\n        tname+=jname;\\n        let backcode = bhtml[i];\\n        if((!/url|http/.test(backcode))&&(!/#EXTINF/.test(backcode))){\\n            log(tname+turl+'有问题,可能加密或者挂了');\\n            continue;\\n        }else if(/#EXTINF/.test(backcode)){\\n            //let lcache=\\\"/storage/emulated/0/Android/data/com.example.hikerview/files/Documents/cache/video_\\\"+tname+\\\".m3u8\\\";\\n            //writeFile(lcache,backcode);\\n            //videos.push(lcache);\\n            let pUrl=cacheM3u8(turl);\\n            videos.push(pUrl);\\n            continue;\\n        }\\n        try {\\n            let url = JSON.parse(backcode).url;\\n            if(/^http/.test(url)){\\n                let realVideo = isVideo(url);\\n                if(typeof(realVideo)=='string'){\\n                    log(tname+'已解析出视频:'+realVideo);\\n                    if(jname){\\n                        realVideo+=\\\"★\\\"+jname\\n                    }\\n                    videos.push(realVideo);\\n                }else{\\n                    log(tname+'解析出不知道什么东西:'+url);\\n                    url+=\\\"#isVideo=true#\\\";\\n                    if(jname){\\n                        url+=\\\"★\\\"+jname\\n                    }\\n                    videos.push(url);\\n                }\\n            }else{\\n                log(tname+'为json接口且无返回视频地址数据:'+playUrlList[i]+'\\\\n'+backcode);\\n            }\\n        }catch (e) {\\n            log(tname+'为x5接口,加入x5嗅探列表');\\n            x5list.push(playUrlList[i]);\\n        }\\n    }\\n    // log(videos);\\n    if(videos.length>0){\\n        if(getVar('dp.cacheVideo','true')==='true'&&parseInt(getAppVersion())>=2255)\\n        {\\n            log(\\\"尊敬的魔断用户，视频缓存已启用，请尽情享受看剧时光\\\");\\n            let videosCache=videos.map((it)=>{\\n                let headers={};\\n                if(it.split(\\\";\\\").length>1){\\n                    let head = it.split(';')[1];\\n                    if(/@/.test(head)&&/{|}/.test(head)){\\n//head = head.replace(/{|}/g,'');\\n                        head = head.split(\\\"{\\\")[1].split(\\\"}\\\")[0];\\n                        head = head.split('&&');\\n                        for(let i in head){\\n                            let key = head[i].split('@')[0];\\n                            let value =head[i].split('@')[1].replace(/;/,'；；');\\n                            headers[key] = value;\\n                        }\\n                    }\\n                }\\n                return {\\n                    url:it.split(\\\";\\\")[0].split(\\\"★\\\")[0],\\n                    options:{\\n                        headers:headers\\n                    }\\n                }\\n            });\\n            var data=batchCacheM3u8(videosCache);\\n            data=data.map((it,id)=>{\\n                let extra=\\\"\\\";\\n                if(videos[id].split(\\\";\\\").length>1){\\n                    extra=\\\";\\\"+videos[id].split(\\\";\\\")[1];\\n                }else if(videos[id].split(\\\"★\\\").length>1){\\n                    extra=\\\"★\\\"+videos[id].split(\\\"★\\\")[1];\\n                }\\n\\n                if(it+\\\"\\\"!=\\\"null\\\"){\\n                    return it+extra\\n                }else{\\n                    return videos[id]\\n                }\\n            });\\n            //log(data);\\n            return data\\n            //return videos\\n        }else{\\n            return videos\\n        }\\n    }\\n    log('共有'+x5list.length+'个x5地址进行轮流嗅探');\\n    //没有的话就开始依次x5嗅探\\n    showLoading('嗅探中，若失败就切换web嗅探...');\\n    return x5ParsePro(x5list,x5Timeout,isVideo);\\n}\\nvar lazy=$('').lazyRule(()=>{\\n    try{\\n        realUrl=input;\\n        eval(\\\"var config_dp =\\\" + fetch(\\\"hiker://files/cache/MyParseSet.json\\\"));\\n        eval(fetch(config_dp.cj));\\n        log(input+'->正在断插魔改版解析...');\\n        // 加入超时设置，建议在首页设置\\n        return aytmParse(realUrl)\\n    }catch(e){\\n        return input\\n    }\\n});\\n$.exports.isPic=isPic;\\n$.exports.isVideo=isVideo;\\n$.exports.isBadVideo=isBadVideo;\\n$.exports.comParse=comParse;\\n$.exports.getHeaders=getHeaders;\\n$.exports.lazyParse=lazyParse;\\n$.exports.x5ParsePro=x5ParsePro;\\n$.exports.LazyParseFast=LazyParseFast;\\n$.exports.lazy=lazy;\"},{\"name\":\"任务仓库接口\",\"path\":\"taskCall\",\"rule\":\"js:\\nString.prototype.strip = function () { return this.replace(/(^\\\\s*)|(\\\\s*$)/g, \\\"\\\"); };\\nfunction task_req(task_api,task) { // 通用发送仓库post调用任务请求\\n    const {getFile} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\n    let houseFile = getFile||false;\\n    if(!houseFile){\\n        setItem('is_house_vip', 'false');\\n    }\\n    let house_data = houseFile();\\n    let result = request(task_api, {\\n        headers: {\\n            'content-type': 'application/json'\\n        },\\n        body: JSON.stringify({\\n            \\\"params\\\": {\\n                \\\"data\\\": {\\n                    \\\"type\\\": task.mode||'run',\\n                    \\\"func\\\": task.func||'',\\n                    \\\"params\\\": task.params||[]\\n                },\\n                \\\"auth\\\": {\\n                    \\\"name\\\": house_data.username||\\\"\\\",\\n                    \\\"password\\\": house_data.password||\\\"\\\"\\n                }\\n            }\\n        }),\\n        method: 'POST'\\n    });\\n    return JSON.parse(result).result;\\n}\\n\\nfunction task_upload(task){ // 通用任务发布新增及修改功能\\n    const {api,getFile} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\n    let houseFile = getFile||false;\\n    if(!houseFile){\\n        setItem('is_house_vip', 'false');\\n    }\\n    let api_url = api.host+'/hikerule/task/add';\\n    let house_data = houseFile();\\n    let result = request(api_url, {\\n        headers: {\\n            'content-type': 'application/json'\\n        },\\n        body: JSON.stringify({\\n            \\\"params\\\": {\\n                \\\"data\\\": {\\n                    \\\"name\\\": task.name,\\n                    \\\"pycode\\\": task.pycode,\\n                    \\\"note\\\": task.note,\\n                    \\\"test_code\\\": task.test_code,\\n                },\\n                \\\"auth\\\": {\\n                    \\\"name\\\": house_data.username||\\\"\\\",\\n                    \\\"password\\\": house_data.password||\\\"\\\"\\n                }\\n            }\\n        }),\\n        method: 'POST'\\n    });\\n    return JSON.parse(result).result;\\n}\\n\\nfunction task_call(id,func,params){\\n    const {api} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\n    let task_api = api.host+'/hikerule/task/run/'+id;\\n    let task = {\\n        mode:'call',\\n        func:func,\\n        params:params||[]\\n    };\\n    return task_req(task_api,task);\\n}\\n\\nfunction task_rename(id,new_task_name){\\n    const {api,getFile} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\n    let houseFile = getFile||false;\\n    if(!houseFile){\\n        setItem('is_house_vip', 'false');\\n    }\\n    let house_data = houseFile();\\n    let task_api = api.host+'/hikerule/task/rename/'+id;\\n    task_api = task_api+'?name='+house_data.username+'&password='+house_data.password+'&task_name='+new_task_name;\\n    try {\\n        let result = JSON.parse(fetch(task_api,{}));\\n        if(result.status==0){\\n            return  result.detail\\n        }else{\\n            return result.result+''+result.detail\\n        }\\n    }catch (e) {\\n        log(e.message);\\n        return ''+e.message\\n    }\\n}\\n\\nfunction task_change_state(id){\\n    const {api,getFile} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\n    let houseFile = getFile||false;\\n    if(!houseFile){\\n        setItem('is_house_vip', 'false');\\n    }\\n    let house_data = houseFile();\\n    let task_api = api.host+'/hikerule/task/change_state/'+id;\\n    task_api = task_api+'?name='+house_data.username+'&password='+house_data.password;\\n    try {\\n        let result = JSON.parse(fetch(task_api,{}));\\n        if(result.status==0){\\n            return  result.detail\\n        }else{\\n            return result.result+''+result.detail\\n        }\\n    }catch (e) {\\n        log(e.message);\\n        return ''+e.message\\n    }\\n}\\n\\nfunction task_run(id){\\n    const {api} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\n    let task_api = api.host+'/hikerule/task/run/'+id;\\n    let task = {};\\n    return task_req(task_api,task);\\n}\\n\\n$.exports.taskCall = task_call;\\n$.exports.taskRun = task_run;\\n$.exports.taskReq = task_req;\\n$.exports.taskUpload = task_upload;\\n$.exports.taskRename = task_rename;\\n$.exports.taskChangeState = task_change_state;\"},{\"col_type\":\"movie_3\",\"name\":\"全局储存\",\"path\":\"localStorage\",\"rule\":\"let localStorage = (function() {\\n    evalPrivateJS(\\\"jwUKwNTiPGcWSLCXB5XtAXwb6LQbVyHD+0XJ7l07ce0=\\\");\\n    //pathto=undefined;\\n    evalPrivateJS(\\\"4C0YxRYnGCYkgFRXtpl/Cz5zL5hh4jCCztb+ng+WokymQ8oUrzS9lA8yxC5aFadnSEmyHKMbraflRqXCnNRHDlk6ue8yHTO16lBPrpwgs5jf0PhrAtoTJIE0ZHn9mKaQ4Jd2erqb4I55beWIeugKsDs211SzINQ5yJgSh1dVuNzzxRGJg40FmTuVmXVfN1xg2WIGHBEmkVnGxmORhPONA+Q5VwPmdp41/hze3eIsUvho7VCBgK4raJmPalIRBBVlCVgn8FkWmfKqZo+VW+oBcH7hrcrsSlCSjBangT/7syWHxKYhehU0kaMYjnWFg1Em0cmNRtomCsHz1B8q32OeQHoawdWxzKOaMHOXDBjRojA8E/ah0WROyziqRSxl/m8dhBd0f9phYz/5SU/zJD52X/9EC16WVVdpSW33akRHRslPpRlTWF9+AyRmRw0eZOEs1o9QMPAQUfAxbYyFHgztw/O2dJRpHyTmiBiaaqTcivx6v9zyvBz04wI1AaSCui+dTuU3lu5xdEt3Ajt6Z3iDXOVcEP0EDF7474PQU6JEZuwe97Sch4bi1wB1XHZSfItdlYYoGed3LLpbmDAIRciv0rAop8VmQcTt2K3Lfh1RDYY0YtvRcH49OvpDRH/xa5Fc8MY3DrFoA7qcoF4eCgiVBfBgJR68+LpQK7tOkg8k9ec+3NSxJThcl8d6yNwxT9Tk17zeJgd6MoyYZIpWQLlF6YvbOdEWhjmnA78wC0hWz+Xm6hQMSqtFw+bhFf7cBGU3aatPFmdCY2EdXfh0IYW85wdOyMfiwW7/vVTp9iE00I3F09wGHkGKhVbLueAkYe7zzJXR7thaFor6H7qLmJjbRQk9evNtBQXNR7DifiXuQf2lt7nOH80SWm1fDHHzjmPsNIps2TXGT+iwVV69g/tWipVQ6D8BTx+cCQp47nmTIrY+qN4kh2FYh5LlwXdgIyy1VIuC3x053ewAIIUmlY9niEpqYt+1fFPXOCtCGtYbSd37vVR1EOj2k5Gu/+9JWg2qvwl1twelg1J0txarIi4kTbTrvrnFLN92pofpZQUfoWo4ce7HWNdbu4JKEraLQUfdfGEPd1TIufuuRVa39eq9GZySDuBL60MPdldxKw1zo+fB5ZY+YMj3LL2gGtDbs98+AsRV9LJWmUmsx91hmJtFUMWD3xnj8HMZWs0NPlCFUr9485KqTpo5kRzGfF+k/Nl2Jzrv5cvkqtUnLgKpXEOj/se/oDzOArQKI5TNUbvYwcwcdjjMSfjK68Krwhs+n6SmWZ4ZdgRHgAK5MoFi3XmLV47P3vSRWu5zyEsMk4y3uuCFiuRPRlu4Q5pJvuOem7H7ULiIhCemv5DgkGtDL1cGL4EQhYRB6ISzVvsb2EaP9wQE6DVRnM7O+pnSzet6lzp3pFdGnbox1LRfC60utXZ+CjIm4iEMmtbB2N5zDShGbeM3XUbJQdCBis8XIrhh2biB5hBCVwn3Y3ett7GDPVtoi1GRjz+JbgM+YR928KbdWS5tFaMM3Kj3Xv6otIxzMBnDC9uW3d+IXx6vLPJ0JRuh3yP7pTla6c3iR4p9nWYDqJ+ZSmprHFnDOzsLWmFjapje/MqwMJd6Tk3nAWwicMOPuYpMyqIF04fl4mqgtsHLSMWRRNHPZjETQ9gRmeDYe6aRtlW02qL2olDENqLQMtAdoirNWRcP9VL3Td8HaUO6fSlGNabMakJD/00XChOSUOIP+7fM7V0/l1bLWPtEz1i7LygTV7pdGoDntqSCEnJrByhBAzLRg5QIc9438IhKmyfn0/3awoD1Ir780eyp/XcI6xNcw6Tv/ETfHg0e7iYC0UYcJIE5QUXv0s+YoGIEq5GIzKub8HNjSTUpsvnkVx+dbe2jRn3Yb9W7JCZ5YS6F5MyUVspjMD7NYc+DWjUL2b2sVyAfeYpC8Uhah9tumavbBv7a3a9kgFbq58lrHxzY7iJQVigzq3e1a2BSb0PcW1aJ8BD7NkNphKYayTxykgwilERL8jqqBEniHVdBxDJYLb+Xw3alLmltuTEV6KGtBntBX+yz36RPDMyGIKe+3fzcxfnCDn20ModVVkVNozPqMXZ0G5L4aLTAQakYKUjsVMQjAhQkTlHBeO/aLPx9sxl++j1Z5rLgG12TN4XJ1eicvw4AVE58Loraq0QiE0cS7PH1pbrZWrft7LYGiyBShor7+0jioUh1pdWq2qMYLqeMEeuCROQt57mFrOjyPH49qp97cWOrgeg2WyfWSDGQPje5+P0yQoCpD/D3RAMuWmb9wlBtcq2j8WJPt91E3kKawuQIyvd2r2Ujx4+HTNtVKb9kMLOO85I65bNGBH+4irSy5gQYlE26A2cSGIcLKQRlvJoMna7L/9wyry4HzOrzkrAvLdgsSNlYjpHQERiOI80sJ5jNCCnfw013F+A+sAfLmyS/BDLNQ1qaQ3p6h8/JqAfhX5OGHgSiRVOCEjuaDB/MwZNCu3QL9ehhoAj7uOf8Pkr3mIjbhh9Hijsjx191+0e2JQrFa01AVJKEVtuPtIc2h/1pPKMvyenxjTO2OxPnjjt+84nIKKhxDJ/ghPt7iv8PmTJ0lKKyPRssl8f/QdHdxupb6jTsI6UKmz9Y46PMBuD6P3wh8qp36O6oibNDiQd1sE10vJh9z1FysKIe8EqMpnNdEmG2TfEBxRpmQrhKEqee0p6+a6sQo8cVlRJkKQAYKawcaNES5Xc6dQY5nqeiq8sUizf1spfHeHelDu1M6BRXuCjFafXhz8i3lPWgYqVpfx13igVCRf47UH652yLnsmepCBWgyBTWAcOyF1Qx8YGtZnob1TN+6xEwzpcWVy7QO9P92sKA9SK+/NHsqf13COt0JHCtTV1OlTQW+JAKyxe1Hl7+s95z3KCgFKQS+3As1JV7Na+g+LCR2Ievu8d5D0L7GwoDreUv4374LRaFkNsHOqWbU9nhQjdMVr7a/i8O/4hbptaSzqqkgYFiNFU/omW5qwIz7sp4nscITRE3gua6bzklMZ8ECn1iqAWt0a6geki5DaL8qYapTCChjlWsExqFuxiWP35TUCddEd8ACbMGs+gQFyDOozfBDG17dZO0mCwW+PzCL2jbICDNai5/jm1Qr6ML56jzUaIDz0GLPTSaex1UDDwkQ9o7mXWC0R7jWnzbkHRWcomVbWmGqL1rjdoacs/R9ujqUuBA6A5VL/qkQ1xHL42EXooprC8wrrfR68zMMFxOwU7CYHJ7bhG/Q4rNsXDBcMo1Adiq9LXbXm/QJj0u/jgZGssz0nnKKUFJcxzuANK96zWwf1DXasUcOoEuEatm1rmP5wrBJmW/ZwT6aBBiR2OSJ0xr8tQ6ObmdKjyb+1eEXb1437R2IdhDUdk5PRztH2YFt2pmuL4/LmILFAvPdiyMtDHNj+Kh4sV4MlXbWPrrI97YBOFpFlX+gnewKKfFZkHE7dity34dUQ2Gne6sAGx1zxyjZv5KBM26lRHF45XqFNJ1RQ3hMymJHsyYNsMO41BWrGv19PA468ecw9HcRN0whjUTgns8ZVaC4hiJsgY07aAEBHm90/uhhjO/Wmb7wuVadhl9RnHeQjpx4gwCrLz5i5s5It1sBwfDb0Fe+PCpLkc+wIINK2Y86kPthR6gJwW75zuoN5C0CAiDwfU73vaAZahzf4VLNlM0U04OtHYBi13YgPoNmGHRelZVEy2KuKVZghD14vSlY+JrMBDdm2y2thFV+BrihL7+fQ5wcYnxGelawDuoSR5+bDDkr6RL40L4xyfAhxlrOn0uA28ghGeWguaWKEv5nBrrveu1ueVy1MvGUYBY+IlEr8NdDNRdmEzXt39kGld86xOfAH/xL1VmugaXOGaPB2qc7WDRkW6k5F6n3PkIzdPXyONKp1DkOg3ocSMZMTs6GKj9C3vODZ6ZQpwNDYLMT+CmEL18GRjXNcZlP/LnhiAIscYTL1+iHWDYvRmvPMwtOHhCnEXIU3FTbP+6QRGA6qydbnneqVhXowcLmbMIz16IC1kwhZj75/M53sKYX2zRgOSTAfNSD/5lZYSNUxJfKTDgiaFEggrCrd+3Cc+chzslI3zDXEKTrvlcX2InC9uH+fsypyHw+AvY2OmBGQMIIc8fE3tNO0gBTVqXsdsE76YwHr29dzQckusuyJsBfSVclrvsNCZ1PQDL8H3cRs3HE9nUkx5bbJYWsPxb825gnEpWU9Z9Ktzvsli7/heOlDKpHxJb1uCrWqf8gRnWmq3zfSSrUXBHSLu62MrkXTjWgapUVxMGkrnzR0E4PMy1bFcyDpEQe15TayWBM1B6jrIG+0DRR9OaCUPwD7exNmjZb9M81us+AIRfyzJPZGmfHuT9SNzFfNuQdFZyiZVtaYaovWuN2irI3zQatKCDnQIXpr0VhG0Gop8c/zroWBoN/aVKmn8skSFvADOjoZAixg6K1y9wFi8peCmimFZ3ZzCVsG6EU9Svlbq5+wn7D6y+dAYdaPms4gwCrLz5i5s5It1sBwfDbz4X4VxqIpcTC9NaYKqA7GKK+aTrZWUwwN21QOtr8eqxSgJ1U9eCOcWXQd+p36Gy4fY+t9c2CsVNbNl1ghxa9bI8U6e6FTd/vvBaq9jrKditq4mNCaiogmfPK6M48UYI8jZMCdd/9C8BqvUj4bYU5byWASEG6BBGdK8Klfi/a4LWt3ivC4u9QBTfb/vCmNJi/QAfabcPG+UsWmsYNRK+g8hMcsuBmhh48NphRvebVQqq6ncKxc1nFHWMW5M6of+z8c1HddnieDP9GaBsq+ysljKslYrt989PY9xsbmkr3X/oCfiFU4NfcOhee++ngW0XpZAVt1I2Qnc1alwbnoNqMMhXIB95ikLxSFqH226Zq9sG/trdr2SAVurnyWsfHNjuIlBWKDOrd7VrYFJvQ9xbVomKqQjuh9dzf2nvVrBzbEF0CZY6izkY/RQY5r9k93/y2NG7o07nMYjOtZYYeNUoik7GbK/HzQl1S7s/FChnt9M6fE0UyuPmttO98hqzxQbteMalMtSce2WLcjyXVGfpqdBkYym4gZByccS6antt4oLdluWSSJsHX1IcXhQy6oJ+Ahjw9hFYwXLHPLoCo3jEliUAK4179wtYtHsO0abLx4+hmtM5Fz7wUVahBA9supOTf/FD4siZMMof5W3vm5DedhqGANlht3mI6RmIhv48QVtneMsUzYC4NDhZD4M5R6p7GXBqcpu3FaEF/0I0e3LceX1HN+iDqKRPuGzvpac/1tsGPIteADxu9OYoap2z3F1CzSg/Uua8l/KEztAKDcvbhNU/YUc2lhgxgfdb4e+P9TZ7RaX82s627u0CbFsfGE/1hLpb5Mc2vk1uDGrdIcbWA6xhpYAHYhEYUl9c75Y/R/0gl6r9+m6cI0BvBY5Aa5NBRc6UMvsO/POw5Ccr79sJziceaV3YwrYEkjp6Ki+OYrGu954AA+dJ9WsvNGBFGMrKAfQ9VUC/ATkJfTloMltDeV5Ao9zkaay3dKAa5/PxAGRDAUcQLDF7uVXbD1vFgE/+RXiwzS5N7cr3aFBdRY7XAmFz/fb0/KSpR8CQ/lokpmM2mltJ9vGPgiqb5nZl9Ku7d2GlgAdiERhSX1zvlj9H/SBujBPoO1fpoOu5F35cdHa5kSFvADOjoZAixg6K1y9wFlj0Ez5ksUW3WU63E7e4qtDUCKWwjjU5f0Fd57VyVzpC6CdCScBjYSzT9rZLVskq61aOWrDDUNKqAQ3+nX/BBW3cQTEcOVdc15ngVXcSS/aK2QFMdiKQlqm15fErJdwqyeza7hflKTiCzUdu5VGlFW9qCt8syHoosA2NzfosJdTdN8bWHnoDr5N25et+p/nvjjOzZRaLYoY/fr/k5hqptOk=\\\");\\n    return $.exports;\\n})();\"},{\"col_type\":\"movie_3\",\"name\":\"编辑公告\",\"path\":\"devInfoEdit\",\"rule\":\"js:\\naddListener('onClose', $.toString(()=>{\\n    putMyVar(\\\"devInfo\\\",''); //清除历史公告\\n}));\\nsetPageTitle('编辑公告');\\n// let {nowJx,MyJiexi,jxsRoute} = MY_PARAMS;\\nconst {color,small,api, getFile,getApi} = $.require(\\\"hiker://page/utiliy\\\");\\n// let houseFile = getFile||false;\\nvar dev_info_url = getApi('infoGetUrl');\\n// log(dev_info_url);\\nvar get_info = function(qq){\\n    qq = qq||'434857005';\\n    let dev_info_url = dev_info_url+qq;\\n    let back_code = JSON.parse(request(dev_info_url));\\n    let dev_info=back_code.result||back_code.detail;\\n    return dev_info;\\n};\\nvar before_refresh = function(){\\n    let dev_set_info = getMyVar(\\\"dev_set_info\\\").split('$$');\\n    let dev_info_url = dev_set_info.slice(-1)[0];\\n    let back_code = JSON.parse(request(dev_info_url));\\n    let dev_info=back_code.result||back_code.detail;\\n    putMyVar(\\\"devInfo\\\",dev_info);\\n    return dev_info\\n};\\nlet d = [];\\nd.push({\\n    title:'编辑公告',\\n    desc:'支持md语法,点击进入学习Md语法\\\\n保存公告按钮在文本框最下面',\\n    col_type:'text_1',\\n    url:'https://www.runoob.com/markdown/md-tutorial.html'\\n});\\nd.push({\\n    title:'返回',\\n    col_type:'text_2',\\n    url:$('#noLoading#').lazyRule(()=>{\\n        back(false);\\n        return 'hiker://empty'\\n    })\\n});\\nif(!getMyVar('devInfo')){\\n    before_refresh();\\n}\\nlet empty = 'hiker://empty';\\nd.push({\\n    title:'阅览查阅',\\n    col_type:'text_2',\\n    // url:$(getMyVar('devInfo')).confirm()\\n    url:$(empty).rule(()=>{\\n        require(\\\"https://gitlab.com/hjdhnx/hiker/-/raw/main/js/marked.min.js\\\");\\n       let devInfo=\\\"\\\";\\n       try{\\n          devInfo=marked.parse(getMyVar('devInfo'));\\n       }catch(e){}\\n        setResult([\\n            {\\n                title:devInfo,\\n                col_type:'rich_text',\\n            }\\n        ]);\\n    })\\n});\\nd.push({\\n    desc: \\\"快来编辑你的公告吧~\\\",\\n    col_type: 'input',\\n    extra: {\\n        titleVisible: false,\\n        defaultValue: getMyVar('devInfo', '')||\\\"\\\",\\n        type: \\\"textarea\\\",\\n        height:-1,\\n        onChange: 'putMyVar(\\\"devInfo\\\",input)'\\n    }\\n});\\nd.push({\\n    title:\\\"保存公告\\\",\\n    col_type: 'text_center_1',\\n    url:$('确认保存公告吗？将会与道长仓库服务器通讯').confirm(()=>{\\n        let dev_set_info = getMyVar(\\\"dev_set_info\\\").split('$$');\\n        let input_text = getMyVar('devInfo', '');\\n        if(input_text.length >= 4){\\n            let info_set_url= dev_set_info[2];\\n            let send_data = {\\\"params\\\":\\n                    {\\\"data\\\": {\\\"info\\\": input_text},\\n                        \\\"name\\\": dev_set_info[0],\\n                        \\\"password\\\": dev_set_info[1]}\\n            };\\n            // log(send_data);\\n            let par2 = {headers:{'content-type':'application/json;charset=UTF-8','User-Agent':dev_set_info[3]},body:JSON.stringify(send_data),method:'POST'};\\n            // par2 = JSON.stringify(par2); //x5里面请求才需要编码\\n            try {\\n                let back_ret = request(info_set_url, par2);\\n                back_ret = JSON.parse(back_ret).result;\\n                if(back_ret.status===0){\\n                    // refreshPage();\\n                    return 'toast://保存成功\\\\n'+back_ret.detail;\\n                }else{\\n                    return 'toast://保存失败\\\\n'+back_ret.detail;\\n                }\\n            }catch (e) {\\n                return 'toast://错误\\\\n'+e.message;\\n            }\\n        }else{\\n            confirm({title:'道长提示',content:'虽然你很懒，但是公告至少写4个字吧！'});\\n            return 'hiker://empty'\\n        }\\n    })\\n});\\n\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"预处理依赖文件\",\"path\":\"libs\",\"rule\":\"if(getAppVersion()>=3200){\\n    try{\\n        rc(\\\"hiker://files/rules/js/$hiker.js\\\", -1);\\n        //$.setRoot('https://hjdhnx.coding.net/public/hiker/hiker/git/files/master/js/');\\n        $.setRoot();\\n        $.setLib({\\n            lsg: \\\"lsg.js\\\", //本地储存\\n            file: \\\"file.js\\\", //文件os\\n            fileSelect: \\\"fileSelect.js\\\", //文件选择器\\n            dt: \\\"dt.js\\\", //动态分类\\n            dr: \\\"dr.js\\\", //dr模板依赖\\n            drpre: \\\"drpre.js\\\", //dr模板预处理\\n            drup: \\\"drup.js\\\", //dr模板自动更新\\n            drmatch: \\\"drmatch.js\\\", //dr模板自动模板匹配\\n            drm: \\\"drm.js\\\", //dr模板小程序\\n            cms: \\\"cms.js\\\", //cms模板依赖\\n            cmspre: \\\"cmspre.js\\\", //cms预处理\\n            cmsm: \\\"cmsm.js\\\", //cms模板小程序\\n            libcheck: \\\"libcheck.js\\\", //dr检测依赖\\n            ruleEditor: \\\"ruleEditor.js\\\", //写页源神器小程序\\n            houseLazy: \\\"houseLazy.js\\\", //仓库通免\\n            lazy: \\\"lazy.js\\\", //香免\\n            sub: \\\"sub.js\\\", //道德经订阅\\n            hikerUi: \\\"hikerUi.js\\\", //海阔组件依赖\\n            hikerLibs: \\\"hikerLibs.js\\\", //海阔全能依赖\\n        });\\n    }catch(e){\\n        //toast('请尝试点击仓库主页的升级仓库旁边的按钮升级$扩展，否则某些功能不能正常使用');\\n        confirm({\\n            title: '提示-点击确定可以导入',\\n            content: '请尝试点击仓库主页的升级仓库旁边的按钮升级$扩展，否则某些功能不能正常使用',\\n            confirm: $.toString(()=>{\\n                const {getApi} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\n                let ruleHead = '海阔视界，网页插件￥js_url￥$hiker@';\\n                let url = getApi('importUrl')+\\\"5111\\\";\\n                let importUrl = 'rule://'+base64Encode(ruleHead+url);\\n                return importUrl\\n            }),\\n            cancel: $.toString(()=>{\\n\\n            }),\\n        })\\n    }\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"Import详细\",\"path\":\"ruleDetailImport\",\"rule\":\"js:\\n$.exports = \\\"hiker://page/ruleDetail?rule=道长仓库Pro&id=\\\" + $.importParam;\\n\"}]","proxy":"","icon":"https://lanmeiguojiang.com/tubiao/other/30.svg"},{"last_chapter_rule":"","title":"云口令工具箱","author":"小棉袄🌞","version":6,"type":"tool","url":"hiker://empty##","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\nd.push({\n    title: \"蓝奏网盘规则云口令\",\n    url: \"https://www.lanzoux.com/\",\n    col_type: \"text_center_1\",\n    desc: \"\",\n    pic_url: \"\"\n});\n\nd.push({\n    title: \"生成\",\n    url: $.toString(() => {\n        let u = input.split(\"@\");\n        let rule = u[0];\n        let url = u[1];\n        let h = \"云口令，\" + rule + \"，复制整条口令打开软件即可导入\\n\";\n        let r = base64Encode($.toString(() => {\n            let da = input.match(/(http|ftp|https):\\/\\/[\\w\\-_]+(\\.[\\w\\-_]+)+([\\w\\-\\.,@?^=%&:/~\\+#]*[\\w\\-\\@?^=%&/~\\+#])?/)[0]\n            if (da.indexOf(\"com/tp/\") == -1) {\n                da = da.replace(\"com/\", \"com/tp/\");\n            }\n            let u = 'https://developer.lanzoug.com/file/' + request(da).match(/'(\\?.*?)'/)[1]\n            var j = request(u, {\n                redirect: false,\n                withHeaders: true\n            })\n            let k = JSON.parse(j).headers.location[0]\n            return request(k);\n        }));\n        return \"copy://\" + h + url + \"@import=js:eval(base64Decode('\" + r + \"'))\";\n    }),\n    col_type: \"input\",\n    desc: \"请输入规则名@蓝奏云地址\",\n    pic_url: \"\"\n});\n\n\n\nd.push({\n    title: \"坚果云规则云口令\",\n    url: \"https://www.jianguoyun.com\",\n    col_type: \"text_center_1\",\n    desc: \"\",\n    pic_url: \"\"\n});\n\nd.push({\n    title: \"生成\",\n    url: $.toString(() => {\n        let u = input.split(\"@\");\n        let rule = u[0];\n        let url = u[1];\n        let h = \"云口令，\" + rule + \"，复制整条口令打开软件即可导入\\n\";\n        let r = $.toString(() => {\n            let k = input.split(\"/p/\")[1];\n            let u = \"https://www.jianguoyun.com/d/ajax/pubPreviewLink?key=\" + k + \"&pdfviewer=true&_=\" + new Date().getTime();\n            let j = request(u);\n            k = \"https://www.jianguoyun.\" + JSON.parse(j).url;\n            return request(k);\n        });\n        return \"copy://\" + h + url + \"@import=js:\" + r;\n    }),\n    col_type: \"input\",\n    desc: \"请输入规则名@坚果云地址\",\n    pic_url: \"\"\n});\n\n\nd.push({\n    title: \"羊驼网盘规则云口令\",\n    url: \"https://www.alpacadisk.com/\",\n    col_type: \"text_center_1\",\n    desc: \"\",\n    pic_url: \"\"\n});\n\nd.push({\n    title: \"生成\",\n    url: $.toString(() => {\n        let u = input.split(\"@\");\n        let rule = u[0];\n        let url = u[1];\n        let h = \"云口令，\" + rule + \"，复制整条口令打开软件即可导入\\n\";\n        let r = $.toString(() => {\n            let k = input.replace(\"/shared/\", \"/api/files/\") + \"/public\";\n            return request(JSON.parse(request(k)).file_url);\n        });\n        return \"copy://\" + h + url + \"@import=js:\" + r;\n    }),\n    col_type: \"input\",\n    desc: \"请输入规则名@羊驼网盘地址\",\n    pic_url: \"\"\n});\n\nd.push({\n    title: \"使用说明<br>长按规则名称弹出菜单选择更多分享，点击文件形式分享，将文件上传到对应的网盘，然后把链接分享到这里粘贴使用\",\n    col_type: \"rich_text\",\n});\n\nd.push({\n    title: \"云口令导入配置最佳实践<br>规则用子页面写好导入逻辑，云口令代码中调用子页面<br>\" +\n        \"如云口令：<br>http://xx.cn@import=js:$.require('hiker://page/import?rule=小程序')\" +\n        \"<br>子页面：<br>log(input);<br>'toast://已从云口令新增一个X配置'\",\n    col_type: \"rich_text\",\n});\n\n\nsetResult(d);","searchFind":"","search_url":"","group":"工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[]","proxy":"","icon":""},{"last_chapter_rule":"","title":"AI生成器","author":"","version":20,"type":"video","url":"hiker://empty##","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\nd.push({\n    title: \"终极大招，输入网站地址生成规则\",\n    url: \"\",\n    col_type: \"text_center_1\",\n    desc: \"\",\n    pic_url: \"\"\n});\n\nd.push({\n    title: \"\",\n    url: \"\",\n    col_type: \"input\",\n    desc: \"请输入要生成的小程序名\",\n    pic_url: \"\",\n    extra: {\n        titleVisible: false,\n        onChange: $.toString(() => {\n            putMyVar(\"r1\", input);\n        }),\n        defaultValue: getMyVar(\"r1\", \"\")\n    }\n});\nd.push({\n    title: \"\",\n    url: \"\",\n    col_type: \"input\",\n    desc: \"请输入网站地址，如https://cn.bing.com/\",\n    pic_url: \"\",\n    extra: {\n        type: \"textarea\",\n        height: 2,\n        highlight: true,\n        titleVisible: false,\n        onChange: $.toString(() => {\n            putMyVar(\"rule\", input);\n        }),\n        defaultValue: getMyVar(\"rule\", \"\")\n    }\n});\n\nd.push({\n    title: \"生成规则\",\n    url: $(\"#noLoading#\").lazyRule((rule1) => {\n        let url = getMyVar(\"rule\", \"\");\n        let r1 = getMyVar(\"r1\", \"\");\n        if (url == \"\" || r1 == \"\") {\n            return \"toast://请先在上面输入网站地址和名称\";\n        }\n        if (url.includes(\"@\")) {\n            return \"toast://网站地址格式不对\";\n        }\n        let arr = storage0.getItem(\"list\", []);\n        arr = arr.filter(it => it.url != url);\n        arr.push({\n            name: r1,\n            url: url\n        });\n        storage0.setItem(\"list\", arr);\n        refreshPage();\n        rule = JSON.parse(fetch(\"hiker://home@\" + rule1));\n        rule.find_rule = \"js:\\nvar 网站 = '{RULE}';\\neval(JSON.parse(fetch('hiker://page/home')).rule)\";\n        rule.url = \"hiker://empty\";\n        return \"海阔视界￥home_rule￥\" + JSON.stringify(rule)\n            .replace(\"{RULE}\", url)\n            .replace(rule1, r1);\n    }, MY_RULE.title),\n    col_type: \"text_2\",\n    desc: \"\",\n    pic_url: \"\"\n});\n\nd.push({\n    title: \"来个示例\",\n    url: $(\"#noLoading#\").lazyRule(() => {\n        putMyVar(\"rule\", \"https://cn.bing.com/\");\n        putMyVar(\"r1\", \"必应AI\");\n        refreshPage();\n        return \"hiker://empty\"\n    }),\n    col_type: \"text_2\",\n    desc: \"\",\n    pic_url: \"\"\n});\nlet arr = storage0.getItem(\"list\", []).reverse();\nfor (let it of arr) {\n    d.push({\n        title: it.name,\n        url: $(\"#noLoading#\").lazyRule((item) => {\n            putMyVar(\"rule\", item.url);\n            putMyVar(\"r1\", item.name);\n            refreshPage();\n            return \"toast://已填充\"\n        }, it),\n        col_type: \"flex_button\",\n        extra: {\n            longClick: [{\n                title: \"删除\" + it.name,\n                js: $.toString((u) => {\n                    let arr = storage0.getItem(\"list\", []);\n                    arr = arr.filter(it => it.url != u);\n                    storage0.setItem(\"list\", arr);\n                    refreshPage();\n                    return \"toast://已删除\"\n                }, it.url)\n            }, {\n                title: \"跳转\" + it.name,\n                js: $.toString((u) => {                    \n                    return \"hiker://home@\" + u\n                }, it.name)\n            }, {\n                title: \"删除全部\",\n                js: $.toString(() => {\n                    clearItem(\"list\");\n                    refreshPage();\n                    return \"toast://已删除\"\n                })\n            }]\n        }\n    });\n}\n\nsetResult(d);","searchFind":"","search_url":"","group":"工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"ysfx\",\"path\":\"ysfx\",\"rule\":\"js:\\nvar d = [];\\nlet rule = getParam(\\\"r\\\").split(\\\"##\\\")[0];\\nlet url = MY_URL.split(\\\"##\\\")[1];\\nlet ite = $.require(\\\"hiker://page/u\\\")(rule, getHome(url));\\nlet js = $.toString(() => {\\n    try {\\n        if (document.title && document.title.length) {\\n            let r = $$$().lazyRule((t) => {\\n                setPageTitle(t);\\n            }, document.title);\\n            fy_bridge_app.parseLazyRule(r);\\n        }\\n    } catch (e) {\\n        fy_bridge_app.log(e.toString());\\n    }\\n});\\nlet js2 = $.require(\\\"hiker://page/x5ai\\\")(rule, url);\\nd.push({\\n    title: \\\"\\\",\\n    url: url,\\n    col_type: \\\"x5_webview_single\\\",\\n    desc: \\\"100%&&float\\\",\\n    pic_url: \\\"\\\",\\n    extra: {\\n        urlInterceptor: ite,\\n        js: js + \\\";\\\\n\\\" + js2,\\n        canBack: true,\\n        jsLoadingInject: true,\\n        floatVideo: true,\\n        blockRules: [\\\".gif\\\", \\\"/ad/\\\", \\\"google\\\", \\\"/sh/to/\\\", \\\".GIF\\\"]\\n    }\\n});\\nd.push({\\n    col_type: \\\"line\\\",\\n    extra: {\\n        id: url\\n    }\\n});\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"u\",\"path\":\"u\",\"rule\":\"$.exports = function(rule, origin) {\\n    return $.toString((rule, origin) => {\\n        let host = origin.replace(new RegExp(\\\"http://|https://\\\"), \\\"\\\").split(\\\"/\\\")[0];\\n        let hosts = host.split(\\\".\\\");\\n        if (hosts.length > 2) {\\n            host = hosts[hosts.length - 2] + \\\".\\\" + hosts[hosts.length - 1];\\n        }\\n        if (input.startsWith(\\\"magnet\\\")) {\\n            confirm({\\n                title: \\\"温馨提示\\\",\\n                content: \\\"检测到新的磁链地址，点击确定按钮即可播放，点击取消按钮可以复制链接\\\",\\n                confirm: $.toString((mag) => {\\n                    return mag;\\n                }, input),\\n                cancel: $.toString((mag) => {\\n                    return \\\"copy://\\\" + mag\\n                }, input)\\n            })\\n            return true;\\n        } else if (input.includes(\\\"aliyundrive.com\\\")) {\\n            log(input);\\n            let r1 = fetch(\\\"hiker://home@云盘汇影\\\");\\n            if (!r1 || r1.length <= 5) {\\n                let ru = $.toString(() => {\\n                    return \\\"海阔视界规则分享，当前分享的是：小程序￥home_rule_v2￥base64://@云盘汇影@eyJsYXN0X2NoYXB0ZXJfcnVsZSI6IiIsInRpdGxlIjoi5LqR55uY5rGH5b2xIiwiYXV0aG9yIjoiTXJGbHkiLCJ1cmwiOiJoaWtlcjovL2VtcHR5JCQkZnlwYWdlIiwidmVyc2lvbiI6NiwiY29sX3R5cGUiOiJ0ZXh0XzEiLCJjbGFzc19uYW1lIjoiIiwidHlwZSI6ImFsbCIsImNsYXNzX3VybCI6IiIsImFyZWFfbmFtZSI6IiIsImFyZWFfdXJsIjoiIiwic29ydF9uYW1lIjoiIiwieWVhcl9uYW1lIjoiIiwic29ydF91cmwiOiIiLCJ5ZWFyX3VybCI6IiIsImZpbmRfcnVsZSI6ImpzOlxuZXZhbChmZXRjaCgnaGlrZXI6Ly9maWxlcy9ydWxlcy9pY3kvYWxpLmpzJykpO1xuYWxpLmhvbWVQYWdlKCk7Iiwic2VhcmNoX3VybCI6Imhpa2VyOi8vZW1wdHkkJCQqKiQkJGZ5cGFnZSQkJCIsImdyb3VwIjoi4pGg572R55uYIiwic2VhcmNoRmluZCI6ImpzOlxuZXZhbChmZXRjaCgnaGlrZXI6Ly9maWxlcy9ydWxlcy9pY3kvYWxpLmpzJykpO1xuYWxpLnNlYXJjaFBhZ2UodHJ1ZSk7XG4iLCJkZXRhaWxfY29sX3R5cGUiOiJtb3ZpZV8xIiwiZGV0YWlsX2ZpbmRfcnVsZSI6ImpzOlxuZXZhbChmZXRjaCgnaGlrZXI6Ly9maWxlcy9ydWxlcy9pY3kvYWxpLmpzJykpO1xuYWxpLmRldGFpbFBhZ2UoKTsiLCJzZGV0YWlsX2NvbF90eXBlIjoibW92aWVfMSIsInNkZXRhaWxfZmluZF9ydWxlIjoiIiwidWEiOiJtb2JpbGUiLCJwcmVSdWxlIjoidmFyIGFsaWpzID0gZmV0Y2goJ2h0dHBzOi8vZ2l0ZWUuY29tL2ZseTEzOTcvaGlrZXItaWN5L3Jhdy9tYXN0ZXIvYWxpLmpzJyk7XG5pZighYWxpanMgfHwgIWFsaWpzLmluY2x1ZGVzKCdhbGknKSl7XG5cdGFsaWpzID0gZmV0Y2goJ2h0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9naC9mbHkxMzk3L2hpa2VyLWljeS9hbGkuanMnKVxufVxuaWYoIWFsaWpzIHx8ICFhbGlqcy5pbmNsdWRlcygnYWxpJykpe1xuXHRhbGlqcyA9IGZldGNoKCdodHRwOi8vbGZpY3kuY29tOjMwMDAwL21yZmx5L2hpa2VyLWljeS9yYXcvbWFzdGVyL2FsaS5qcycpXG59XG5pZihhbGlqcykge1xuXHR3cml0ZUZpbGUoXCJoaWtlcjovL2ZpbGVzL3J1bGVzL2ljeS9hbGkuanNcIixhbGlqcyk7XG5cdGV2YWwoYWxpanMpO1xuXHRhbGkucHJlUnVsZSgpO1xufVxuIiwicGFnZXMiOiJbe1wiY29sX3R5cGVcIjpcIm1vdmllXzNcIixcIm5hbWVcIjpcIue9keebmOivpuaDhVwiLFwicGF0aFwiOlwiZGV0YWlsXCIsXCJydWxlXCI6XCJqczpcXG5ldmFsKGZldGNoKCdoaWtlcjovL2ZpbGVzL3J1bGVzL2ljeS9hbGkuanMnKSk7XFxuYWxpLmluaXRDb25maWcoKTtcXG5hbGkuYWxpUnVsZSgpO1wifSx7XCJjb2xfdHlwZVwiOlwibW92aWVfMV9sZWZ0X3BpY1wiLFwibmFtZVwiOlwi6LWE5rqQ572R6aG16K+m5oOFXCIsXCJwYXRoXCI6XCJzaXRlLWRldGFpbFwiLFwicnVsZVwiOlwianM6XFxuZXZhbChmZXRjaCgnaGlrZXI6Ly9maWxlcy9ydWxlcy9pY3kvYWxpLmpzJykpO1xcbmFsaS5kZXRhaWxQYWdlKCk7XCJ9LHtcImNvbF90eXBlXCI6XCJtb3ZpZV8zXCIsXCJuYW1lXCI6XCLkuKrkurrnvZHnm5jor6bmg4VcIixcInBhdGhcIjpcImRyaXZlXCIsXCJydWxlXCI6XCJqczpcXG5ldmFsKGZldGNoKCdoaWtlcjovL2ZpbGVzL3J1bGVzL2ljeS9hbGkuanMnKSk7XFxuYWxpLmluaXRDb25maWcoKTtcXG5hbGkubXlBbGlSdWxlKCk7XCJ9XSIsImljb24iOiJodHRwczovL2dpdGVlLmNvbS9mbHkxMzk3L2hpa2VyLWljeS9yYXcvbWFzdGVyL2FsaXl1bi5wbmcifQ==\\\"\\n                });\\n                confirm({\\n                    title: '温馨提示',\\n                    content: '本规则依赖云盘汇影规则，点击下面的确定按钮导入，注意导入后一定要在云盘汇影登录阿里云盘账号，否则不能用',\\n                    confirm: ru,\\n                    cancel: ru\\n                });\\n                return false;\\n            }\\n            log(\\\"input\\\");\\n            return $.toString((url, rule) => {\\n                fy_bridge_app.open(JSON.stringify({\\n                    title: \\\"阿里云盘\\\",\\n                    url: \\\"hiker://page/detail?rule=云盘汇影&url=\\\" + url + '??fypage',\\n                }))\\n            }, input, rule)\\n        } else if (/\\\\.(mp3|flac|m4a)$/.test(input)) {\\n            log(input);\\n            return $.toString((url, rule) => {\\n                fy_bridge_app.playVideo(url);\\n            }, input, rule)\\n        } else if (!input.includes(host) && input.startsWith(\\\"http\\\")) {\\n            log(input);\\n            return $.toString((url, rule) => {\\n                let white = [\\n                    \\\"douyin\\\",\\n                    \\\"douban\\\",\\n                    \\\"ixigua.com\\\",\\n                    \\\"kuaishou\\\",\\n                    \\\"bilibili\\\",\\n                    \\\"weibo\\\",\\n                    \\\"weixin\\\",\\n                    \\\"baidu\\\",\\n                    \\\"zmk.\\\",\\n                    \\\"subhd\\\",\\n                    \\\"thunder\\\",\\n                    \\\"xinjuc\\\",\\n                    \\\"grab4k\\\",\\n                    \\\"/bt\\\",\\n                    \\\"jsr10\\\",\\n                    \\\"assrt\\\",\\n                    \\\"quark\\\"\\n                ];\\n                let inWhite = white.filter(it => url.includes(it)).length > 0;\\n                if (inWhite) {\\n                    //跳网页\\n                    fy_bridge_app.open(JSON.stringify({\\n                        title: \\\"详情\\\",\\n                        url: \\\"hiker://page/ysfx?rule=\\\" + rule + \\\"&r=\\\" + rule + \\\"##\\\" + url,\\n                    }))\\n                } else {\\n                    //AI解析\\n                    fy_bridge_app.open(JSON.stringify({\\n                        title: document.title,\\n                        url: \\\"hiker://page/p?rule=\\\" + rule + \\\"&r=\\\" + rule + \\\"&u=\\\" + fy_bridge_app.base64Encode(url),\\n                    }))\\n                }\\n            }, input, rule);\\n        } else if (!input.startsWith(\\\"http\\\")) {\\n            log(input);\\n            //能唤起APP的白名单\\n            let white = [\\n                \\\"qklink\\\",\\n                \\\"bdnetdisk\\\",\\n                \\\"xunleiapp\\\"\\n            ];\\n            let inWhite = white.filter(it => input.startsWith(it)).length > 0;\\n            if (!inWhite) {\\n                return false;\\n            }\\n            return $.toString((url, rule) => {\\n                fy_bridge_app.openThirdApp && fy_bridge_app.openThirdApp(url);\\n            }, input, rule)\\n        } else {\\n            let white = [\\n                \\\"url=\\\",\\n                \\\"fsou.com\\\",\\n                \\\"bing.\\\",                \\n            ];\\n            let inWhite = white.filter(it => input.includes(it)).length > 0;\\n            if (inWhite) {\\n                return false;\\n            }\\n            let reg = new RegExp(\\\"[\\\\u4e00-\\\\u9fa5]+\\\", \\\"g\\\");\\n            let r = decodeURIComponent(input);\\n            if (reg.test(r) || (input.startsWith(origin) && input.length - origin.length > 2)) {\\n                //有中文，应该是在搜索，跳新页面\\n                return $.toString((url, rule) => {\\n                    fy_bridge_app.open(JSON.stringify({\\n                        title: \\\"详情\\\",\\n                        url: \\\"hiker://page/ysfx?rule=\\\" + rule + \\\"&r=\\\" + rule + \\\"##\\\" + url,\\n                    }));\\n                }, input, rule);\\n            }\\n        }\\n    }, rule, origin);\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"二级解析\",\"path\":\"p\",\"rule\":\"js:\\nvar d = [];\\nlet url = base64Decode(getParam(\\\"u\\\"));\\nlet list = storage0.getItem(\\\"white\\\", []);\\nlet inWhite = list.includes(url);\\nlet d = [];\\nif (!inWhite) {\\n    let html = request(url);\\n    let web = getItem('web', '0') == \\\"1\\\";\\n    let rule = getParam(\\\"r\\\");\\n    let parse = $.require(\\\"hiker://page/parse\\\");\\n    d = parse(rule, web, url, html);\\n}\\nif (d.length == 0) {\\n    //匹配失败\\n    let ite = $.require(\\\"hiker://page/u\\\")(getParam(\\\"r\\\"), getHome(url));\\n    let js = $.toString(() => {\\n        try {\\n            if (document.title && document.title.length) {\\n                let r = $$$().lazyRule((t) => {\\n                    setPageTitle(t);\\n                }, document.title);\\n                fy_bridge_app.parseLazyRule(r);\\n            }\\n        } catch (e) {\\n            fy_bridge_app.log(e.toString());\\n        }\\n    });\\n    let js2 = $.require(\\\"hiker://page/x5ai\\\")(getParam(\\\"r\\\"), url);\\n    d.push({\\n        title: \\\"\\\",\\n        url: url,\\n        col_type: \\\"x5_webview_single\\\",\\n        desc: \\\"float&&100%\\\",\\n        pic_url: \\\"\\\",\\n        extra: {\\n            js: js + \\\";\\\\n\\\" + js2,\\n            urlInterceptor: ite,\\n            canBack: true,\\n            floatVideo: true,\\n            jsLoadingInject: true,\\n            blockRules: [\\\".gif\\\", \\\"/ad/\\\", \\\"google\\\", \\\"/sh/to/\\\", \\\".GIF\\\"]\\n        }\\n    });\\n    d.push({\\n        col_type: \\\"line\\\",\\n        extra: {\\n            id: url\\n        }\\n    });\\n    if (!inWhite) {\\n        toast(\\\"AI匹配失败，已使用X5加载\\\");\\n    }\\n    setResult(d);\\n} else {\\n    setResult(d);\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"二级parse\",\"path\":\"parse\",\"rule\":\"$.exports = function(rule, web, url, html) {\\n    let d = [];\\n\\n    let alist = pdfa(html, \\\"body&&a\\\");\\n    let arr = alist.map(it => {\\n        return {\\n            //html: it,\\n            text: pdfh(it, \\\"a&&Text\\\"),\\n            title: pdfh(it, \\\"a&&title\\\"),\\n            href: pd(it, \\\"a&&href\\\", url)\\n        }\\n    });\\n    //log(arr);\\n    let debug = false;\\n\\n    function clearText(it) {\\n        return it.replace(/第|集|章/g, \\\"\\\");\\n    }\\n\\n    function isMovie(it) {\\n        if (it == null || it.text == null) {\\n            return false;\\n        }\\n        let tit = it.title || \\\"\\\";\\n        it = it.text || \\\"\\\";\\n        if (it == \\\"\\\" || it.length > 8) {\\n            return false;\\n        }\\n        //排除\\n        let reg = /\\\\.|高清直播|写真推荐|影院|影视|蓝光电影|高清电影|第一季|第二季|第三季|第四季|第五季/;\\n        if (tit != \\\"\\\" && !tit.includes(it) || reg.test(it)) {\\n            return false;\\n        }\\n        return it.match(/原画|备用|蓝光|超清|高清|正片|韩版|4K|4k|1080P|720P|TC|HD|BD/)\\n    }\\n\\n    function notChapter(it) {\\n        if (it == null || it.text == null) {\\n            return true;\\n        }\\n        return it.text.match(/[0-9]\\\\.[0-9]分/);\\n    }\\n\\n    function isChapter(it, pre, next) {\\n        if (notChapter(it)) {\\n            //优先排除\\n            return false;\\n        }\\n        //判断是不是电影\\n        if (isMovie(it)) {\\n            return true;\\n        }\\n        return isChapter0(it, pre) || isChapter0(it, next);\\n    }\\n\\n    function getChapterNum(it) {\\n        if (it == null || it.text == null) {\\n            return -1;\\n        }\\n        it = it.text || \\\"\\\";\\n        if (it == \\\"\\\") {\\n            return -1;\\n        }\\n        it = clearText(it);\\n        let reg = /^[0-9]*$/;\\n        if (!reg.test(it)) {\\n            return -1;\\n        }\\n        it = parseInt(it);\\n        if (isNaN(it)) {\\n            return -1;\\n        }\\n        if (it > 1900 && it < 2100) {\\n            return -1;\\n        }\\n        return it;\\n    }\\n\\n    function isChapter0(it, brother) {\\n        /*if (debug) {\\n            log({\\n                it: it,\\n                brother: brother\\n            });\\n        }*/\\n        it = getChapterNum(it);\\n        //if (debug) log(it);\\n        if (it < 0) {\\n            return false;\\n        }\\n        brother = getChapterNum(brother);\\n        //if (debug) log(brother);\\n        if (brother < 0) {\\n            return false;\\n        }\\n        return it - brother < 2 && it - brother > -2;\\n    }\\n\\n    let _web = $.toString(() => {\\n        let urls = _getUrls();\\n        let reg = /\\\\.html|\\\\.css|\\\\.js/;\\n        for (let k in urls) {\\n            if (!reg.test(urls[k]) && urls[k].match(/\\\\.mp4|\\\\.m3u8/)) {\\n                fy_bridge_app.log(urls[k]);\\n                return fy_bridge_app.getHeaderUrl(urls[k].replace(/.*?url=/, \\\"\\\")) + \\\"#ignoreImg=true#\\\";\\n            }\\n        }\\n    });\\n\\n    for (let i = 0; i < arr.length; i++) {\\n        let it = arr[i];\\n        let t = it.text;\\n        if (!it.href || it.href == \\\"\\\") {\\n            continue;\\n        }\\n        let pre = i == 0 ? null : arr[i - 1];\\n        let next = i == (arr.length - 1) ? null : arr[i + 1];\\n        if (isChapter(it, pre, next)) {\\n            if (web) {\\n                var urlx = \\\"webRule://\\\" + it.href + \\\"@\\\" + _web;\\n                var extrax = {\\n                    jsLoadingInject: true,\\n                    id: it.href,\\n                    blockRules: ['.m4a', '.mp3', '.flv', '.avi', '.3gp', '.mpeg', '.wmv', '.mov', '.rmvb', '.gif', '.jpeg', '.png', '.ico', '.svg']\\n                };\\n            } else {\\n                var urlx = \\\"video://\\\" + it.href;\\n                var extrax = {\\n                    id: it.href\\n                };\\n            }\\n            d.push({\\n                title: t,\\n                url: urlx,\\n                col_type: \\\"text_3\\\",\\n                extra: extrax\\n            });\\n        }\\n    }\\n    if (d.length == 0) {\\n        return d;\\n    } else {\\n\\n        d.splice(0, 0, {\\n            title: \\\"🔗\\\" + url,\\n            url: \\\"hiker://page/ysfx?rule=\\\" + rule + \\\"&r=\\\" + rule + \\\"##\\\" + url,\\n            col_type: \\\"text_1\\\",\\n            desc: \\\"\\\",\\n            pic_url: \\\"\\\"\\n        });\\n\\n\\n        //为线路加分割线\\n        let d2 = [];\\n        for (let i = 0; i < d.length; i++) {\\n            d2.push(d[i]);\\n            if (i < d.length - 1) {\\n                let it = d[i];\\n                let t1 = parseInt(clearText(it.title));\\n                let next = d[i + 1];\\n                let t2 = parseInt(clearText(next.title));\\n                if (t2 - t1 > 1 || t1 - t2 > 1) {\\n                    d2.push({\\n                        col_type: \\\"big_blank_block\\\"\\n                    });\\n                    d2.push({\\n                        col_type: \\\"line_blank\\\"\\n                    });\\n                    d2.push({\\n                        col_type: \\\"big_blank_block\\\"\\n                    });\\n                }\\n            }\\n        }\\n        d2.push({\\n            title: \\\"匹配有误？点我不再匹配此页面\\\",\\n            url: $(\\\"#noLoading#\\\").lazyRule((url) => {\\n                confirm({\\n                    title: \\\"温馨提示\\\",\\n                    content: \\\"如果只是单次匹配失败，点击下方取消按钮刷新页面重新匹配，如果确认无法匹配，点击下方确定按钮加入白名单\\\",\\n                    cancel: \\\"refreshPage()\\\",\\n                    confirm: $.toString((url) => {\\n                        let list = storage0.getItem(\\\"white\\\", []);\\n                        list.push(url);\\n                        storage0.setItem(\\\"white\\\", list);\\n                        refreshPage();\\n                        return \\\"toast://已加入白名单\\\"\\n                    }, url)\\n                });\\n                return \\\"hiker://empty\\\"\\n            }, url),\\n            col_type: \\\"avatar\\\",\\n            img: \\\"hiker://images/account\\\"\\n        });\\n        return d2;\\n    }\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"x5AI\",\"path\":\"x5ai\",\"rule\":\"$.exports = function(rule, anchorId) {\\n    return $.toString((rule, anchorId, white) => {\\n        if (window.check0 == null) {\\n            function check0() {\\n                try {\\n                    let html = document.querySelector(\\\"html\\\").innerHTML;\\n                    fba.putVar(\\\"html0\\\", html);\\n                    fba.parseLazyRuleAsync($$$().lazyRule((rule, url, anchorId, white) => {\\n                        try {\\n                            let d = [];\\n                            let html = getVar(\\\"html0\\\", \\\"\\\");\\n                            clearVar(\\\"html0\\\");\\n                            let web = false;\\n                            let white2 = [\\n                                \\\"fsou.com\\\",\\n                                \\\"bing.\\\",\\n                            ];\\n                            let inWhite = white2.filter(it => url.includes(it)).length > 0;                            \\n                            if (!inWhite && !white.includes(url)) {\\n                                let parse = $.require(\\\"hiker://page/parse?rule=\\\" + rule);\\n                                d = parse(rule, web, url, html);\\n                            }\\n                            if (!inWhite && d.length < 1) {\\n                                try {\\n                                    let arr = pdfa(html, \\\"body&&iframe\\\");\\n                                    if (arr.length > 0) {\\n                                        let src = pdfh(arr[0], \\\"iframe&&src\\\");\\n                                        log(\\\"获取到iframe：\\\" + src);\\n                                        if (!white.includes(src)) {\\n                                            if (src && src.startsWith(\\\"http\\\") && !src.match(/\\\\.mp4|\\\\.m3u8|\\\\.mp3|\\\\.flv|\\\\.mkv/)) {\\n                                                html = request(src);\\n                                                d = parse(rule, web, src, html);\\n                                            }\\n                                        }\\n                                    }\\n                                } catch (e) {\\n                                    log(\\\"尝试获取iframe失败\\\");\\n                                }\\n                            }\\n                            if (d.length > 0) {\\n                                d[0].url = $(\\\"#noLoading#\\\").lazyRule((anchorId) => {\\n                                    let desc = getVar(anchorId, \\\"0\\\");\\n                                    if (desc == \\\"0\\\") {\\n                                        refreshX5Desc(\\\"float&&screen-170\\\");\\n                                        putVar(anchorId, \\\"1\\\");\\n                                    } else {\\n                                        refreshX5Desc(\\\"float&&0\\\");\\n                                        putVar(anchorId, \\\"0\\\");\\n                                    }\\n                                    return \\\"hiker://empty\\\";\\n                                }, anchorId + \\\"x5\\\");\\n                                d[0].title = \\\"展开/收起\\\" + d[0].title;\\n                                putVar(anchorId + \\\"x5\\\", \\\"0\\\");\\n                                refreshX5Desc(\\\"float&&0\\\");\\n                                for (let it of d) {\\n                                    let extra = it.extra || {};\\n                                    extra.cls = \\\"x5ai\\\";\\n                                    it.extra = extra;\\n                                }\\n                                deleteItemByCls(\\\"x5ai\\\");\\n                                addItemAfter(anchorId, d);\\n                                toast(\\\"AI匹配成功\\\");\\n                            }\\n                            if (d.length > 0) {\\n                                log(\\\"parseLazyRuleAsync:\\\" + d.length);\\n                            }\\n                            return d.length > 0 ? \\\"1\\\" : \\\"0\\\";\\n                        } catch (e) {\\n                            log(e.toString());\\n                        }\\n                    }, rule, location.href, anchorId, white), $$$.toString(() => {\\n                        if (\\\"0\\\" == input) {\\n                            window.checkc = window.checkc + 1;\\n                            /*if (window.checkc > 120) {\\n                                fba.log(\\\"执行超过30秒，无法解析\\\");\\n                            } else {*/\\n                            setTimeout(window.check0, 250);\\n                            //}\\n                        } else {\\n                            window.checkurl = location.href;\\n\\n                            function checku0() {\\n                                if (window.checkurl != location.href) {\\n                                    //hash发生了变化\\n                                    setTimeout(function() {\\n                                        window.checkc = 0;\\n                                        check0();\\n                                    }, 2000);\\n                                } else {\\n                                    setTimeout(checku0, 250);\\n                                }\\n                            }\\n                            checku0();\\n                        }\\n                    }));\\n                } catch (e) {\\n                    fba.log(e.toString());\\n                    setTimeout(window.check0, 250);\\n                }\\n            }\\n            window.checkc = 0;\\n            window.check0 = check0;\\n            check0();\\n        }\\n    }, rule, anchorId, storage0.getItem(\\\"white\\\", []));\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"首页\",\"path\":\"home\",\"rule\":\"var d = [];\\nlet url = 网站;\\nlet anchorId = url;\\nlet js = $.require(\\\"hiker://page/x5ai\\\")(MY_RULE.title, anchorId);\\nlet ite = $.require(\\\"hiker://page/u\\\")(MY_RULE.title, getHome(url));\\nd.push({\\n    title: \\\"\\\",\\n    url: url,\\n    col_type: \\\"x5_webview_single\\\",\\n    desc: \\\"100%&&float\\\",\\n    pic_url: \\\"\\\",\\n    extra: {\\n        urlInterceptor: ite,\\n        canBack: true,\\n        js: js,\\n        jsLoadingInject: true,\\n        blockRules: [\\\".gif\\\", \\\"/ad/\\\", \\\"google\\\", \\\"/sh/to/\\\", \\\".GIF\\\"]\\n    }\\n});\\nd.push({\\n    col_type: \\\"line\\\",\\n    extra: {\\n        id: anchorId\\n    }\\n});\\n\\nsetResult(d);\"}]","proxy":"","icon":""},{"last_chapter_rule":"","title":"全本下载","author":"拼尽全力","version":5,"type":"read","url":"hiker://empty","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\nd.push({\n    title: \"知轩藏书\",\n    url: $.toString(() => {\n        return \"hiker://page/x5\"\n    }),\n    col_type: \"input\",\n    desc: \"搜索完结的书籍\",\n    pic_url: \"\",\n    extra: {\n        titleVisible: false,\n        onChange: $.toString(() => {\n            putMyVar(\"s\", input);\n        }),\n        defaultValue: getMyVar(\"s\", \"\"),\n        u: \"http://zxcs.me/?keyword=**\"\n    }\n});\nd.push({\n    title: \"知轩藏书\",\n    url: \"hiker://page/x5\",\n    col_type: \"icon_2_round\",\n    desc: \"\",\n    pic_url: \"http://zxcs.me/favicon.ico\",\n    extra: {\n        u: \"http://zxcs.me/?keyword=**\"\n    }\n});\nd.push({\n    title: \"奇书网\",\n    url: \"hiker://page/x5\",\n    col_type: \"icon_2_round\",\n    desc: \"\",\n    pic_url: \"http://m.qishu.me/favicon.ico\",\n    extra: {\n        u: \"http://m.qishu.me/search.asp?keyword=**&classid=#gbk#\"\n    }\n});\nd.push({\n    title: \"TXT下载\",\n    url: \"hiker://page/x5\",\n    col_type: \"icon_2_round\",\n    desc: \"\",\n    pic_url: \"http://wap.bookshuku.com/favicon.ico\",\n    extra: {\n        u: \"http://wap.bookshuku.com/search.html?searchkey=**\"\n    }\n});\nd.push({\n    title: '““””<small><font color=#20b2aa>数据来源于对应的网站，软件和规则不提供任何内容！</font></small>',\n    desc: '““””<small><font color=#ff7f50>本规则仅限学习与交流，请导入后24小时内删除！</font></small>',\n    url: MY_URL,\n    col_type: 'text_center_1'\n});\nsetResult(d);","searchFind":"","search_url":"","group":"工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"x5\",\"path\":\"x5\",\"rule\":\"js:\\nvar d = [];\\nlet u = MY_PARAMS.u;\\nlet s = getMyVar(\\\"s\\\", \\\"\\\");\\nif (s == \\\"\\\") {\\n    u = getHome(u);\\n} else {\\n    if (u.includes(\\\"#gbk#\\\")) {\\n        u = u.replace(\\\"#gbk#\\\", \\\"\\\");\\n        s = encodeStr(s, \\\"gbk\\\");\\n    }\\n    u = u.replace(\\\"**\\\", s);\\n}\\nlet ad = JSON.parse(fetch(\\\"hiker://page/ad\\\")).rule;\\nad = ad.split(\\\"￥\\\")[2];\\nlet blockRules = ad.split(\\\"&&\\\");\\nif (u.includes(\\\"qishu\\\")) {\\n    blockRules.push(\\\".jpg\\\");\\n    blockRules.push(\\\".jpeg\\\");\\n    blockRules.push(\\\".png\\\");\\n}\\nlog(blockRules);\\nd.push({\\n    title: \\\"\\\",\\n    url: u,\\n    col_type: \\\"x5_webview_single\\\",\\n    desc: \\\"100%&&float\\\",\\n    pic_url: \\\"\\\",\\n    extra: {\\n        blockRules: blockRules,\\n    }\\n});\\n\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"广告拦截\",\"path\":\"ad\",\"rule\":\"海阔视界规则分享，当前分享的是：广告网址拦截￥ad_url_rule￥cdn.jquery-cdn.cc&&xs.bntxt.com&&cdn.hczxkab.cn&&cdn.gioduog.cn&&.sjfs.xyz&&.ph8qzppr.xyz&&.xian98.top&&24klm.cn&&dc.ifczkst.cn&&cdn.krqcuib.cn&&adslmgg.xyz&&aliyuncs.com&&.la&&0272dd.com&&085cczz.com&&046zxnm.com&&073tugh.com&&balnig.gdgmhur.cn&&ptiew.xyz&&s4te24u.com&&j7jr9le5.com&&huizhoumi.com&&ptiew.xyz&&balnig.gdgmhur.cn&&073tugh.com&&046zxnm.com&&085cczz.com&&0272dd.com&&bdstatic.com&&096iokj.com&&.gif&&.GIF&&/sh/to/\"}]","proxy":"","icon":""},{"last_chapter_rule":"","title":"抠图","author":"","version":2,"type":"tool","url":"hiker://empty##https://bgsub.cn/webapp/","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\nd.push({\n    col_type: \"x5_webview_single\",\n    url: MY_URL.split(\"##\")[1],\n    desc: \"float&&100%\",\n    extra: {\n        canBack: true,\n    }\n})\nsetResult(d)","searchFind":"","search_url":"","group":"工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[]","proxy":"","icon":"http://res.cnwest.com/t/site/10001/a209bcf3e52b0593bd2c51ae47c9d6ab/assets/snrtv2020/images/logo.png"},{"last_chapter_rule":"","title":"AI女友","author":"小棉袄🌞","version":0,"type":"other","url":"hiker://empty##","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\nd.push({\n    col_type: \"x5_webview_single\",\n    url: \"https://chilloutai.com/\",\n    desc: \"float&&100%\",\n    title: \"\",\n    extra: {\n        canBack: true,\n        blockRules: [\".gif\", \"/ad/\", \"google\", \"/sh/to/\", \".GIF\"]\n    }\n});\n\nsetResult(d);","searchFind":"","search_url":"","group":"工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[]","proxy":"","icon":""},{"last_chapter_rule":"","title":"二组","author":"Rouwanzi","version":0,"type":"video","url":"https://m.huoying666.com/shipin/tag/fyclass/fypage","col_type":"movie_3","class_name":"最新&最热&动漫&美女&风景&情侣","class_url":"最新&最热&动漫&美女&风景&情侣","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"body&&.item;.title&&Text;img&&src;.count&&Text;a&&href.js:input+'@lazyRule=body＆＆＆＆video＆＆＆＆src'","searchFind":"","search_url":"","group":"工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[]","proxy":"","icon":""},{"last_chapter_rule":"","title":"简易文件管理","author":"@LoyDgIk","version":0,"type":"other","url":"hiker://empty","col_type":"text_1","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:$.require(\"hiker://page/Main\");","searchFind":"","search_url":"","group":"工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"Main\",\"path\":\"Main\",\"rule\":\"js:\\nlet d = [];\\n\\nd.push({\\n    title: \\\"设置\\\",\\n    url: \\\"hiker://page/设置#noRefresh#\\\",\\n    pic_url: \\\"https://lanmeiguojiang.com/tubiao/movie/73.svg\\\",\\n    col_type: \\\"avatar\\\",\\n\\n});\\n//let k = \\\"file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/rules/LoyDgIk/选择文件.js\\\";\\nlet k = \\\"http://hiker.nokia.press/hikerule/rulelist.json?id=5099\\\";\\nlet f = require(k);\\n\\nf.fileSelection({\\n    callback: $.toString(() => {\\n        //根据文件扩展名，用不同小程序打开\\n        /*if (TYPE === \\\".json\\\") {\\n            return 'hiker://page/interface#noHistory##noRecordHistory#?rule=JSON编辑器&Json=' + base64Encode(\\\"file://\\\" + PATH)\\n        } else if (TYPE === \\\".html\\\") {\\n            return \\\"web://file://\\\" + PATH;\\n        } else if ([\\\".js\\\", \\\".txt\\\"].includes(TYPE)) {\\n            return \\\"editFile://file://\\\" + PATH\\n        } else if ([\\\".jpg\\\", \\\".svg\\\", \\\".mp3\\\", \\\".mp4\\\", \\\".m3u8\\\"].includes(TYPE)) {\\n            return \\\"file://\\\" + PATH\\n        } else if (\\\".hiker\\\" === TYPE) {\\n            return \\\"rule://\\\" + base64Encode(request(\\\"file://\\\" + PATH));\\n        } else {\\n            return $(\\\"无法打开，是否使用其他应用打开？\\\").confirm(path => \\\"openFile://file://\\\" + path, PATH);\\n        }*/\\n        let waylist=readFile(\\\"waylist.json\\\",0);\\n        if(!waylist){\\n            waylist=$.require(\\\"Default\\\");\\n        }else{\\n            try{\\n                waylist=JSON.parse(waylist);\\n            }catch{\\n                \\n            }\\n        }\\n        let g=waylist.find(x=>x.type.includes(TYPE));\\n        if(!g) return $(\\\"无法打开，是否使用其他应用打开？\\\").confirm(path => \\\"openFile://file://\\\" + path, PATH);\\n        if(g.way.startsWith(\\\"<js>\\\")){\\n            return eval(g.way.replace(\\\"<js>\\\",\\\"\\\"));\\n        }else{\\n            return g.way.replace(/\\\\{\\\\{\\\\PATH}\\\\}/g,PATH).replace(/\\\\{\\\\{\\\\TYPE}\\\\}/g,TYPE);\\n        }\\n    }),\\n    initialPath: getItem(\\\"初始目录\\\", getPath(\\\"hiker://files/\\\").slice(7)),\\n    rootDirPath: \\\"/storage/emulated/0/\\\",\\n    //onClickType: \\\"confirm\\\",\\n    memoryPath: true,\\n    requireUrl: k,\\n    canCreate: true,\\n    store:\\\"cc\\\",\\n    //isErJi:true,\\n    //cHomeTips: \\\"是否使用海阔小程序打开[${name}]?\\\",\\n    //cSearchTips: \\\"是否使用海阔小程序打开[${path}]?\\\",\\n    notShowHide: !getItem(\\\"显示隐藏文件\\\", \\\"1\\\"),\\n    isErJi: !!getItem(\\\"文件夹二级打开\\\", \\\"\\\")\\n}, d);\"},{\"col_type\":\"movie_3\",\"name\":\"设置\",\"path\":\"设置\",\"rule\":\"js:\\nlet layout = [];\\nlayout.push({\\n    title: \\\"<strong>基础设置</strong>\\\".big(),\\n    col_type: \\\"rich_text\\\"\\n});\\nlayout.push({\\n    col_type: \\\"line\\\"\\n});\\nlayout.push({\\n    col_type: \\\"line\\\"\\n});\\nlayout.push({\\n    title: \\\"显示隐藏文件(夹)\\\",\\n    url: $(\\\"#noLoading#\\\").lazyRule(() => {\\n        let s = getItem(\\\"显示隐藏文件\\\", \\\"1\\\");\\n        setItem(\\\"显示隐藏文件\\\", s ? \\\"\\\" : \\\"1\\\");\\n        refreshPage(false);\\n        return \\\"hiker://empty\\\";\\n    }),\\n    pic_url: getItem(\\\"显示隐藏文件\\\", \\\"1\\\") ? \\\"https://lanmeiguojiang.com/tubiao/messy/55.svg\\\" : \\\"https://lanmeiguojiang.com/tubiao/messy/63.svg\\\",\\n    col_type: \\\"text_icon\\\"\\n});\\nlayout.push({\\n    col_type: \\\"line\\\"\\n});\\nlayout.push({\\n    title: \\\"文件夹二级打开\\\",\\n    url: $(\\\"#noLoading#\\\").lazyRule(() => {\\n        let s = getItem(\\\"文件夹二级打开\\\", \\\"\\\");\\n        setItem(\\\"文件夹二级打开\\\", s ? \\\"\\\" : \\\"1\\\");\\n        refreshPage(false);\\n        return \\\"hiker://empty\\\";\\n    }),\\n    pic_url: getItem(\\\"文件夹二级打开\\\", \\\"\\\") ? \\\"https://lanmeiguojiang.com/tubiao/messy/55.svg\\\" : \\\"https://lanmeiguojiang.com/tubiao/messy/63.svg\\\",\\n    col_type: \\\"text_icon\\\"\\n});\\nlayout.push({\\n    col_type: \\\"line\\\"\\n});\\nlayout.push({\\n    title: \\\"““””\\\"+\\\"初始目录\\\".fontcolor(\\\"gray\\\"),\\n    url: $().input(() => {\\n        let path=getPath(input).slice(7);\\n        if(!fileExist(\\\"file://\\\"+path)){\\n            return \\\"toast://不存在该目录\\\";\\n        }\\n        setItem(\\\"初始目录\\\", path);\\n        refreshPage(false);\\n        return \\\"hiker://empty\\\";\\n    }),\\n    desc: getItem(\\\"初始目录\\\", getPath(\\\"hiker://files/\\\").slice(7)),\\n    col_type: \\\"text_1\\\"\\n});\\nlayout.push({\\n    title: \\\"““””\\\"+\\\"自定义打开方式\\\".fontcolor(\\\"gray\\\"),\\n    url: \\\"hiker://page/自定义打开方式\\\",\\n    col_type: \\\"text_1\\\",\\n    extra:{\\n        lineVisible: false\\n    }\\n});\\n/*\\nlayout.push({\\n    title: \\\"<strong>自定义打开方式</strong>\\\".big(),\\n    col_type: \\\"rich_text\\\"\\n});\\nlayout.push({\\n    col_type: \\\"line\\\"\\n});\\nlayout.push({\\n    col_type: \\\"line\\\"\\n});*/\\nsetResult(layout);\"},{\"col_type\":\"movie_3\",\"name\":\"默认\",\"path\":\"Default\",\"rule\":\"$.exports=[{\\n    type:[\\\".json\\\"],\\n    way:\\\"<js>'hiker://page/interface#noHistory##noRecordHistory#?rule=JSON编辑器&Json=' + base64Encode('file://' + PATH)\\\"\\n    \\n},{\\n    type:[\\\".html\\\"],\\n    way: \\\"web://file://{{PATH}}\\\"\\n    \\n},{\\n    type:[\\\".jpg\\\", \\\".svg\\\", \\\".mp3\\\", \\\".mp4\\\", \\\".m3u8\\\"],\\n    way:\\\"file://{{PATH}}\\\"\\n    \\n},{\\n    type:[\\\".hiker\\\"],\\n    way:\\\"<js>'rule://' + base64Encode(request('file://' + PATH))\\\"\\n    \\n},{\\n    type:[\\\".js\\\", \\\".py\\\"],\\n    way:\\\"editFile://file://{{PATH}}\\\"\\n    \\n},/* {\\n    type:[\\\".txt\\\"],\\n    way:\\\"<js>'hiker://page/txtParser.view#noHistory##noRecordHistory#?rule=本地资源管理&path=' + encodeURIComponent(PATH)\\\"\\n    \\n},*/{\\n    type:[\\\".epub\\\"],\\n    way:\\\"<js>'hiker://page/epubParser.view#noHistory##noRecordHistory#?rule=本地资源管理&path=' + encodeURIComponent(PATH)\\\"\\n    \\n}];\\n\"},{\"col_type\":\"movie_3\",\"name\":\"自定义打开方式\",\"path\":\"自定义打开方式\",\"rule\":\"js:\\nlet waylist = readFile(\\\"waylist.json\\\", 0);\\nif (!waylist) {\\n    waylist = $.require(\\\"Default\\\");\\n    saveFile(\\\"waylist.json\\\", JSON.stringify(waylist), 0);\\n} else {\\n    try {\\n        waylist = JSON.parse(waylist);\\n    } catch {\\n\\n    }\\n}\\nlet d = [];\\nd.push({\\n    title: \\\"创建\\\",\\n    url: $(\\\"\\\", \\\"输入扩展名\\\").input(() => {\\n        if (!input) return \\\"toast://创建失败\\\";\\n        return $(\\\"\\\", \\\"输入方式\\\").input((type) => {\\n            if (!input) return \\\"toast://创建失败\\\";\\n            let arr = type.split(\\\"|\\\");\\n            let waylist = readFile(\\\"waylist.json\\\", 0);\\n            waylist = JSON.parse(waylist);\\n            waylist.push({\\n                type: arr,\\n                way: input\\n            });\\n            saveFile(\\\"waylist.json\\\", JSON.stringify(waylist), 0);\\n            refreshPage(false);\\n            return \\\"toast://创建完成\\\";\\n        }, input);\\n    }),\\n    col_type: \\\"text_center_1\\\"\\n});\\nwaylist.forEach((v, i) => {\\n    d.push({\\n        title: \\\"扩展名：\\\" + v.type.join(\\\"|\\\"),\\n        desc: \\\"方式：\\\" + v.way,\\n        url: \\\"hiker://empty\\\",\\n        col_type: \\\"text_1\\\",\\n        extra: {\\n            lineVisible: false\\n        }\\n    });\\n    d.push({\\n        title: \\\"修改扩展名\\\",\\n        url: $(v.type.join(\\\"|\\\")).input((i) => {\\n            if (!input) return \\\"toast://修改失败\\\";\\n            let arr = input.split(\\\"|\\\");\\n            let waylist = readFile(\\\"waylist.json\\\", 0);\\n            waylist = JSON.parse(waylist);\\n            waylist[i].type = arr;\\n            saveFile(\\\"waylist.json\\\", JSON.stringify(waylist), 0);\\n            refreshPage(false);\\n            return \\\"toast://修改完成\\\";\\n        }, i),\\n        col_type: \\\"text_3\\\"\\n    });\\n    d.push({\\n        title: \\\"修改方式\\\",\\n        url: $(v.way).input((i) => {\\n            if (!input) return \\\"toast://修改失败\\\";\\n            let waylist = readFile(\\\"waylist.json\\\", 0);\\n            waylist = JSON.parse(waylist);\\n            waylist[i].way = input;\\n            saveFile(\\\"waylist.json\\\", JSON.stringify(waylist), 0);\\n            refreshPage(false);\\n            return \\\"toast://修改完成\\\"\\n        }, i),\\n        col_type: \\\"text_3\\\"\\n    });\\n    d.push({\\n        title: \\\"删除\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule((i) => {\\n            let waylist = readFile(\\\"waylist.json\\\", 0);\\n            waylist = JSON.parse(waylist);\\n            waylist.splice(i,1);\\n            saveFile(\\\"waylist.json\\\", JSON.stringify(waylist), 0);\\n            refreshPage(false);\\n            return \\\"toast://修改完成\\\"\\n        }, i),\\n        col_type: \\\"text_3\\\"\\n    });\\n    d.push({\\n        col_type: \\\"line\\\"\\n    });\\n});\\nsetResult(d);\"}]","proxy":"","icon":""},{"last_chapter_rule":"","title":"复活器","author":"小棉袄🌞","version":6,"type":"tool","url":"hiker://empty##","col_type":"text_1","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\n var d = [];\n d.push({\n     title: \"复活云盘汇影\",\n     url: $().lazyRule(() => {\n         confirm({\n             title: \"注意事项\",\n             content: \"注意此操作会删除云盘汇影所有数据，相当于恢复出厂设置，只用于规则无法进入的情况，请谨慎操作\",\n             confirm: $.toString(() => {\n                 deleteFile(\"hiker://files/rules/icy/ali.js\");\n                 deleteFile(\"hiker://files/rules/icy/hiker-icy.js\");\n                 deleteFile(\"hiker://files/rules/icy/icy-ali-customer.json\");\n                 deleteFile(\"hiker://files/rules/icy/icy-ali-token.json\");\n                 deleteFile(\"hiker://files/rules/icy/icy-settings-ali.json\");\n                 deleteFile(\"hiker://files/rules/icy/zhitiao.js\");\n                 deleteFile(\"hiker://files/rules/icy/zhitiao1.js\");\n                 confirm({\n                     title: \"只差最后一步\",\n                     content: \"请在软件的更多设置里面清除全部Cookie（点击确定按钮即可跳转），然后返回回去刷新云盘汇影页面，重新登录账号即可\",\n                     confirm: $.toString(() => {\n                         return \"hiker://settingMore\";\n                     }),\n                 });\n             }),\n         });\n         return \"hiker://empty\";\n     }),\n     col_type: \"\",\n     desc: \"\",\n     pic_url: \"\",\n });\n d.push({\n     title: \"跳转云盘汇影\",\n     url: \"hiker://home@云盘汇影\",\n     col_type: \"\",\n     desc: \"\",\n     pic_url: \"\",\n });\n\n function clearRequire(name, that) {\n     that.path = getPath(\"hiker://files/rules/files/\" + name + \"/require.json\");\n     evalPrivateJS(\n         \"IeolxpIYyFlsLbYm5cY5LudsuqUZ/r7w+qPp3lhcAz5gSDXKVBg3M4kFOPx6Nh58FdRrMc1We2hcOcGHmMDE2Bho0Wv/ymmQ5+uCKndhaswTAQPzzSeN1EDLBmJbJmee6KUQyYLJBzo0HKc3iiB9jPGqWDLohgarCebEMwmuxq1qQfRrUM7BZmiFgu0ILWOnSUKWwtA9zuH7AGM0zhoyBPC17NpOiIzBt8+xgVp0IaUtM3LMvAW9fX7co76mMCh8K9KpEpUVj2ID3j1Y5wTXIX9BOHMeUnJimwvOT1WK1dAt7RGQTgM93Y7f91ycC4FVKB4hHP44eacoub/5YI9rTsNRQgK9/EMIduPG4m+Aj/WAfqw8y+HXQ8vTJpsHuvu5TqnqkjiRA7D9/wXszx0owm3agBMs2H21zbDxvyiHhkxbVXbqiKUVjJcVn6/sQcTwPXgTKbogm5F8H1yeMQb9UkBhIAZRask2IzHk9AMOx5y80yRyq556ye+jsYze4UDKPqjeJIdhWIeS5cF3YCMstZ+FOBZvRA/Mem27xooKvotUrZ1J5uj5L+PdYuaH+OMsMJUE0D/DgD36zbC6DCYzvTu7RVLgu7n2KWRENGLLWkki6bieiD2PLzlyRfLXTxIblpRn1ZFnT25kEq0vi1HYfQ==\"\n     );\n     log(list);\n     if (list.length > 1) {\n         for (let i = 0; i < list.length; i++) {\n             deleteFile(\"file://\" + list[i].file);\n         }\n         toast(\"已清除\" + name + \"的\" + list.length + \"个依赖文件，回去刷新试试吧\");\n     } else {\n         toast(\"没有扫描到\" + name + \"的依赖文件\");\n     }\n }\n\n d.push({\n     col_type: \"line_blank\",\n });\n d.push({\n     title: \"复活道长dr/cms依赖\",\n     url: $().lazyRule((clearRequire) => {\n         confirm({\n             title: \"注意事项\",\n             content: \"注意此操作会删除道长dr/cms远程依赖缓存，同时清除dr/cms的设置项，点击确定按钮开始执行\",\n             confirm: $.toString((clearRequire) => {\n                 deleteFile(\"hiker://files/localStorage/StorageDz.local\");\n                 // clearRequire(\"道长dr合集\", this);\n                 let rules = JSON.parse(fetch(\"hiker://home\")); //获取海阔视界所有小程序\n                 let ole_rules = rules.filter(\n                     (it) =>\n                     it.preRule &&\n                     it.preRule.includes(\n                         \"https://hjdhnx.coding.net/p/hiker/d/dr/git/raw/master/js/\"\n                     ) &&\n                     it.title !== \"复活器\"\n                 );\n                 if (ole_rules.length < 1) {\n                     return \"toast://本地没有待复活的旧版dr/cms小程序\";\n                 }\n                 let that = this;\n                 let new_rules = [];\n                 ole_rules.forEach((it) => {\n                     it.preRule = it.preRule.replace(\n                         new RegExp(\n                             \"https://hjdhnx.coding.net/p/hiker/d/dr/git/raw/master/js/\",\n                             \"g\"\n                         ),\n                         \"https://gitcode.net/qq_32394351/dr/-/raw/master/js/\"\n                     );\n                     new_rules.push(it);\n                     clearRequire(it.title, that);\n                 });\n                 let ruleHead =\n                     \"海阔视界首页频道规则【dr/cms依赖修复】￥home_rule_url￥\";\n                 let rules_text = JSON.stringify(new_rules);\n                 let url = \"hiker://files/rules/cache/json/cms_dr.json\";\n                 writeFile(url, rules_text);\n                 return \"rule://\" + base64Encode(ruleHead + url);\n                 //https://hjdhnx.coding.net/p/hiker/d/dr/git/raw/master/js/\n             }, clearRequire),\n         });\n         return \"hiker://empty\";\n     }, clearRequire),\n     col_type: \"\",\n     desc: \"\",\n     pic_url: \"\",\n });\n d.push({\n     title: \"复活道长dr合集\",\n     url: $().lazyRule((clearRequire) => {\n         confirm({\n             title: \"注意事项\",\n             content: \"注意此操作会删除道长dr合集的远程依赖缓存，同时清除dr合集的设置项，点击确定按钮开始执行\",\n             confirm: $.toString((clearRequire) => {\n                 clearRequire(\"道长dr合集\", this);\n                 deleteFile(\"hiker://files/localStorage/StorageDz.local\");\n             }, clearRequire),\n         });\n         return \"hiker://empty\";\n     }, clearRequire),\n     col_type: \"\",\n     desc: \"\",\n     pic_url: \"\",\n });\n d.push({\n     title: \"跳转道长dr合集\",\n     url: \"hiker://home@道长dr合集\",\n     col_type: \"\",\n     desc: \"\",\n     pic_url: \"\",\n });\n\n d.push({\n     col_type: \"line_blank\",\n });\n d.push({\n     title: \"复活道德经\",\n     url: $().lazyRule((clearRequire) => {\n         confirm({\n             title: \"注意事项\",\n             content: \"注意此操作会删除道德经缓存的当前正在使用的数据\",\n             confirm: $.toString((clearRequire) => {\n                 clearRequire(\"道德经\", this);\n                 deleteFile(\"hiker://files/rules/dzHouse/ruleCache/cmsData.json\");\n             }, clearRequire),\n         });\n         return \"hiker://empty\";\n     }, clearRequire),\n     col_type: \"\",\n     desc: \"\",\n     pic_url: \"\",\n });\n d.push({\n     title: \"跳转道德经\",\n     url: \"hiker://home@道德经\",\n     col_type: \"\",\n     desc: \"\",\n     pic_url: \"\",\n });\n\n d.push({\n     col_type: \"line_blank\",\n });\n d.push({\n     title: \"复活快看APP\",\n     url: $().lazyRule((clearRequire) => {\n         confirm({\n             title: \"注意事项\",\n             content: \"注意此操作会删除已下载的dex文件，重进规则会重新下载\",\n             confirm: $.toString(() => {\n                 deleteFile(\"hiker://files/cache/bidi.dex\");\n                 deleteFile(\"hiker://files/cache/libp2p.so\");\n                 toast(\"已处理，快试试吧\");\n                 return \"hiker://home@快看影视APP\";\n             }),\n         });\n         return \"hiker://empty\";\n     }, clearRequire),\n     col_type: \"\",\n     desc: \"\",\n     pic_url: \"\",\n });\n d.push({\n     title: \"跳转快看APP\",\n     url: \"hiker://home@快看影视APP\",\n     col_type: \"\",\n     desc: \"\",\n     pic_url: \"\",\n });\n\n d.push({\n     col_type: \"line_blank\",\n });\n d.push({\n     title: \"复活聚直播\",\n     url: $(\"#noLoading#\").lazyRule((clearRequire) => {\n         confirm({\n             title: \"注意事项\",\n             content: \"注意此操作会删除聚直播数据源配置和远程订阅缓存，仅在打不开规则的情况下使用\",\n             confirm: $.toString((clearRequire) => {\n                 clearRequire(\"聚直播\", this);\n                 deleteFile(\"hiker://files/rules/live/config.json\");\n             }, clearRequire),\n         });\n         return \"hiker://empty\";\n     }, clearRequire),\n     col_type: \"\",\n     desc: \"\",\n     pic_url: \"\",\n });\n d.push({\n     title: \"跳转聚直播\",\n     url: \"hiker://home@聚直播\",\n     col_type: \"\",\n     desc: \"\",\n     pic_url: \"\",\n });\n\nd.push({\n     col_type: \"line_blank\",\n });\n d.push({\n     title: \"复活微软语音\",\n     url: $().lazyRule((clearRequire) => {\n         confirm({\n             title: \"注意事项\",\n             content: \"注意此操作会删除已下载数据，重进规则会重新下载\",\n             confirm: $.toString(() => {\n                 deleteFile(\"hiker://files/cache/微软声音选择列表.json\");\n                 toast(\"已处理，快试试吧\");\n                 return \"hiker://home@微软语音\";\n             }),\n         });\n         return \"hiker://empty\";\n     }, clearRequire),\n     col_type: \"\",\n     desc: \"\",\n     pic_url: \"\",\n });\n setResult(d);","searchFind":"","search_url":"","group":"工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[]","proxy":"","icon":""},{"last_chapter_rule":"","title":"CMS模板","author":"道长","version":10,"type":"tool","url":"hiker://empty","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"模板","year_url":"","find_rule":"js:\n//eval(JSON.parse(fetch('hiker://page/homeIndex')).rule);\nrequire('https://gitcode.net/qq_32394351/dr/-/raw/master/js/cms.js');","searchFind":"","search_url":"","group":"工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"规则\",\"path\":\"ruleGen\",\"rule\":\"$.exports.rule={\\\"last_chapter_rule\\\":\\\"\\\",\\\"title\\\":\\\"奇飞\\\",\\\"author\\\":\\\"道长\\\",\\\"url\\\":\\\"hiker://empty##http://mkk.gotka.top/api.php/v1.vod#pg=fypage\\\",\\\"version\\\":1,\\\"col_type\\\":\\\"movie_3_marquee\\\",\\\"class_name\\\":\\\"\\\",\\\"type\\\":\\\"video\\\",\\\"class_url\\\":\\\"\\\",\\\"area_name\\\":\\\"\\\",\\\"area_url\\\":\\\"\\\",\\\"sort_name\\\":\\\"\\\",\\\"year_name\\\":\\\"\\\",\\\"sort_url\\\":\\\"影视\\\",\\\"year_url\\\":\\\"\\\",\\\"find_rule\\\":\\\"js:\\\\nrequire(config.模板);\\\\n一级();\\\",\\\"search_url\\\":\\\"hiker://empty##?wd=**&pg=fypage&ac=videolist\\\",\\\"group\\\":\\\"#️⃣道长资源\\\",\\\"searchFind\\\":\\\"js:\\\\nrequire(config.模板);\\\\n搜索一级();\\\",\\\"detail_col_type\\\":\\\"text_5\\\",\\\"detail_find_rule\\\":\\\"js:\\\\nrequire(config.模板);\\\\n二级();\\\",\\\"sdetail_col_type\\\":\\\"text_5\\\",\\\"sdetail_find_rule\\\":\\\"*\\\",\\\"ua\\\":\\\"mobile\\\",\\\"preRule\\\":\\\"var ua='$ua';\\\\nrequire('https://gitcode.net/qq_32394351/dr/-/raw/master/js/资源网预处理.js');\\\",\\\"pages\\\":\\\"[]\\\",\\\"icon\\\":\\\"https://lanmeiguojiang.com/tubiao/ke/4.png\\\"}\"}]","proxy":"https://hjdhnx.coding.net/p/hiker/d/dr/git/raw/master/js/=>https://gitcode.net/qq_32394351/dr/-/raw/master/js/","icon":"https://lanmeiguojiang.com/tubiao/more/328.png"},{"last_chapter_rule":"","title":"本地资源管理","author":"@LoyDgIk","version":90,"type":"tool","url":"hiker://empty","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\n\nif (!getItem(\":startUse\", false)) {\n    toast(\":-)初次见面，请多关照\");\n    confirm({\n        title: \"使用须知\",\n        content: \"1.普通用户：本程序只提供本地阅读服务，不提供网络内容。\\n\\n2.开发者：提供多线程下载支持。\\n\\n3.如何获取内容?\\n通过「聚漫」「道长合集」等第三方小程序下载。\",\n        confirm: \"setItem(':startUse','1');refreshPage();'toast://感谢您的理解'\",\n        cancel: \"'toast://很遗憾，不能为您服务。\\\\n长按标题可删除。'\"\n    });\n    setResult([]);\n} else if (MY_RULE.title !== \"本地资源管理\") {\n    confirm({\n        title: \"警告⚠\",\n        content: \"不能改名哦！\",\n        confirm: $.toString(() => {\n            MY_RULE.title = \"本地资源管理\";\n            toast(\"已帮你改回原名，请重新导入\");\n            return \"rule://\" + base64Encode(\"海阔视界￥home_rule￥\" + JSON.stringify(MY_RULE));\n        }),\n        cancel: \"'toast://很遗憾，不能为您服务。\\\\n长按标题可删除。'\"\n    });\n    setResult([]);\n} else {\n    $.require(\"hiker://page/Main.view\");\n}","searchFind":"","search_url":"","group":"工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"#f.File工具\",\"path\":\"File.js\",\"rule\":\"const File = java.io.File;\\nconst {\\n    Files,\\n    Paths,\\n    StandardCopyOption,\\n    StandardOpenOption\\n} = java.nio.file;\\nconst javaString = java.lang.String;\\nlet javaScope = new JavaImporter(java.io, java.lang, java.lang.reflect, java.util.Vector);\\n\\nfunction deleteFiles(fileName) {\\n    let file = new File(fileName);\\n    if (!file.exists()) {\\n        //log(\\\"删除文件失败：\\\" + fileName + \\\"文件不存在\\\");\\n        return false;\\n    } else {\\n        if (file.isFile()) {\\n            return deleteFile(fileName);\\n        } else {\\n            return deleteDirectory(fileName);\\n        }\\n\\n    }\\n\\n}\\n/**\\n * 删除单个文件\\n * \\n * @param fileName\\n *            被删除文件的文件名\\n * @return 单个文件删除成功返回true,否则返回false\\n */\\nfunction deleteFile(fileName) {\\n    let file = new File(fileName);\\n    if (file.isFile() && file.exists()) {\\n        file.delete();\\n        //log(\\\"删除单个文件\\\" + fileName + \\\"成功！\\\");\\n        return true;\\n    } else {\\n        //log(\\\"删除单个文件\\\" + fileName + \\\"失败！\\\");\\n        return false;\\n    }\\n\\n}\\n/**\\n * 删除目录（文件夹）以及目录下的文件\\n * \\n * @param dir\\n *            被删除目录的文件路径\\n * @return 目录删除成功返回true,否则返回false\\n */\\nfunction deleteDirectory(dir) {\\n    // 如果dir不以文件分隔符结尾，自动添加文件分隔符\\n    if (!dir.endsWith(File.separator)) {\\n        dir = dir + File.separator;\\n    }\\n    let dirFile = new File(dir);\\n    // 如果dir对应的文件不存在，或者不是一个目录，则退出\\n    if (!dirFile.exists() || !dirFile.isDirectory()) {\\n        //log(\\\"删除目录失败\\\" + dir + \\\"目录不存在！\\\");\\n        return false;\\n    }\\n    let flag = true;\\n    // 删除文件夹下的所有文件(包括子目录)\\n    let files = dirFile.listFiles();\\n    for (let i = 0; i < files.length; i++) {\\n        // 删除子文件\\n        if (files[i].isFile()) {\\n            flag = deleteFile(files[i].getAbsolutePath());\\n            if (!flag) {\\n                break;\\n            }\\n        } else { // 删除子目录\\n            flag = deleteDirectory(files[i].getAbsolutePath());\\n            if (!flag) {\\n                break;\\n            }\\n        }\\n    }\\n    if (!flag) {\\n        //log(\\\"删除目录失败\\\");\\n        return false;\\n    }\\n    // 删除当前目录\\n    if (dirFile.delete()) {\\n        //log(\\\"删除目录\\\" + dir + \\\"成功！\\\");\\n        return true;\\n    } else {\\n        //log(\\\"删除目录\\\" + dir + \\\"失败！\\\");\\n        return false;\\n    }\\n}\\n\\n//copy单个文件\\nfunction copyFile(source, target, isCover) {\\n    let sourcePath = Paths.get(source);\\n    let targetPath = Paths.get(target);\\n    let isExist = Files.exists(targetPath);\\n    if (Files.isDirectory(sourcePath) || (isExist && !isCover) || (isExist && Files.isDirectory(targetPath))) {\\n        return false;\\n    }\\n    try {\\n        if (!isExist) {\\n            Files.createDirectories(targetPath.getParent());\\n        }\\n        if (isCover === true) {\\n            Files.copy(sourcePath, targetPath, StandardCopyOption.REPLACE_EXISTING, StandardCopyOption.COPY_ATTRIBUTES);\\n        } else {\\n            Files.copy(sourcePath, targetPath, StandardCopyOption.COPY_ATTRIBUTES);\\n        }\\n    } catch (e) {\\n        return false;\\n    }\\n}\\n\\nfunction getFileTime(path) {\\n    let file = new File(path);\\n    let lastModified = file.lastModified();\\n    let date = new Date(lastModified);\\n    return date.getTime();\\n}\\n\\nfunction getName(path) {\\n    return new File(path).getName() + \\\"\\\";\\n}\\n\\nfunction getFilePath(path, type, expand) {\\n    type = type || \\\"file\\\";\\n    if (![\\\"file\\\", \\\"dir\\\"].includes(type)) throw new Error(\\\"类型错误\\\");\\n    let fileType = type === \\\"file\\\" ? \\\"isFile\\\" : \\\"isDirectory\\\";\\n    let file = new File(path);\\n    let array = file.listFiles() || [];\\n    let pathList = [];\\n    for (let i = 0; i < array.length; i++) {\\n        if (array[i][fileType]()) {\\n            pathList.push({\\n                name: array[i].getName() + \\\"\\\",\\n                path: array[i].getPath() + \\\"\\\",\\n                lastModified: Number(array[i].lastModified()),\\n            });\\n        }\\n    }\\n    if (expand) {\\n        pathList = pathList.filter(it => it.name.endsWith(expand));\\n    }\\n    return pathList;\\n}\\n\\nfunction getFiles(path, type, expand) {\\n    let types = {\\n        \\\"file\\\": \\\"isFile\\\",\\n        \\\"dir\\\": \\\"isDirectory\\\"\\n    };\\n    let fileType = types[type];\\n    let file = new File(path);\\n    let array = file.listFiles() || [];\\n    let fileList = [];\\n    for (let i = 0; i < array.length; i++) {\\n        let file = array[i];\\n        if ((!fileType || file[fileType]()) && (!expand || file.getName().endsWith(expand))) {\\n            fileList.push(file);\\n        }\\n    }\\n    return fileList;\\n}\\n\\nfunction renameFile(fromPath, name) {\\n    let fromFile = new File(fromPath);\\n    let toFile = new File(fromFile.getParent() + \\\"/\\\" + name);\\n    try {\\n        if (!fromFile.exists()) {\\n            return false;\\n        }\\n        if (toFile.exists()) {\\n            if (!toFile.delete()) {\\n                return false;\\n            }\\n        }\\n        Files.move(fromFile.toPath(), toFile.toPath(), StandardCopyOption.REPLACE_EXISTING);\\n        return true;\\n    } catch (e) {\\n        log(e.toString());\\n        return false;\\n    }\\n}\\n\\nfunction moveFiles(fromPath, toPath) {\\n    let fromFile = new File(fromPath);\\n    let toFile = new File(toPath);\\n    try {\\n        if (!fromFile.exists()) {\\n            return false;\\n        }\\n        if (toFile.exists()) {\\n            if (!deleteFiles(toPath)) {\\n                return false;\\n            }\\n        }\\n        Files.move(fromFile.toPath(), toFile.toPath(), StandardCopyOption.REPLACE_EXISTING);\\n        return true;\\n    } catch (e) {\\n        log(e.toString());\\n        return false;\\n    }\\n}\\n\\nfunction fileWrite(path, content) {\\n    writeFile(\\\"file://\\\" + path, content)\\n}\\n\\nfunction fileWriteAppend(path, content) {\\n    let file = new File(path);\\n    let paths = file.toPath();\\n    if (file.exists()) {\\n        Files.write(paths, new javaString(content).getBytes(), StandardOpenOption.APPEND);\\n    } else {\\n        writeFile(\\\"file://\\\" + path, content);\\n    }\\n}\\n\\nfunction getTotalSizeOfFilesInDir(file) {\\n    if (file.isFile()) {\\n        return file.length();\\n    }\\n    let children = file.listFiles();\\n    let total = 0;\\n    if (children != null) {\\n        for (let child of children) {\\n            total += getTotalSizeOfFilesInDir(child);\\n        }\\n    }\\n    return total;\\n}\\n\\nfunction getFileSize(filePath) {\\n    //Byte\\n    let size = getTotalSizeOfFilesInDir(new File(filePath));\\n    if (size < 0) {\\n        return null;\\n    }\\n    let unitForm = [\\\"Byte\\\", \\\"KB\\\", \\\"MB\\\", \\\"GB\\\", \\\"TB\\\"];\\n    for (let i = 0, len = unitForm.length; i < len; i++) {\\n        if (size > 1024) {\\n            size /= 1024;\\n            continue;\\n        } else {\\n            return size.toFixed(2).replace(/(\\\\.00)$/, \\\"\\\") + unitForm[i];\\n        }\\n    }\\n    return \\\"ERROR:数值过大\\\";\\n}\\n//完整合并\\n/*\\nfunction fileCombine(filesInput, fileOut, extension, intercept) {\\n    with(javaScope) {\\n        const TMP_BUFFER_SIZE = 0x30000;\\n        const BUFFER_SIZE = 0x300000;\\n        //合并临时文件\\n        let inputFile = new File(filesInput);\\n        let tmpFile = new File(fileOut + \\\".tmp\\\");\\n        let tos = new BufferedOutputStream(new FileOutputStream(tmpFile));\\n        let inputFiles = inputFile.listFiles();\\n        let tbys = Array.newInstance(Byte.TYPE, TMP_BUFFER_SIZE);\\n        for (let file of inputFiles) {\\n            if (file.getName().endsWith(extension)) {\\n                let is = new FileInputStream(file);\\n                let len = 0;\\n                while ((len = is.read(tbys)) != -1) {\\n                    tos.write(tbys, 0, len);\\n                }\\n                is.close();\\n            }\\n        }\\n        tos.close();\\n        //规则替换规则;\\n        let outFile = new File(fileOut);\\n        if (typeof intercept === \\\"function\\\") {\\n            let tis = new FileInputStream(tmpFile);\\n            let os = new BufferedOutputStream(new FileOutputStream(outFile));\\n            let len = 0;\\n            let bys = Array.newInstance(Byte.TYPE, BUFFER_SIZE);\\n            while ((len = tis.read(bys)) != -1) {\\n                let nbys = intercept(new String(bys,0,len));\\n                os.write(nbys, 0, nbys.length);\\n            }\\n            tmpFile.delete();\\n            tis.close();\\n            os.close();\\n        } else {\\n            if (outFile.exists()) {\\n                outFile.delete();\\n            }\\n            tmpFile.renameTo(outFile);\\n        }\\n    }\\n}*/\\n//残\\nfunction fileRule(filesInput, fileOut, intercept) {\\n    with(javaScope) {\\n        const BUFFER_SIZE = 0x300000;\\n        let tmpFile = new File(filesInput);\\n        if (!(tmpFile.exists() && tmpFile.isFile())) {\\n            return false;\\n        }\\n        let outFile = new File(fileOut);\\n\\n        let tis = new FileInputStream(tmpFile);\\n        let os = new BufferedOutputStream(new FileOutputStream(outFile));\\n        let len = 0;\\n        let bys = Array.newInstance(Byte.TYPE, BUFFER_SIZE);\\n        while ((len = tis.read(bys)) != -1) {\\n            let nbys = intercept(new String(bys, 0, len));\\n            os.write(nbys, 0, nbys.length);\\n        }\\n        tmpFile.delete();\\n        tis.close();\\n        os.close();\\n        return true;\\n    }\\n}\\n\\nfunction readFile(path) {\\n    try {\\n        let paths = Paths.get(path);\\n        if (!Files.exists(paths)) return \\\"\\\";\\n        return String(new javaString(Files.readAllBytes(paths)));\\n    } catch {\\n        return \\\"\\\";\\n    }\\n}\\n$.exports = {\\n    getFileTime: (path) => getFileTime(path),\\n    getFilePath: (path, type, expand) => getFilePath(path, type, expand),\\n    deleteFiles: (path) => deleteFiles(path),\\n    renameFile: (path, name) => renameFile(path, name),\\n    moveFiles: (fromPath, toPath) => moveFiles(fromPath, toPath),\\n    fileWrite: (path, content) => fileWrite(path, content),\\n    fileWriteAppend: (path, content) => fileWriteAppend(path, content),\\n    getName: (path) => getName(path),\\n    getFileSize: (filePath) => getFileSize(filePath),\\n    fileRule: (filesInput, fileOut, intercept) => fileRule(filesInput, fileOut, intercept),\\n    copyFile: (source, target, isCover) => copyFile(source, target, isCover),\\n    readFile: (path) => readFile(path),\\n    getFiles: (path, type, expand) => getFiles(path, type, expand),\\n    getTotalSizeOfFilesInDir:(file)=>getTotalSizeOfFilesInDir(file)\\n}\"},{\"col_type\":\"text_2\",\"name\":\"#v.下载列表-普通下载\",\"path\":\"download.view\",\"rule\":\"js:\\nconst viewConfig = Object.assign({\\n    chapterList: [],\\n    info: {},\\n    defaultView: \\\"0\\\"\\n}, MY_PARAMS);\\nviewConfig.info = Object.assign({\\n    ruleName: \\\"\\\",\\n    bookName: \\\"\\\",\\n    bookTopPic: \\\"\\\",\\n    parseCode: \\\"\\\",\\n    decode: undefined,\\n    type: \\\"comic\\\",\\n    comicScheme: \\\"1\\\"\\n}, viewConfig.info);\\nlet {\\n    chapterList,\\n    info,\\n    defaultView\\n} = viewConfig;\\nsetPageTitle(\\\"选择器|\\\" + info.bookName)\\n\\nconst File = $.require(\\\"hiker://page/File.js\\\");\\nconst Tool = $.require(\\\"hiker://page/Tool.js\\\");\\nconst Config = $.require(\\\"hiker://page/Config.json\\\");\\n\\nviewConfig.info.bookName=Tool.textShield(viewConfig.info.bookName);\\nviewConfig.info.ruleName=Tool.textShield(viewConfig.info.ruleName);\\n\\nconst def_DoVi_Style = Config.def_DoVi_Style;\\nconst MY_ID = info.ruleName + \\\"//\\\" + info.bookName;\\n\\nlet isStart = getMyVar(MY_ID + \\\":isStart\\\");\\nlet viewMode = getMyVar(MY_ID + \\\":viewMode\\\", defaultView);\\nlet isReverse = getMyVar(MY_ID + \\\":isReverse\\\", \\\"0\\\");\\nlet tagFilter = getMyVar(MY_ID + \\\":tagFilter\\\", Config.def_DoVi_Type);\\n\\naddListener(\\\"onClose\\\", $.toString((MY_ID) => {\\n    clearMyVar(MY_ID + \\\":loadingTeam\\\");\\n    clearMyVar(MY_ID + \\\":viewMode\\\");\\n    clearMyVar(MY_ID + \\\":completed\\\");\\n    clearMyVar(MY_ID + \\\":batchTeam\\\");\\n    clearMyVar(MY_ID + \\\":tagFilter\\\");\\n    clearMyVar(MY_ID + \\\":pageNum\\\");\\n}, MY_ID));\\n\\nlet layout = [];\\n\\nif (isStart === \\\"1\\\") {\\n    putMyVar(MY_ID + \\\":viewMode\\\", defaultView);\\n    viewMode = \\\"1\\\";\\n}\\n\\nlet backupChapterList = chapterList;\\nif (typeof chapterList === \\\"string\\\") {\\n    chapterList = JSON.parse(request(\\\"file://\\\" + chapterList) || \\\"[]\\\");\\n}\\nlet chapterAll = chapterList;\\nchapterList = chapterList.map((item, CID) => {\\n    item.CID = CID;\\n    item.title=Tool.textShield(item.title);\\n    return item;\\n});\\nlet pageNum = Number(getMyVar(MY_ID + \\\":pageNum\\\", \\\"1\\\"));\\nlet chapterChunk = [chapterList].concat(Tool.chunk(chapterList, Config.viewPageSize));\\nchapterList = chapterChunk[pageNum] || [];\\n\\nfunction setType() {\\n    let set = (tag, put) => {\\n        putMyVar(put, tag);\\n        refreshPage(false);\\n        return \\\"hiker://empty\\\"\\n    };\\n    layout.push({\\n        title: 0 == pageNum ? \\\"““””\\\" + (\\\"全部(\\\" + chapterAll.length + \\\")\\\").fontcolor(\\\"#23AD6F\\\") : \\\"全部(\\\" + chapterAll.length + \\\")\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule(set, 0, MY_ID + \\\":pageNum\\\"),\\n        col_type: \\\"scroll_button\\\"\\n    });\\n    for (let i = 1; i < chapterChunk.length; i++) {\\n        let tagText = (i - 1) * Config.viewPageSize + \\\"-\\\" + ((i - 1) * Config.viewPageSize + chapterChunk[i].length);\\n        layout.push({\\n            title: i == pageNum ? \\\"““””\\\" + tagText.fontcolor(\\\"#23AD6F\\\") : tagText,\\n            url: $(\\\"#noLoading#\\\").lazyRule(set, i, MY_ID + \\\":pageNum\\\"),\\n            col_type: \\\"scroll_button\\\"\\n        });\\n    }\\n    layout.push({\\n        col_type: \\\"blank_block\\\"\\n    });\\n    layout.push({\\n        title: tagFilter === \\\"0\\\" ? \\\"““””\\\" + \\\"全部\\\".fontcolor(\\\"#23AD6F\\\") : \\\"全部\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule(set, \\\"0\\\", MY_ID + \\\":tagFilter\\\"),\\n        col_type: \\\"scroll_button\\\"\\n    });\\n    layout.push({\\n        title: tagFilter === \\\"1\\\" ? \\\"““””\\\" + \\\"未下载\\\".fontcolor(\\\"#23AD6F\\\") : \\\"未下载\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule(set, \\\"1\\\", MY_ID + \\\":tagFilter\\\"),\\n        col_type: \\\"scroll_button\\\"\\n    });\\n    layout.push({\\n        title: tagFilter === \\\"2\\\" ? \\\"““””\\\" + \\\"已下载\\\".fontcolor(\\\"#23AD6F\\\") : \\\"已下载\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule(set, \\\"2\\\", MY_ID + \\\":tagFilter\\\"),\\n        col_type: \\\"scroll_button\\\"\\n    });\\n}\\nlet chapterTeam = [];\\nlet record = [];\\nif (info.type === \\\"comic\\\") {\\n    let lazy = $(\\\"#noLoading#\\\").lazyRule(() => {\\n        const File = $.require(\\\"hiker://page/File.js\\\");\\n        let filelist = File.getFilePath(input);\\n        let piclist = filelist.map((item, i) => \\\"file://\\\" + input + \\\"/\\\" + (i + 1) + \\\".jpg\\\");\\n        return \\\"pics://\\\" + piclist.join(\\\"&&\\\");\\n    });\\n\\n    function comFun(i, item) {\\n        let rootPath = Config.comicPath + \\\"/\\\" + info.ruleName + \\\"/\\\" + info.bookName + \\\"/\\\" + i + \\\"$A$\\\" + item.title;\\n        return {\\n            title: \\\"““\\\" + item.title + \\\"””\\\",\\n            url: rootPath + lazy,\\n            extra: {\\n                id: MY_ID + \\\"#\\\" + i,\\n            },\\n            col_type: def_DoVi_Style\\n        }\\n    }\\n    File.getFilePath(Config[info.type + \\\"Path\\\"] + \\\"/\\\" + info.ruleName + \\\"/\\\" + info.bookName, \\\"dir\\\").forEach((file) => {\\n        let att = Tool.split(file.name, \\\"$\\\", 2);\\n        if (att.length === 3 && att[1] === (\\\"A\\\")) {\\n            record.push(att[2]);\\n        }\\n    });\\n} else {\\n    function comFun(i, item) {\\n        return {\\n            title: \\\"““\\\" + item.title + \\\"””\\\",\\n            url: \\\"hiker://page/NovelMainBody#autoPage##readTheme#\\\",\\n            extra: {\\n                id: MY_ID + \\\"#\\\" + i,\\n                path: Config.novelPath + \\\"/\\\" + info.ruleName + \\\"/\\\" + info.bookName + \\\"/\\\" + i + \\\"$A$\\\" + item.title + \\\".txt\\\",\\n                title: item.title\\n            },\\n            col_type: def_DoVi_Style\\n        }\\n    }\\n    File.getFilePath(Config[info.type + \\\"Path\\\"] + \\\"/\\\" + info.ruleName + \\\"/\\\" + info.bookName, \\\"file\\\", \\\".txt\\\").forEach((file) => {\\n        let att = Tool.split(file.name, \\\"$\\\", 2);\\n        if (att.length === 3 && att[1] === (\\\"A\\\")) {\\n            record.push(att[2].slice(0, att[2].lastIndexOf(\\\".\\\")));\\n        }\\n    });\\n}\\n\\nfunction clickDownload(item, info, MY_ID, i) {\\n    let loadingTeam = JSON.parse(getMyVar(MY_ID + \\\":loadingTeam\\\", \\\"[]\\\") || \\\"[]\\\");\\n    let ElementIndex = loadingTeam.indexOf(i);\\n    if (ElementIndex > -1) return \\\"toast://正在下载\\\";\\n\\n    loadingTeam.push(i);\\n    putMyVar(MY_ID + \\\":loadingTeam\\\", JSON.stringify(loadingTeam));\\n    updateItem({\\n        title: \\\"‘‘\\\" + item.title + \\\"’’\\\",\\n        extra: {\\n            id: MY_ID + \\\"#\\\" + i\\n        }\\n    });\\n    let result = \\\"toast://下载失败\\\";\\n    try {\\n        toast(\\\"开始下载:\\\" + item.title);\\n        let download = $.require(\\\"hiker://page/Download.exe.js\\\");\\n        result = download(item, info, i, MY_ID);\\n        updateItem({\\n            title: \\\"““\\\" + item.title + \\\"””\\\",\\n            url: \\\"toast://已下载\\\",\\n            extra: {\\n                id: MY_ID + \\\"#\\\" + i\\n            }\\n        });\\n    } catch (e) {\\n        updateItem({\\n            title: item.title,\\n            extra: {\\n                id: MY_ID + \\\"#\\\" + i\\n            }\\n        });\\n        log(e.toString());\\n    } finally {\\n        loadingTeam.splice(ElementIndex, 1);\\n        putMyVar(MY_ID + \\\":loadingTeam\\\", JSON.stringify(loadingTeam));\\n    }\\n    return result;\\n}\\n\\nfunction singleView() {\\n    layout.push({\\n        title: \\\"反转列表\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule((isReverse, MY_ID) => {\\n            putMyVar(MY_ID + \\\":isReverse\\\", isReverse === \\\"0\\\" ? \\\"1\\\" : \\\"0\\\");\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\";\\n        }, isReverse, MY_ID),\\n        pic_url: \\\"https://img.icons8.com/?id=33nvDqbHH7HW&size=48&format=gif&token=\\\",\\n        col_type: \\\"icon_2\\\"\\n    });\\n    layout.push({\\n        title: \\\"批量下载\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule((MY_ID) => {\\n            let loadingTeam = JSON.parse(getMyVar(MY_ID + \\\":loadingTeam\\\", \\\"[]\\\") || \\\"[]\\\");\\n            if (loadingTeam.length > 0) return \\\"toast://还有任务没有完成\\\";\\n            if (getAppVersion() < 2594) return \\\"toast://未开放\\\";\\n            putMyVar(MY_ID + \\\":viewMode\\\", \\\"1\\\");\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\";\\n\\n        }, MY_ID),\\n        pic_url: \\\"https://img.icons8.com/?format=gif&id=0uafaMNzxj88&token=\\\",\\n        col_type: \\\"icon_2\\\"\\n    });\\n    setType();\\n    layout.push({\\n        col_type: \\\"line_blank\\\"\\n    });\\n    let loadingTeam = JSON.parse(getMyVar(MY_ID + \\\":loadingTeam\\\", \\\"[]\\\") || \\\"[]\\\");\\n    for (let i = 0, item = chapterList[0]; i < chapterList.length; item = chapterList[++i]) {\\n        let is_download = record.includes(item.title);\\n        if (is_download && tagFilter !== \\\"1\\\") {\\n            chapterTeam.push(comFun(item.CID, item));\\n        } else if (!is_download && tagFilter !== \\\"2\\\") {\\n            chapterTeam.push({\\n                title: loadingTeam.includes(item.CID) ? \\\"‘‘\\\" + item.title + \\\"’’\\\" : item.title,\\n                url: $(\\\"#noLoading#\\\").lazyRule(clickDownload, item, info, MY_ID, item.CID),\\n                extra: {\\n                    id: MY_ID + \\\"#\\\" + item.CID\\n                },\\n                col_type: def_DoVi_Style\\n            });\\n        }\\n    }\\n}\\n\\nfunction clickChoose(title, MY_ID, i) {\\n    let isStart = getMyVar(MY_ID + \\\":isStart\\\");\\n    if (isStart === \\\"1\\\") return \\\"toast://正在下载...\\\";\\n    let batchTeam = JSON.parse(getMyVar(MY_ID + \\\":batchTeam\\\", \\\"[]\\\") || \\\"[]\\\");\\n    let ElementIndex = batchTeam.indexOf(i);\\n    if (ElementIndex > -1) {\\n        updateItem({\\n            title: title,\\n            extra: {\\n                id: MY_ID + \\\"#\\\" + i\\n            }\\n        });\\n        batchTeam.splice(ElementIndex, 1);\\n    } else {\\n        updateItem({\\n            title: \\\"‘‘\\\" + title + \\\"’’\\\",\\n            extra: {\\n                id: MY_ID + \\\"#\\\" + i\\n            }\\n        });\\n        batchTeam.push(i);\\n    }\\n    putMyVar(MY_ID + \\\":batchTeam\\\", JSON.stringify(batchTeam));\\n    return \\\"hiker://empty\\\";\\n}\\n\\nfunction batchView() {\\n    layout.push({\\n        title: \\\"单选下载\\\",\\n        pic_url: \\\"https://img.icons8.com/?id=PIicvF6ebzMn&size=48&format=gif&token=\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule((MY_ID) => {\\n            if (getMyVar(MY_ID + \\\":isStart\\\") === \\\"1\\\") return \\\"toast://正在批量下载\\\";\\n            putMyVar(MY_ID + \\\":viewMode\\\", \\\"0\\\");\\n            clearMyVar(MY_ID + \\\":batchTeam\\\");\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\";\\n        }, MY_ID),\\n        col_type: \\\"icon_small_4\\\"\\n    });\\n    let start = Config.viewPageSize * Math.max(pageNum - 1, 0);\\n    let end = start + chapterList.length;\\n    layout.push({\\n        title: \\\"选择全部\\\",\\n        pic_url: \\\"https://img.icons8.com/?format=gif&id=1HVcHLoNzrit&token=\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule((start, end, MY_ID) => {\\n            if (getMyVar(MY_ID + \\\":isStart\\\") === \\\"1\\\") return \\\"toast://正在下载哦~\\\";\\n            const Tool = $.require(\\\"hiker://page/Tool.js\\\");\\n            let chooseTeam = Tool.range(start, end);\\n            let batchTeam = JSON.parse(getMyVar(MY_ID + \\\":batchTeam\\\", \\\"[]\\\") || \\\"[]\\\");\\n            batchTeam = Array.from(new Set(batchTeam.concat(chooseTeam)));\\n            let completed = JSON.parse(getMyVar(MY_ID + \\\":completed\\\", \\\"[]\\\") || \\\"[]\\\");\\n            batchTeam = batchTeam.filter((i) => !completed.includes(i));\\n            putMyVar(MY_ID + \\\":batchTeam\\\", JSON.stringify(batchTeam));\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, start, end, MY_ID),\\n        col_type: \\\"icon_small_4\\\"\\n    });\\n    layout.push({\\n        title: \\\"取消全部\\\",\\n        pic_url: \\\"https://img.icons8.com/?format=gif&id=HzEjPpI3NL8D&token=\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule((start, end, MY_ID) => {\\n            if (getMyVar(MY_ID + \\\":isStart\\\") === \\\"1\\\") return \\\"toast://正在下载哦~\\\";\\n            const Tool = $.require(\\\"hiker://page/Tool.js\\\");\\n            let chooseTeam = new Set(Tool.range(start, end));\\n            let batchTeam = JSON.parse(getMyVar(MY_ID + \\\":batchTeam\\\", \\\"[]\\\") || \\\"[]\\\");\\n            batchTeam = batchTeam.filter(x => !chooseTeam.has(x));\\n            putMyVar(MY_ID + \\\":batchTeam\\\", JSON.stringify(batchTeam));\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, start, end, MY_ID),\\n        col_type: \\\"icon_small_4\\\"\\n    });\\n    layout.push({\\n        title: \\\"确认选中\\\",\\n        pic_url: \\\"https://img.icons8.com/?format=gif&id=tMrvtc6T9hVb&token=\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule((MY_ID) => {\\n            if (getMyVar(MY_ID + \\\":isStart\\\", \\\"-1\\\") !== \\\"-1\\\") {\\n                return \\\"toast://正在下载哦~\\\";\\n            }\\n            let batchTeam = JSON.parse(getMyVar(MY_ID + \\\":batchTeam\\\", \\\"[]\\\") || \\\"[]\\\");\\n            return batchTeam.length === 0 ? \\\"toast://你还什么都没有选\\\" : \\\"hiker://page/Batch.view#noRefresh##noHistory##noRecordHistory#\\\";\\n        }, MY_ID),\\n        extra: {\\n            newWindow: true,\\n            windowId: MY_ID + \\\"//批量下载\\\",\\n            MY_ID: MY_ID,\\n            chapterList: backupChapterList,\\n            info: info\\n        },\\n        col_type: \\\"icon_small_4\\\"\\n    });\\n    setType();\\n    layout.push({\\n        col_type: \\\"line_blank\\\"\\n    });\\n    let batchTeam = JSON.parse(getMyVar(MY_ID + \\\":batchTeam\\\", \\\"[]\\\") || \\\"[]\\\");\\n    let completed = [];\\n    for (let i = 0, item = chapterList[0]; i < chapterList.length; item = chapterList[++i]) {\\n        let is_download = record.includes(item.title);\\n\\n        if (is_download) {\\n            completed.push(item.CID);\\n            if(tagFilter !== \\\"1\\\"){\\n                chapterTeam.push(comFun(item.CID, item));\\n            }\\n        } else if (!is_download && tagFilter !== \\\"2\\\") {\\n            chapterTeam.push({\\n                title: batchTeam.includes(item.CID) ? \\\"‘‘\\\" + item.title + \\\"’’\\\" : item.title,\\n                url: $(\\\"#noLoading#\\\").lazyRule(clickChoose, item.title, MY_ID, item.CID),\\n                extra: {\\n                    id: MY_ID + \\\"#\\\" + item.CID\\n                },\\n                col_type: def_DoVi_Style\\n            });\\n        }\\n    }\\n    putMyVar(MY_ID + \\\":completed\\\", JSON.stringify(completed));\\n}\\nswitch (viewMode) {\\n    case \\\"0\\\":\\n        singleView();\\n        break;\\n    case \\\"1\\\":\\n        batchView();\\n        break;\\n}\\nif (isReverse === \\\"1\\\") {\\n    chapterTeam.reverse();\\n}\\nlayout.push.apply(layout, chapterTeam);\\nsetResult(layout);\"},{\"col_type\":\"movie_3\",\"name\":\"#v.批量下载器\",\"path\":\"Batch.view\",\"rule\":\"js:\\nlet {\\n    chapterList,\\n    info,\\n    MY_ID\\n} = MY_PARAMS;\\nsetPageTitle(\\\"下载器|\\\"+info.bookName);\\naddListener(\\\"onClose\\\", $.toString((MY_ID) => {\\n    clearMyVar(MY_ID + \\\":isStart\\\");\\n    clearMyVar(MY_ID + \\\":status\\\");\\n    clearMyVar(MY_ID + \\\":batchTeam\\\");\\n    refreshPage();\\n}, MY_ID));\\n\\nlet isStart = getMyVar(MY_ID + \\\":isStart\\\", \\\"0\\\");\\nlet status = getMyVar(MY_ID + \\\":status\\\", \\\"0\\\");\\nlet layout = [];\\n\\nlet batchTeam = JSON.parse(getMyVar(MY_ID + \\\":batchTeam\\\", \\\"[]\\\") || \\\"[]\\\");\\nif(typeof chapterList === \\\"string\\\"){\\n    chapterList = JSON.parse(request(\\\"file://\\\"+chapterList)||\\\"[]\\\");\\n}\\nlet chapterTeam = batchTeam.map(v => {\\n    let chapterItem = chapterList[v];\\n    chapterItem.CID = v;\\n    return chapterItem;\\n});\\nif (isStart === \\\"0\\\") {\\n    layout.push({\\n        title: \\\"开始下载[\\\" + chapterTeam.length + \\\"]\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule((chapterTeam, info, MY_ID) => {\\n            putMyVar(MY_ID + \\\":isStart\\\", \\\"1\\\");\\n            refreshPage(false);\\n            let download = $.require(\\\"hiker://page/BatchStatistics.js\\\");\\n            if(info.type===\\\"comic\\\"&&info.comicScheme===\\\"1\\\"){\\n                download=download.b;\\n            }else{\\n                download=download.a;\\n            }\\n            return download(chapterTeam, info, MY_ID) || \\\"toast://下载错误\\\";\\n        }, chapterTeam, info, MY_ID),\\n        col_type: \\\"text_center_1\\\",\\n        extra: {\\n            id: MY_ID + \\\"||开始下载\\\"\\n        }\\n    });\\n    layout.push({\\n        title: \\\"任务列表：\\\",\\n        col_type: \\\"rich_text\\\",\\n    });\\n    for (let item of chapterTeam) {\\n        layout.push({\\n            title: item.title,\\n            url: \\\"hiker://empty\\\",\\n            col_type: \\\"text_2\\\"\\n        });\\n    }\\n\\n} else {\\n    layout.push({\\n        title: \\\"下载进度:0/\\\"+chapterTeam.length,\\n        desc: \\\"““””▇▇▇▇▇▇▇▇▇▇\\\".fontcolor(\\\"#e5e1e4\\\")+\\\" 0%\\\",\\n        url: \\\"hiker://empty\\\",\\n        col_type: \\\"text_center_1\\\",\\n        extra: {\\n            id: MY_ID + \\\"||下载进度\\\",\\n            lineVisible: false\\n        }\\n    });\\n    layout.push({\\n        title: \\\"后台下载\\\",\\n        url: \\\"func://background\\\",\\n        col_type: \\\"text_2\\\"\\n    });\\n\\n    layout.push({\\n        title: [\\\"[取消下载]\\\", \\\"[正在停止...]\\\", \\\"[返回]\\\", \\\"[处理失败]\\\", \\\"[重新开始]\\\"][status],\\n        url: $(\\\"#noLoading#\\\").lazyRule((MY_ID) => {\\n            let status = getMyVar(MY_ID + \\\":status\\\", \\\"0\\\");\\n            if (status === \\\"0\\\") {\\n                putMyVar(MY_ID + \\\":status\\\", \\\"1\\\");\\n                updateItem({\\n                    title: \\\"[正在停止...]\\\",\\n                    extra: {\\n                        id: MY_ID + \\\"||下载控制\\\"\\n                    }\\n                });\\n                return \\\"toast://正在取消下载任务\\\";\\n            } else if (status === \\\"1\\\") {\\n                return \\\"toast://正在暂停...\\\";\\n            } else if (status === \\\"2\\\") {\\n                back();\\n                return \\\"toast://已退出下载器\\\";\\n            } else if ([\\\"3\\\", \\\"4\\\"].includes(status)) {\\n                clearMyVar(MY_ID + \\\":isStart\\\");\\n                clearMyVar(MY_ID + \\\":status\\\");\\n                clearMyVar(MY_ID + \\\":log\\\");\\n                refreshPage();\\n                return \\\"toast://重新点击下载\\\"\\n            }\\n        }, MY_ID),\\n        col_type: \\\"text_2\\\",\\n        extra: {\\n            id: MY_ID + \\\"||下载控制\\\"\\n        }\\n    });\\n    layout.push({\\n        col_type: \\\"line_blank\\\"\\n    });\\n    layout.push({\\n        title: \\\"<strong>下载日志</strong>\\\".big(),\\n        col_type: \\\"rich_text\\\",\\n        \\n    });\\n    layout.push({\\n        col_type: \\\"line\\\",\\n        extra: {\\n            id: MY_ID + \\\"||日志\\\"\\n        }\\n    });\\n    layout.push({\\n        title:\\\"““””$>\\\"+\\\"开始下载......\\\".fontcolor(\\\"#00ff00\\\"),\\n        url:\\\"hiker://empty\\\",\\n        col_type: \\\"text_1\\\",\\n        extra: {\\n            id: MY_ID + \\\"#log#0\\\",\\n            lineVisible:false\\n        }\\n    });\\n}\\n\\nsetResult(layout);\"},{\"col_type\":\"movie_3\",\"name\":\"#fg.批量下载统计\",\"path\":\"BatchStatistics.js\",\"rule\":\"const Tool = $.require(\\\"hiker://page/Tool.js\\\");\\nconst Config = $.require(\\\"hiker://page/Config.json\\\");\\n\\n$.exports.a = function(chapterTeam, info, MY_ID) {\\n    if (chapterTeam.length === 0) {\\n        return \\\"toast://空的下载队列\\\";\\n    }\\n\\n    var count = 0;\\n    var taskCount = chapterTeam.length;\\n    var successCID = [];\\n    var failName = [];\\n    var logCount = 1;\\n    var taskTeam = chapterTeam.map(chapterItem => ({\\n        func: task,\\n        id: chapterItem.title,\\n        param: {\\n            chapterItem: chapterItem,\\n            info: info,\\n            MY_ID: MY_ID\\n        }\\n    }));\\n    let logNum = Config.logNum;\\n\\n\\n    function putLog(text) {\\n        log(text);\\n        if (logCount >= logNum) {\\n            deleteItem(MY_ID + \\\"#log#\\\" + (logCount - 10));\\n        }\\n        addItemAfter(MY_ID + \\\"||日志\\\", {\\n            url: \\\"hiker://empty\\\",\\n            title: \\\"$>\\\" + text,\\n            col_type: \\\"text_1\\\",\\n            extra: {\\n                lineVisible: false,\\n                id: MY_ID + \\\"#log#\\\" + logCount\\n            }\\n        });\\n        logCount++;\\n    }\\n\\n    function task(taskParam) {\\n        let result = $.require(\\\"hiker://page/Batch.exe.js\\\")(taskParam);\\n        return result;\\n    }\\n\\n    function listener(perch, id, error, CID) {\\n        count++;\\n        let isSuccess = false;\\n        if (error != null) {\\n            failName.push(id);\\n            putLog(\\\"[listener]下载失败：\\\" + id + \\\"<ERROR@ \\\" + error + \\\">\\\");\\n        } else if (CID >= 0) {\\n            successCID.push(CID);\\n            let ratio = (count / taskCount).toFixed(4);\\n            let stripCount = Math.ceil(ratio * 10);\\n            isSuccess = true;\\n            updateItem({\\n                title: \\\"下载进度：\\\" + successCID.length + \\\"/\\\" + taskCount,\\n                desc: \\\"““””\\\" + \\\"▇\\\".repeat(stripCount).fontcolor(\\\"#ffac2d\\\") + \\\"▇\\\".repeat(10 - stripCount).fontcolor(\\\"#e5e1e4\\\") + \\\" \\\" + String((ratio * 100)).slice(0, 5) + \\\"%\\\",\\n                extra: {\\n                    id: MY_ID + \\\"||下载进度\\\"\\n                }\\n            });\\n            putLog(\\\"[listener]已完成下载：\\\" + id);\\n        } else if (CID === -1) {\\n            failName.push(id);\\n            putLog(\\\"[listener]已停止：\\\" + id);\\n            count = taskCount;\\n        }\\n\\n        if (taskCount !== count) return;\\n        if (successCID.length === taskCount) {\\n            updateItem({\\n                desc: \\\"““””\\\" + \\\"▇\\\".repeat(10).fontcolor(\\\"#00ff00\\\") + \\\" 100%\\\",\\n                extra: {\\n                    id: MY_ID + \\\"||下载进度\\\"\\n                }\\n            });\\n        }\\n        let batchTeam = JSON.parse(getMyVar(MY_ID + \\\":batchTeam\\\", \\\"[]\\\") || \\\"[]\\\");\\n        let status = getMyVar(MY_ID + \\\":status\\\", \\\"0\\\");\\n        let failTeam = batchTeam.filter(v => !successCID.includes(v));\\n        putMyVar(MY_ID + \\\":batchTeam\\\", JSON.stringify(failTeam));\\n        if (failTeam.length > 0 && status !== \\\"1\\\") {\\n            putMyVar(MY_ID + \\\":status\\\", \\\"3\\\");\\n            putLog(\\\"下载失败:[\\\" + failName.join(\\\"]，[\\\") + \\\"]。\\\");\\n            updateItem({\\n                title: \\\"[处理失败]\\\",\\n                extra: {\\n                    id: MY_ID + \\\"||下载控制\\\"\\n                }\\n            });\\n        } else if (failTeam.length > 0 && status === \\\"1\\\") {\\n            putMyVar(MY_ID + \\\":status\\\", \\\"4\\\");\\n            putLog(\\\"[listener]#已停止所有任务，但已有进度不会消失#\\\");\\n            updateItem({\\n                title: \\\"[重新开始]\\\",\\n                extra: {\\n                    id: MY_ID + \\\"||下载控制\\\"\\n                }\\n            });\\n            return \\\"break\\\";\\n        } else {\\n            putMyVar(MY_ID + \\\":status\\\", \\\"2\\\");\\n            putLog(\\\"下载任务[\\\" + info.bookName + \\\"]已全部成功完成\\\");\\n            updateItem({\\n                title: \\\"[返回]\\\",\\n                extra: {\\n                    id: MY_ID + \\\"||下载控制\\\"\\n                }\\n            });\\n        }\\n        toast(\\\"下载任务[\\\" + info.bookName + \\\"]已完成\\\");\\n    }\\n    let taskTeamChunk = [];\\n    if (Config.threadNum > 0) {\\n        taskTeamChunk = Tool.chunk(taskTeam, Config.threadNum);\\n    } else {\\n        taskTeamChunk = [taskTeam];\\n    }\\n    for (let taskList of taskTeamChunk) {\\n        be(taskList, {\\n            func: listener\\n        });\\n        let status = getMyVar(MY_ID + \\\":status\\\", \\\"0\\\");\\n        if (status === \\\"1\\\") {\\n            let batchTeam = JSON.parse(getMyVar(MY_ID + \\\":batchTeam\\\", \\\"[]\\\") || \\\"[]\\\");\\n            //let status = getMyVar(MY_ID + \\\":status\\\", \\\"0\\\");\\n            let failTeam = batchTeam.filter(v => !successCID.includes(v));\\n            putMyVar(MY_ID + \\\":batchTeam\\\", JSON.stringify(failTeam));\\n            putMyVar(MY_ID + \\\":status\\\", \\\"4\\\");\\n            putLog(\\\"[listener]#已停止所有任务，但已有进度不会消失#\\\");\\n            updateItem({\\n                title: \\\"[重新开始]\\\",\\n                extra: {\\n                    id: MY_ID + \\\"||下载控制\\\"\\n                }\\n            });\\n            return \\\"hiker://empty\\\";\\n        }\\n\\n    }\\n\\n    return \\\"hiker://empty\\\";\\n};\\n\\n$.exports.b = function comic(chapterTeam, info, MY_ID) {\\n    if (chapterTeam.length === 0) {\\n        return \\\"toast://空的下载队列\\\";\\n    }\\n    const File = $.require(\\\"hiker://page/File.js\\\");\\n\\n    let logNum = Config.logNum;\\n    let logCount = 0;\\n\\n    function putLog(text) {\\n        log(text);\\n        if (logCount >= logNum) {\\n            deleteItem(MY_ID + \\\"#log#\\\" + (logCount - 10));\\n        }\\n        addItemAfter(MY_ID + \\\"||日志\\\", {\\n            url: \\\"hiker://empty\\\",\\n            title: \\\"$>\\\" + text,\\n            col_type: \\\"text_1\\\",\\n            extra: {\\n                lineVisible: false,\\n                id: MY_ID + \\\"#log#\\\" + logCount\\n            }\\n        });\\n        logCount++;\\n    }\\n\\n    function task(taskParam) {\\n        const Tool = $.require(\\\"hiker://page/Tool.js\\\");\\n        for (let i = 0; i < 10; i++) {\\n            try {\\n                let pic = Tool.hikerPic(taskParam.url);\\n                Tool.picDownload(pic[0], taskParam.chapterPath + (taskParam.i + 1) + \\\".jpg\\\", pic[1], taskParam.decode);\\n                if (getMyVar(taskParam.MY_ID + \\\":status\\\", \\\"\\\") === \\\"1\\\") {\\n                    return -1;\\n                }\\n                errorNum = 0;\\n                break;\\n            } catch (e) {\\n                if (i === 9) {\\n                    throw e;\\n                }\\n            }\\n        }\\n        return taskParam.CID;\\n    }\\n    let count = 0;\\n    let totalCount = 0;\\n    let successCID = [];\\n\\n    function listener(param, id, error, result) {\\n        try {\\n            totalCount++;\\n\\n            if (error != null) {\\n                putLog(\\\"[listener]下载失败：\\\" + id + \\\"<ERROR@ \\\" + error + \\\">\\\");\\n            } else if (result === -1) {\\n                putLog(\\\"[listener]已停止：\\\" + id);\\n                totalCount = param.pivCount;\\n            } else {\\n                count++;\\n                let ratio = ((count / param.pivCount)).toFixed(4);\\n                let stripCount = Math.ceil(ratio * 10);\\n                if (param.pivCount === totalCount && totalCount === count) {\\n                    successCID.push(param.CID);\\n                }\\n                updateItem({\\n                    title: \\\"下载进度：\\\" + (successCID.length) + \\\"/\\\" + param.total,\\n                    desc: \\\"““””\\\" + \\\"▇\\\".repeat(stripCount).fontcolor(\\\"#ffac2d\\\") + \\\"▇\\\".repeat(10 - stripCount).fontcolor(\\\"#e5e1e4\\\") + \\\" \\\" + String((ratio * 100)).slice(0, 5) + \\\"%\\\",\\n                    extra: {\\n                        id: MY_ID + \\\"||下载进度\\\"\\n                    }\\n                });\\n                //putLog(\\\"[listener]已完成下载：\\\" + id);\\n            }\\n            if (totalCount !== param.pivCount) return;\\n            if (totalCount === count) {\\n                File.renameFile(param.chapterPath, param.CID + \\\"$A$\\\" + Tool.textShield(param.title));\\n            }\\n            totalCount = count = 0;\\n            return \\\"break\\\";\\n        } catch (e) {\\n            log(e.toString());\\n        }\\n    }\\n    let taskTeam = [];\\n    let mainPath = Config.comicPath + \\\"/\\\" + info.ruleName + \\\"/\\\" + Tool.textShield(info.bookName) + \\\"/\\\";\\n    if (info.bookTopPic) {\\n        try {\\n            let bookTopPic = Tool.hikerPic(info.bookTopPic);\\n            Tool.picDownload(bookTopPic[0], mainPath + info.bookName + \\\".jpg\\\", bookTopPic[1], info.decode);\\n        } catch (e) {\\n            log(\\\"<封面下载错误> \\\" + e.message);\\n        }\\n    }\\n\\n    for (let k = 0; k < chapterTeam.length; k++) {\\n        let item = chapterTeam[k];\\n        let order = k;\\n        let chapterPath = mainPath + item.CID + \\\"$B$\\\" + Tool.textShield(item.title) + \\\"/\\\";\\n        let picList = [];\\n        try {\\n            let getPicList = new Function(\\\"input\\\", \\\"url\\\", \\\"return\\\" + info.parseCode);\\n            picList = getPicList(item.url, item.url);\\n            if (typeof picList === \\\"string\\\") {\\n                picList = picList.replace(\\\"pics://\\\", \\\"\\\").split(\\\"&&\\\");\\n            }\\n        } catch (e) {\\n            putLog(\\\"<漫画图片解析错误> \\\" + e.message);\\n            continue;\\n        }\\n        if (picList.length === 0) {\\n            putLog(\\\"<漫画图片解析错误：图片链接返回为空>\\\");\\n            continue;\\n        }\\n        picList = picList.filter(p => p);\\n        var taskTeam = picList.map((url, i) => ({\\n            func: task,\\n            id: i,\\n            param: {\\n                url: url,\\n                i: i,\\n                chapterPath: chapterPath,\\n                MY_ID: MY_ID,\\n                decode: info.decode\\n            }\\n        }));\\n        be(taskTeam, {\\n            func: listener,\\n            param: {\\n                pivCount: picList.length,\\n                total: chapterTeam.length,\\n                order: order,\\n                CID: item.CID,\\n                title: item.title,\\n                chapterPath: chapterPath\\n            }\\n        });\\n        if (getMyVar(MY_ID + \\\":status\\\", \\\"\\\") === \\\"1\\\") {\\n            break;\\n        }\\n    }\\n\\n    let status = getMyVar(MY_ID + \\\":status\\\", \\\"0\\\");\\n    java.lang.Thread.sleep(40);\\n    //let batchTeam = JSON.parse(getMyVar(MY_ID + \\\":batchTeam\\\", \\\"[]\\\") || \\\"[]\\\");\\n    let failTeam = chapterTeam.filter(v => !successCID.includes(v.CID));\\n    let failName = failTeam.map(item => item.title);\\n    let batchTeam = failTeam.map(item => item.CID);\\n\\n    if (failTeam.length > 0 && status !== \\\"1\\\") {\\n        putMyVar(MY_ID + \\\":batchTeam\\\", JSON.stringify(batchTeam));\\n        putMyVar(MY_ID + \\\":status\\\", \\\"3\\\");\\n        putLog(\\\"下载失败:[\\\" + failName.join(\\\"]，[\\\") + \\\"]。\\\");\\n        updateItem({\\n            title: \\\"[处理失败]\\\",\\n            extra: {\\n                id: MY_ID + \\\"||下载控制\\\"\\n            }\\n        });\\n    } else if (failTeam.length > 0 && status === \\\"1\\\") {\\n        putMyVar(MY_ID + \\\":batchTeam\\\", JSON.stringify(batchTeam));\\n        putMyVar(MY_ID + \\\":status\\\", \\\"4\\\");\\n        putLog(\\\"[listener]#已停止所有任务，但已有进度不会消失#\\\");\\n        updateItem({\\n            title: \\\"[重新开始]\\\",\\n            extra: {\\n                id: MY_ID + \\\"||下载控制\\\"\\n            }\\n        });\\n    } else {\\n        putMyVar(MY_ID + \\\":status\\\", \\\"2\\\");\\n        putLog(\\\"下载任务[\\\" + info.bookName + \\\"]已全部成功完成\\\");\\n        updateItem({\\n            title: \\\"[返回]\\\",\\n            extra: {\\n                id: MY_ID + \\\"||下载控制\\\"\\n            }\\n        });\\n    }\\n    return \\\"hiker://empty\\\";\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"#fg.批量主程序\",\"path\":\"Batch.exe.js\",\"rule\":\"const Mian = $.require(\\\"mainDownload\\\");\\nfunction comic(taskParam) {\\n    let {\\n        chapterItem,\\n        info,\\n        MY_ID,\\n    } = taskParam;\\n    return Mian.comic(chapterItem, info, chapterItem.CID, MY_ID, true)||chapterItem.CID;\\n}\\n\\nfunction novel(taskParam) {\\n    let {\\n        chapterItem,\\n        info,\\n        MY_ID,\\n    } = taskParam;\\n    return Mian.novel(chapterItem, info, chapterItem.CID,MY_ID, true)||chapterItem.CID;\\n    //File.renameFile(chapterPath, chapterItem.CID + \\\"$A$\\\" + chapterItem.title);\\n}\\nvar $exe = {\\n    comic: comic,\\n    novel: novel\\n};\\n$.exports = function(taskParam) {\\n    return $exe[taskParam.info.type](taskParam);\\n};\"},{\"col_type\":\"movie_3\",\"name\":\"#fg.普通主程序\",\"path\":\"Download.exe.js\",\"rule\":\"const Mian = $.require(\\\"mainDownload\\\");\\nfunction novel(item, info, order, MY_ID) {\\n    Mian.novel(item, info, order);\\n    return \\\"toast://\\\" + info.bookName + \\\"@\\\" + item.title + \\\" 下载完成\\\";\\n}\\n\\nfunction comic(item, info, order, MY_ID) {\\n    Mian.comic(item, info, order);\\n    return \\\"toast://\\\" + info.bookName + \\\"@\\\" + item.title + \\\" 下载完成\\\";\\n}\\nvar $exe = {\\n    comic: comic,\\n    novel: novel\\n};\\n$.exports = function(item, info, order, MY_ID) {\\n    return $exe[info.type](item, info, order, MY_ID);\\n};\"},{\"col_type\":\"movie_3\",\"name\":\"#f.通用工具\",\"path\":\"Tool.js\",\"rule\":\"const v = {\\n    split(text, target, count) {\\n        count = count === undefined ? 1 : count;\\n        let array = [text];\\n        for (let i = 0; i < count; i++) {\\n            text = array[i];\\n            let index = text.indexOf(target);\\n            if (index === -1) {\\n                break;\\n            }\\n            array[i] = text.slice(0, index);\\n            array[i + 1] = text.slice(index + target.length);\\n        }\\n        return array;\\n    },\\n    chunk(arr, size) {\\n        var result = [];\\n        for (var i = 0, len = arr.length; i < len; i += size) {\\n            result.push(arr.slice(i, i + size));\\n        }\\n        return result;\\n    },\\n    hikerPic(url) {\\n        var headers = {};\\n        let urls = url.split(\\\"@\\\");\\n        let picUrl = urls.shift();\\n        let length = urls.length;\\n        for (let i = 0; i < length; i++) {\\n            let [key, value] = v.split(urls[i], \\\"=\\\");\\n            if (key === \\\"headers\\\") {\\n                try {\\n                    Object.assign(headers, JSON.parse(value));\\n                } catch (e) {\\n                    log(e.toString());\\n                }\\n            } else if (key.includes(\\\".\\\") || key.includes(\\\"?\\\")) {\\n                picUrl += \\\"@\\\" + key + (value ? \\\"=\\\" + value : \\\"\\\");\\n            } else if (key !== \\\"js\\\") {\\n                headers[key] = value;\\n            }\\n        }\\n        return [picUrl, headers];\\n    },\\n    range(start, end) {\\n        return Array(end - start).fill(0).map((el, i) => start + i);\\n    },\\n    picDownload(url, path, headers, deciphe) {\\n        if (typeof deciphe === \\\"string\\\" && deciphe.length > 0) {\\n            let instream;\\n            let outstream;\\n            let file;\\n            try {\\n                file = new java.io.File(path);\\n                if (file.exists()) {\\n                    return;\\n                }\\n                let dir = file.getParentFile();\\n                if (dir != null && !dir.exists()) {\\n                    dir.mkdirs();\\n                }\\n                instream = fetch(url, {\\n                    headers: headers,\\n                    inputStream: true\\n                });\\n\\n                outstream = new java.io.FileOutputStream(path);\\n                let t = $.hiker.input,\\n                    c = $.hiker.url;\\n                $.hiker.input = instream;\\n                $.hiker.url = url;\\n                let picin = (new Function(\\\"return \\\" + deciphe))();\\n                $.hiker.input = t;\\n                $.hiker.url = c;\\n                let buf = java.lang.reflect.Array.newInstance(java.lang.Byte.TYPE, 1024);\\n                let len;\\n                while ((len = picin.read(buf)) != -1) {\\n                    outstream.write(buf, 0, len);\\n                }\\n                closeMe(instream);\\n                closeMe(outstream);\\n            } catch (e) {\\n                closeMe(instream);\\n                closeMe(outstream);\\n                if (file instanceof java.io.File && file.exists()) {\\n                    file.delete();\\n                }\\n                log(\\\"<解密下载Error>\\\" + e.toString())\\n                throw e;\\n            } finally {\\n                closeMe(instream);\\n                closeMe(outstream);\\n            }\\n\\n        } else {\\n            requireDownload(url, path, headers);\\n        }\\n    },\\n    textShield(text) {\\n        let e = /#|:|&|\\\\||\\\\^|@|\\\\<|\\\\>|%|\\\\/|\\\\?/g;\\n        return text.replace(e, \\\"_\\\");\\n    }\\n    \\n}\\n\\n$.exports = v;\"},{\"col_type\":\"movie_3\",\"name\":\"#j.Config\",\"path\":\"Config.json\",\"rule\":\"js:\\nconst File = $.require(\\\"hiker://page/File.js?rule=本地资源管理\\\");\\n\\nlet localConfig = {};\\n\\ntry {\\n    localConfig = JSON.parse(File.readFile(getPath(\\\"hiker://files/rules/files/本地资源管理/config.json\\\").slice(7)));\\n} catch (e) {\\n    deleteFile(\\\"config.json\\\");\\n}\\nconst Config = Object.assign({\\n    homePath: getPath(\\\"hiker://files/localManager\\\").slice(7),\\n    logNum: 10,\\n    threadNum: 0,\\n    def_isPaginate: \\\"1\\\", //1默认开启分页，0默认关闭\\n    viewPageSize: 200,\\n    def_Pic: \\\"hiker://images/home_pic4\\\",\\n    def_Lord_Type: \\\"comic\\\",\\n    def_View_Style: \\\"text_1\\\",\\n    def_DoVi_Style: \\\"text_2\\\",\\n    def_DoVi_Type: \\\"1\\\", //0全部, 1未完成，2已完成\\n    def_isComicCompatible: \\\"0\\\"\\n}, localConfig);\\nconst PATHS = {\\n    novelPath: \\\"/小说/\\\",\\n    comicPath: \\\"/漫画/\\\",\\n    novelFullPath: \\\"/小说合并/\\\",\\n    externalImportPath: \\\"/外导小说/\\\",\\n    contentsCache: \\\"/目录缓存/\\\"\\n}\\n\\n\\nObject.keys(PATHS).forEach(key => Config[key] = Config.homePath + PATHS[key]);\\n$.exports = Config;\\n\"},{\"col_type\":\"movie_3\",\"name\":\"#v.主页面\",\"path\":\"Main.view\",\"rule\":\"js:\\nfunction main() {\\n    var layout = [];\\n    const File = $.require(\\\"hiker://page/File.js\\\");\\n    const Config = $.require(\\\"hiker://page/Config.json\\\");\\n    let type = getMyVar(\\\".type\\\", getItem(\\\"main:type\\\", Config.def_Lord_Type));\\n    let tgnum = getMyVar(\\\".tgnum\\\", \\\"0\\\");\\n    addListener(\\\"onClose\\\", $.toString((MY_ID) => {\\n        clearMyVar(\\\"searchKey\\\");\\n        clearMyVar(\\\".tgnum\\\");\\n    }));\\n    layout.push({\\n        title: type === \\\"comic\\\" ? \\\"◉漫画\\\" : \\\"○漫画\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule((type) => {\\n            if (type === \\\"comic\\\") return \\\"hiker://empty\\\";\\n            putMyVar(\\\".type\\\", \\\"comic\\\");\\n            setItem(\\\"main:type\\\", \\\"comic\\\");\\n            clearMyVar(\\\".tgnum\\\");\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\";\\n        }, type),\\n        col_type: \\\"text_3\\\",\\n    });\\n    layout.push({\\n        title: type === \\\"novel\\\" ? \\\"◉小说\\\" : \\\"○小说\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule((type) => {\\n            if (type === \\\"novel\\\") return \\\"hiker://empty\\\";\\n            putMyVar(\\\".type\\\", \\\"novel\\\");\\n            setItem(\\\"main:type\\\", \\\"novel\\\");\\n            clearMyVar(\\\".tgnum\\\");\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\";\\n        }, type),\\n        col_type: \\\"text_3\\\",\\n    });\\n    layout.push({\\n        title: type === \\\"txt\\\" ? \\\"◉整本小说\\\" : \\\"○整本小说\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule((type) => {\\n            if (type === \\\"txt\\\") return \\\"hiker://page/NovelCollected.view#noRecordHistory##noHistory#\\\";\\n            putMyVar(\\\".type\\\", \\\"txt\\\");\\n            setItem(\\\"main:type\\\", \\\"txt\\\");\\n            clearMyVar(\\\".tgnum\\\");\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\";\\n        }, type),\\n        col_type: \\\"text_3\\\"\\n    });\\n    if (type === \\\"txt\\\") {\\n        txtView = $.require(\\\"hiker://page/externalimportTxt.view\\\");\\n        return txtView(layout);\\n    }\\n    let tag = File.getFilePath(Config[type + \\\"Path\\\"], \\\"dir\\\");\\n    if (tag.length === 0) {\\n        layout.push({\\n            col_type: \\\"line_blank\\\",\\n        });\\n        layout.push({\\n            title: \\\"设置\\\",\\n            url: \\\"hiker://page/Setting.view#noRefresh##noRecordHistory##noHistory#\\\",\\n            col_type: \\\"text_2\\\",\\n            extra: {\\n                version: MY_RULE.version\\n            }\\n        });\\n\\n        layout.push({\\n            title: \\\"““帮助””\\\",\\n            url: \\\"hiker://page/help.view#noRefresh##noRecordHistory##noHistory#?keyword=novelComic\\\",\\n            col_type: \\\"text_2\\\"\\n        });\\n        layout.push({\\n            title: '<h1 style=\\\"text-align: center;\\\">啥都没有耶</h1>',\\n            col_type: \\\"rich_text\\\"\\n        });\\n        return setResult(layout);\\n    }\\n    layout.push({\\n        url: '\\\"hiker://search?s=\\\"+input',\\n        desc: \\\"搜你想要的#\\\" + type + \\\"#......\\\",\\n        title: \\\"🔍\\\",\\n        col_type: \\\"input\\\",\\n        extra: {\\n            rules: $.toString((tag, type) => {\\n                let arr1 = [];\\n                for (let i = 0; i < tag.length; i++) {\\n                    arr1.push({\\n                        \\\"title\\\": tag[i].name,\\n                        \\\"search_url\\\": \\\"hiker://empty?isAll=1&searchTerms=**&type=\\\" + type,\\n                        \\\"searchFind\\\": \\\"js:$.require('hiker://page/Search.view?rule='+MY_RULE._title);\\\"\\n                    });\\n                }\\n\\n                return JSON.stringify(arr1);\\n            }, tag, type),\\n            defaultValue: getMyVar('searchKey', ''),\\n            onChange: \\\"putMyVar('searchKey',input)\\\"\\n        }\\n    });\\n\\n    layout.push({\\n        title: \\\"‘‘⚙设置’’\\\",\\n        col_type: \\\"scroll_button\\\",\\n        url: \\\"hiker://page/Setting.view#noRefresh##noRecordHistory##noHistory#\\\",\\n        extra: {\\n            version: MY_RULE.version\\n        }\\n    });\\n\\n\\n    for (let i in tag) {\\n        let it = tag[i];\\n        if (tgnum === i) {\\n            layout.push({\\n                title: \\\"““\\\" + it.name + \\\"””\\\",\\n                col_type: \\\"scroll_button\\\",\\n                url: $([\\\"删除该目录\\\", \\\"跳转小程序\\\", \\\"打开书架\\\"], 1, \\\"选择操作\\\").select((it, type) => {\\n                    if (\\\"跳转小程序\\\" === input) {\\n                        return \\\"hiker://home@\\\" + it.name;\\n                    } else if(\\\"删除该目录\\\"===input){\\n                        //return then([\\\"该操作不会删除小程序，但该小程序下载的所有漫画将被删除\\\"]);\\n                        return $(\\\"该操作不会删除小程序，但该小程序下载的所有 漫画/小说 将被删除\\\").confirm((path) => {\\n                            const File = $.require(\\\"hiker://page/File.js\\\");\\n                            if (File.deleteFiles(path)) {\\n                                clearMyVar(\\\".tgnum\\\");\\n                                refreshPage();\\n                                return \\\"toast://删除成功\\\";\\n                            } else {\\n                                return \\\"toast://删除失败\\\";\\n                            }\\n                        }, it.path);\\n                    }else{\\n                        return \\\"hiker://page/Bookrack.view?rule=本地资源管理&ruleName=\\\"+it.name+\\\"&type=\\\"+type;\\n                    }\\n                }, it, type)\\n            });\\n        } else {\\n            layout.push({\\n                title: it.name,\\n                col_type: \\\"scroll_button\\\",\\n                url: $(\\\"#noLoading#\\\").lazyRule(i => {\\n                    putMyVar(\\\".tgnum\\\", i);\\n                    refreshPage();\\n                    return \\\"hiker://empty\\\";\\n                }, i),\\n            });\\n        }\\n    }\\n    let path = tag[tgnum].path;\\n    let mhlist = File.getFilePath(path, \\\"dir\\\");\\n\\n    if (mhlist.length === 0) {\\n        layout.push({\\n            title: \\\"““””\\\" + \\\"啥都没有耶\\\".big(),\\n            url: \\\"hiker://empty\\\",\\n            col_type: \\\"text_center_1\\\",\\n            extra: {\\n                lineVisible: false\\n            }\\n        });\\n        return setResult(layout);\\n    }\\n    let pageUrl = type === \\\"novel\\\" ? \\\"hiker://page/NovelBrowser.view\\\" : \\\"hiker://page/ComicBrowser.view\\\";\\n    for (let item of mhlist) {\\n        let pic = fileExist(\\\"file://\\\" + item.path + \\\"/\\\" + item.name + \\\".jpg\\\") ? item.path + \\\"/\\\" + item.name + \\\".jpg\\\" : Config.def_Pic;\\n        layout.push({\\n            title: item.name,\\n            pic_url: pic,\\n            url: pageUrl + \\\"?rule=\\\" + MY_RULE.title,\\n            extra: Object.assign(item, {\\n                longClick: [{\\n                    title: \\\"删除\\\",\\n                    js: $.toString((path) => {\\n                        return $.require(\\\"longPress.js\\\").deleteFileForBook(path)\\n                    }, item.path)\\n                }],\\n                id: item.path\\n            })\\n        });\\n    }\\n    setResult(layout);\\n}\\n\\nmain();\"},{\"col_type\":\"text_1\",\"name\":\"#v.漫画章节列表\",\"path\":\"ComicBrowser.view\",\"rule\":\"js:\\nif (getParam(\\\"hasParams\\\") === \\\"true\\\") {\\n    MY_PARAMS = {\\n        path: decodeURIComponent(getParam(\\\"path\\\")),\\n        name: decodeURIComponent(getParam(\\\"name\\\"))\\n    }\\n}\\nlet path = MY_PARAMS.path;\\nsetPageTitle(\\\"CV|\\\" + MY_PARAMS.name)\\nconst File = $.require(\\\"hiker://page/File.js\\\");\\nconst Tool = $.require(\\\"hiker://page/Tool.js\\\");\\nconst Config = $.require(\\\"hiker://page/Config.json\\\");\\n\\nvar layout = [];\\nlet mode = getMyVar(\\\".mode\\\", \\\"0\\\");\\nlet isReverse = getMyVar(\\\".isReverse\\\", \\\"0\\\");\\naddListener(\\\"onClose\\\", $.toString(() => {\\n    clearMyVar(\\\".mode\\\");\\n    clearMyVar(\\\".isReverse\\\");\\n}));\\nconst comicStatus = new Map([\\n    [\\\"A\\\", \\\"\\\"],\\n    [\\\"B\\\", \\\"‘‘[未完成]’’\\\"]\\n]);\\n\\nfunction getTitle(title) {\\n    let titles = Tool.split(title, \\\"$\\\", 2);\\n    return comicStatus.get(titles[1]) + titles[2] || title;\\n}\\nfunction getTitle2(title){\\n    let titles = Tool.split(title, \\\"$\\\", 2);\\n    return titles[2] || title;\\n}\\nlayout.push({\\n    title: \\\"删除整本\\\",\\n    url: $(\\\"确认删除整本漫画？\\\").confirm((path) => {\\n        const File = $.require(\\\"hiker://page/File.js\\\");\\n        if (File.deleteFiles(path)) {\\n            back();\\n            return \\\"toast://删除成功\\\";\\n        } else {\\n            return \\\"toast://删除失败\\\";\\n        }\\n    }, path),\\n    col_type: \\\"text_2\\\"\\n});\\nlayout.push({\\n    title: [\\\"看漫画\\\", \\\"删除章节\\\"][mode],\\n    url: $(\\\"#noLoading#\\\").lazyRule((mode) => {\\n        putMyVar(\\\".mode\\\", mode === \\\"0\\\" ? \\\"1\\\" : \\\"0\\\");\\n        refreshPage(true);\\n        return \\\"hiker://empty\\\"\\n    }, mode),\\n    col_type: \\\"text_2\\\"\\n});\\nlayout.push({\\n    col_type: \\\"line_blank\\\"\\n})\\nlet mhlist = File.getFilePath(path, \\\"dir\\\");\\nmhlist.sort((a, b) => {\\n    a = (a.name.match(/\\\\d+/) || [])[0] || 0;\\n    b = (b.name.match(/\\\\d+/) || [])[0] || 0;\\n    return a - b;\\n});\\n\\nlayout.push({\\n    title: \\\"““””\\\" + \\\"章节 \\\".big() + (\\\"共有:\\\" + mhlist.length + \\\"章\\\").small(),\\n    url: $(\\\"#noLoading#\\\").lazyRule((isReverse) => {\\n        putMyVar(\\\".isReverse\\\", isReverse === \\\"0\\\" ? \\\"1\\\" : \\\"0\\\");\\n        refreshPage(true);\\n        return \\\"hiker://empty\\\"\\n    }, isReverse),\\n    col_type: \\\"text_1\\\"\\n});\\nlet array = [];\\n\\nif (mode === \\\"0\\\") {\\n    if (Config.def_isComicCompatible === \\\"0\\\") {\\n        let lazy = $(\\\"#noLoading#\\\").lazyRule(() => {\\n            const File = $.require(\\\"hiker://page/File.js\\\");\\n            let filelist = File.getFilePath(input);\\n            let shorten = input.replace(getPath(\\\"hiker://files/\\\").slice(7),\\\"hiker://files/\\\");\\n            let piclist = filelist.map((item, i) => shorten + \\\"/\\\" + (i + 1) + \\\".jpg\\\");\\n            return \\\"pics://\\\" + piclist.join(\\\"&&\\\");\\n        });\\n        for (let item of mhlist) {\\n            let title = getTitle(item.name);\\n            array.push({\\n                title: title,\\n                url: item.path + lazy,\\n                col_type: Config.def_View_Style,\\n            });\\n        }\\n    } else {\\n        for (let item of mhlist) {\\n            let title = getTitle(item.name);\\n            array.push({\\n                title: title,\\n                url: \\\"hiker://page/comicCompatible.view#autoPage##readTheme#?path=\\\"+item.path,\\n                col_type: Config.def_View_Style,\\n                extra: {\\n                    path: item.path,\\n                    title: getTitle2(item.name)\\n                }\\n            });\\n        }\\n    }\\n\\n} else {\\n    for (let item of mhlist) {\\n        let name = getTitle2(item.name);\\n        array.push({\\n            title: name,\\n            url: $(\\\"确认删除[\\\" + name + \\\"]？\\\").confirm((path) => {\\n                const File = $.require(\\\"hiker://page/File.js\\\");\\n                if (File.deleteFiles(path)) {\\n                    refreshPage(true);\\n                    return \\\"toast://删除成功\\\";\\n                } else {\\n                    return \\\"toast://删除失败\\\";\\n                }\\n            }, item.path),\\n            col_type: Config.def_View_Style\\n        });\\n    }\\n}\\nif (isReverse === \\\"1\\\") {\\n    array.reverse();\\n}\\nlayout.push.apply(layout, array);\\nsetResult(layout);\"},{\"col_type\":\"movie_3\",\"name\":\"#v.聚合搜索\",\"path\":\"Search.view\",\"rule\":\"js:\\nconst File = $.require(\\\"hiker://page/File.js?rule=\\\" + MY_RULE._title);\\nconst Config = $.require(\\\"hiker://page/Config.json?rule=\\\" + MY_RULE._title);\\nlet comicRuleDirs = File.getFilePath(Config[getParam(\\\"type\\\") + \\\"Path\\\"], \\\"dir\\\");\\nif (getParam(\\\"isAll\\\") === \\\"1\\\") {\\n    comicRuleDirs = comicRuleDirs.filter(item => item.name === MY_RULE.title);\\n}\\n\\nlet searchResult = [];\\nlet searchTerms= getParam(\\\"searchTerms\\\");\\nlet searchTest;\\n\\nif (!getSearchMode()) {\\n    let termsArr = searchTerms.split(\\\"\\\").map(t => t.replace(/\\\\*|\\\\.|\\\\?|\\\\+|\\\\$|\\\\^|\\\\[|\\\\]|\\\\(|\\\\)|\\\\{|\\\\}|\\\\||\\\\/|\\\\\\\\/g, k => \\\"\\\\\\\\\\\" + k));\\n    let reg = new RegExp(termsArr.join(\\\".*\\\"), \\\"i\\\");\\n    searchTest = text => reg.test(text);\\n} else {\\n    searchTest = text => searchContains(text, searchTerms, false);\\n}\\n\\nlet pageUrl = getParam(\\\"type\\\") === \\\"novel\\\" ? \\\"hiker://page/NovelBrowser.view\\\" : \\\"hiker://page/ComicBrowser.view\\\";\\nfor (let sonDir of comicRuleDirs) {\\n    let comicList = File.getFilePath(sonDir.path, \\\"dir\\\");\\n    for (let comic of comicList) {\\n        if (searchTest(comic.name)) {\\n            searchResult.push({\\n                title: comic.name,\\n                pic_url: comic.path + \\\"/\\\" + comic.name + \\\".jpg\\\",\\n                url: pageUrl + \\\"?rule=\\\" + MY_RULE._title,\\n                desc: sonDir.name,\\n                extra: comic\\n            });\\n        }\\n    }\\n\\n}\\nsetResult(searchResult);\"},{\"col_type\":\"movie_3\",\"name\":\"#v.设置\",\"path\":\"Setting.view\",\"rule\":\"js:\\nsetPageTitle(MY_RULE.title + \\\"|设置\\\");\\nconst Config = $.require(\\\"hiker://page/Config.json\\\");\\n\\nlet layout = [];\\n\\nlayout.push({\\n    title: \\\"<strong>基础设置</strong>\\\".big(),\\n    col_type: \\\"rich_text\\\"\\n});\\nlayout.push({\\n    col_type: \\\"line\\\"\\n});\\nlayout.push({\\n    col_type: \\\"line\\\"\\n});\\n\\nlayout.push({\\n    title: \\\"目录路径\\\",\\n    url: \\\"hiker://page/Setting/More.view#noRefresh##noRecordHistory##noHistory#?settingType=contents\\\",\\n    desc: Config.homePath,\\n    col_type: \\\"text_1\\\"\\n});\\nlayout.push({\\n    title: \\\"设置默认封面\\\",\\n    desc: Config.def_Pic,\\n    url: \\\"hiker://page/Setting/More.view#noRefresh##noRecordHistory##noHistory#?settingType=defaultPic\\\",\\n    col_type: \\\"text_1\\\",\\n    extra: {\\n        lineVisible: false\\n    }\\n});\\nlayout.push({\\n    col_type: \\\"line_blank\\\"\\n});\\nlayout.push({\\n    title: \\\"<strong>下载器设置</strong>\\\".big(),\\n    col_type: \\\"rich_text\\\"\\n});\\nlayout.push({\\n    col_type: \\\"line\\\"\\n});\\nlayout.push({\\n    col_type: \\\"line\\\"\\n});\\n\\nfunction setNum(key, test) {\\n    let Config = JSON.parse(readFile(\\\"config.json\\\", 0) || \\\"{}\\\");\\n    input = parseInt(input);\\n    if (Number.isNaN(input)) return \\\"toast://请输入数字\\\";\\n    if (!test(input)) return \\\"toast://不符合条件\\\";\\n    Config[key] = input;\\n    saveFile(\\\"config.json\\\", JSON.stringify(Config), 0);\\n    refreshPage(false);\\n    return \\\"toast://修改成功\\\";\\n}\\nlayout.push({\\n    title: \\\"log数\\\",\\n    url: $(Config.logNum, \\\"0<N<100\\\").input(setNum, \\\"logNum\\\", it => it > 0 && it < 100),\\n    desc: \\\"\\\" + Config.logNum,\\n    col_type: \\\"text_1\\\"\\n});\\n\\nlayout.push({\\n    title: \\\"分批下载数(0不开启)\\\",\\n    url: $(\\\"\\\" + Config.threadNum, \\\"N>-1\\\").input(setNum, \\\"threadNum\\\", it => it > -1),\\n    desc: \\\"\\\" + Config.threadNum,\\n    col_type: \\\"text_1\\\",\\n    extra: {\\n        lineVisible: false,\\n    }\\n});\\n\\n\\nlayout.push({\\n    col_type: \\\"line_blank\\\"\\n});\\n\\nlayout.push({\\n    title: \\\"<strong>小说阅读器设置</strong>\\\".big(),\\n    col_type: \\\"rich_text\\\"\\n});\\nlayout.push({\\n    col_type: \\\"line\\\"\\n});\\nlayout.push({\\n    col_type: \\\"line\\\"\\n});\\n\\nlayout.push({\\n    title: \\\"默认开启分页阅读\\\",\\n    url: $(\\\"#noLoading#\\\").lazyRule((def_isPaginate) => {\\n        let Config = JSON.parse(readFile(\\\"config.json\\\", 0) || \\\"{}\\\");\\n\\n        Config.def_isPaginate = def_isPaginate === \\\"0\\\" ? \\\"1\\\" : \\\"0\\\";\\n\\n        saveFile(\\\"config.json\\\", JSON.stringify(Config), 0);\\n        refreshPage(false);\\n        return \\\"hiker://empty\\\";\\n    }, Config.def_isPaginate),\\n    desc: Config.def_isPaginate === \\\"0\\\" ? \\\"不开启\\\" : \\\"开启\\\",\\n    col_type: \\\"text_1\\\"\\n});\\n\\nlayout.push({\\n    title: \\\"每页最大章数\\\",\\n    url: $(Config.viewPageSize, \\\"30<N<500\\\").input(setNum, \\\"viewPageSize\\\", it => it > 30 && it < 500),\\n    desc: \\\"\\\" + Config.viewPageSize,\\n    col_type: \\\"text_1\\\"\\n});\\nlayout.push({\\n    title: \\\"替换规则\\\",\\n    url: \\\"hiker://page/Setting/More.view#noRecordHistory##noHistory##noRefresh#?settingType=replaceRule\\\",\\n    col_type: \\\"text_1\\\",\\n    extra: {\\n        lineVisible: false\\n    }\\n});\\n\\nlayout.push({\\n    col_type: \\\"line_blank\\\"\\n});\\nlayout.push({\\n    title: \\\"<strong>漫画阅读器设置</strong>\\\".big(),\\n    col_type: \\\"rich_text\\\"\\n});\\nlayout.push({\\n    col_type: \\\"line\\\"\\n});\\nlayout.push({\\n    col_type: \\\"line\\\"\\n});\\nlayout.push({\\n    title: \\\"兼容模式\\\",\\n    url: $(\\\"#noLoading#\\\").lazyRule((def_isComicCompatible) => {\\n        let Config = JSON.parse(readFile(\\\"config.json\\\", 0) || \\\"{}\\\");\\n\\n        Config.def_isComicCompatible = def_isComicCompatible === \\\"0\\\" ? \\\"1\\\" : \\\"0\\\";\\n\\n        saveFile(\\\"config.json\\\", JSON.stringify(Config), 0);\\n        refreshPage(false);\\n        return \\\"hiker://empty\\\";\\n    }, Config.def_isComicCompatible),\\n    desc: Config.def_isComicCompatible === \\\"0\\\" ? \\\"不开启\\\" : \\\"开启\\\",\\n    col_type: \\\"text_1\\\"\\n});\\nlayout.push({\\n    col_type: \\\"line_blank\\\"\\n});\\nlayout.push({\\n    title: \\\"<strong>其他设置</strong>\\\".big(),\\n    col_type: \\\"rich_text\\\"\\n});\\nlayout.push({\\n    col_type: \\\"line\\\"\\n});\\nlayout.push({\\n    col_type: \\\"line\\\"\\n});\\nlayout.push({\\n    title: \\\"规则发布页\\\",\\n    url: \\\"hiker://page/ruleDetail#noHistory##noRecordHistory#?rule=道长仓库Pro\\\",\\n    extra: {\\n        lver: MY_PARAMS.version || \\\"获取版本失败，自行查看\\\",\\n        id: \\\"3559\\\"\\n    },\\n    col_type: \\\"text_1\\\"\\n});\\n\\nlayout.push({\\n    title: \\\"恢复默认设置\\\",\\n    url: $(\\\"确认恢复默认设置？\\\").confirm(() => {\\n        deleteFile(\\\"config.json\\\");\\n        refreshPage(false);\\n        return \\\"toast://恢复完成\\\";\\n    }),\\n    col_type: \\\"text_1\\\"\\n});\\nlayout.push({\\n    title: \\\"清理缓存\\\",\\n    url: \\\"hiker://page/Setting/More.view#noRecordHistory##noHistory#?settingType=cache\\\",\\n    col_type: \\\"text_1\\\"\\n});\\nlayout.push({\\n    title: \\\"文件管理\\\",\\n    url: \\\"hiker://page/FileManagement.view#noRefresh##noRecordHistory##noHistory#\\\",\\n    col_type: \\\"text_1\\\"\\n});\\nlet tid = Date.now();\\nlayout.push({\\n    title: \\\"检测更新\\\",\\n    col_type: \\\"text_1\\\",\\n    url: $(\\\"#noLoading#\\\").lazyRule((oldVersion, tid) => {\\n        try {\\n            let newVersion = JSON.parse(request(\\\"http://hiker.nokia.press/hikerule/dev/getbyid?id=3559\\\", {\\n                timeout: 2000\\n            })).result.ver;\\n            if (newVersion <= oldVersion) {\\n                updateItem(tid + \\\"#设置_更新\\\", {\\n                    title: \\\"已经是最新版本了\\\"\\n                });\\n                return \\\"toast://已经是最新版本了\\\";\\n            } else {\\n                updateItem(tid + \\\"#设置_更新\\\", {\\n                    title: \\\"有新版本还未更新\\\"\\n                });\\n                toast(\\\"有新版本还未更新\\\");\\n                return \\\"rule://5rW36ZiU6KeG55WM77+laG9tZV9ydWxlX3VybO+/pWh0dHA6Ly9oaWtlci5ub2tpYS5wcmVzcy9oaWtlcnVsZS9ydWxlbGlzdC5qc29uP2lkPTM1NTk=\\\";\\n            }\\n        } catch (e) {\\n            updateItem(tid + \\\"#设置_更新\\\", {\\n                title: \\\"信息获取失败\\\"\\n            });\\n            return \\\"toast://更新信息获取失败\\\";\\n        }\\n    }, MY_PARAMS.version, tid),\\n    extra: {\\n        id: tid + \\\"#设置_更新\\\"\\n    }\\n});\\nlayout.push({\\n    title: \\\"关于如何调用\\\",\\n    url: \\\"mqqapi://forward/url?src_type=web&style=default&plg_auth=1&version=1&url_prefix=aHR0cHM6Ly9xdW4ucXEuY29tL3Fxd2ViL3F1bnByby9zaGFyZT9fd3Y9MyZfd3d2PTEyOCZpbnZpdGVDb2RlPTFIRnlCSiZmcm9tPTI0NjYxMCZiaXo9a2EjL291dA==\\\",\\n    desc: \\\"详细点击加入频道(快来华山与我论[ji]剑)\\\",\\n    col_type: \\\"text_1\\\"\\n});\\nlayout.push({\\n    title: \\\"问题反馈\\\",\\n    url: \\\"mqqapi://forward/url?src_type=web&style=default&plg_auth=1&version=1&url_prefix=aHR0cHM6Ly9xdW4ucXEuY29tL3Fxd2ViL3F1bnByby9zaGFyZT9fd3Y9MyZfd3d2PTEyOCZhcHBDaGFubmVsPXNoYXJlJmludml0ZUNvZGU9MVhOYWxBRXl2VmomY29udGVudElEPWMzbElQJmJ1c2luZXNzVHlwZT0yJmZyb209MTgxMDc0JmJpej1rYSZtYWluU291cmNlSWQ9c2hhcmUmc3ViU291cmNlSWQ9b3RoZXJzJmp1bXBzb3VyY2U9c2hvcnR1cmw=&t=1671893123597#Intent;scheme=mqqapi;package=com.tencent.mobileqq;end\\\",\\n    desc: \\\"绝对不会有bug(啊我不接受!)\\\",\\n    col_type: \\\"text_1\\\"\\n});\\n/*\\nlayout.push({\\n    title: \\\"清除小说分页记录\\\",\\n    url: $(\\\"确认清除小说分页记录？\\\").confirm(() => {\\n        deleteFile(\\\"novelFootprint.json\\\");\\n        return \\\"toast://清除完成\\\";\\n    }),\\n    col_type: \\\"text_1\\\"\\n});\\n*/\\nsetResult(layout);\"},{\"col_type\":\"text_1\",\"name\":\"#v.小说章节列表\",\"path\":\"NovelBrowser.view\",\"rule\":\"js:\\nif (getParam(\\\"hasParams\\\") === \\\"true\\\") {\\n    MY_PARAMS = {\\n        path: decodeURIComponent(getParam(\\\"path\\\")),\\n        name: decodeURIComponent(getParam(\\\"name\\\"))\\n    }\\n}\\nlet path = MY_PARAMS.path;\\nsetPageTitle(\\\"NV|\\\" + MY_PARAMS.name);\\nconst File = $.require(\\\"hiker://page/File.js\\\");\\nconst Tool = $.require(\\\"hiker://page/Tool.js\\\");\\nconst Config = $.require(\\\"hiker://page/Config.json\\\");\\nconst bookInfo = Object.assign({\\n    foot: 0,\\n    isReplace: true\\n}, JSON.parse(request(\\\"file://\\\" + path + \\\"/bookInfo.json\\\") || \\\"{}\\\"));\\nlet id = \\\"#\\\" + new Date().getTime();\\nvar layout = [];\\nlet mode = getMyVar(\\\".mode\\\", \\\"0\\\");\\nlet mode2 = getMyVar(\\\".mode2\\\", Config.def_isPaginate);\\n\\nlet isReverse = getMyVar(\\\".isReverse\\\", \\\"0\\\");\\naddListener(\\\"onClose\\\", $.toString(() => {\\n    clearMyVar(\\\".mode\\\");\\n    clearMyVar(\\\".mode2\\\");\\n    clearMyVar(\\\".isReverse\\\");\\n    clearMyVar(\\\".pageNum\\\");\\n}));\\n\\nfunction getTitle(title) {\\n    let titles = Tool.split(title, \\\"$\\\", 2);\\n    return titles[2] !== undefined ? titles[2].slice(0, titles[2].lastIndexOf(\\\".\\\")) : title;\\n}\\nlayout.push({\\n    title: \\\"删除整本\\\",\\n    url: $(\\\"确认删除整本小说？\\\").confirm((path) => {\\n        const File = $.require(\\\"hiker://page/File.js\\\");\\n        if (File.deleteFiles(path)) {\\n            back();\\n            return \\\"toast://删除成功\\\";\\n        } else {\\n            return \\\"toast://删除失败\\\";\\n        }\\n    }, path),\\n    col_type: \\\"text_2\\\"\\n});\\n\\nlayout.push({\\n    title: [\\\"看小说\\\", \\\"删除章节\\\"][mode],\\n    url: $(\\\"#noLoading#\\\").lazyRule((mode) => {\\n        putMyVar(\\\".mode\\\", mode === \\\"0\\\" ? \\\"1\\\" : \\\"0\\\");\\n        refreshPage(true);\\n        return \\\"hiker://empty\\\"\\n    }, mode),\\n    col_type: \\\"text_2\\\"\\n});\\n\\nlayout.push({\\n    title: \\\"‘‘更多功能 >’’\\\",\\n    url: \\\"hiker://empty\\\",\\n    col_type: \\\"scroll_button\\\"\\n});\\n\\nfunction txt(paths) {\\n    showLoading(\\\"正在合并...\\\");\\n    const File = $.require(\\\"hiker://page/File.js\\\");\\n    const Tool = $.require(\\\"hiker://page/Tool.js\\\");\\n    const Config = $.require(\\\"hiker://page/Config.json\\\");\\n\\n    let filelist = File.getFilePath(paths.path, \\\"file\\\", \\\".txt\\\");\\n    let listLength = filelist.length;\\n    if (listLength === 0) {\\n        hideLoading();\\n        return \\\"toast://空的章节\\\";\\n    }\\n    const bookInfo = Object.assign({\\n        selected: [],\\n        isReplace: true\\n    }, JSON.parse(request(\\\"file://\\\" + paths.path + \\\"/bookInfo.json\\\") || \\\"{}\\\"));\\n    let bufilelist = [];\\n    for (let i = 0; i < listLength; i++) {\\n        let file = filelist[i];\\n        let fileInfo = Tool.split(file.name, \\\"$\\\", 2);\\n        bufilelist.push({\\n            name: fileInfo[2].slice(0, fileInfo[2].lastIndexOf(\\\".\\\")),\\n            path: \\\"file://\\\" + file.path,\\n            id: Number(fileInfo[0]) || 0\\n        });\\n    }\\n    bufilelist.sort((a, b) => a.id - b.id);\\n    let entirePath = paths.path.replace(Config.novelPath, Config.novelFullPath) + \\\".txt\\\";\\n    let entirePathto = bookInfo.isReplace ? entirePath + \\\".tmp\\\" : entirePath;\\n\\n    if (fileExist(\\\"file://\\\" + entirePath)) {\\n        toast(\\\"初始化文件\\\");\\n        if (!File.deleteFiles(entirePath)) {\\n            hideLoading();\\n            return \\\"toast://初始化失败\\\";\\n        } else {\\n            toast(\\\"初始化成功\\\");\\n        }\\n    }\\n\\n    for (let i = 0; i < listLength; i++) {\\n        let item = bufilelist[i];\\n        let content = request(item.path);\\n        File.fileWriteAppend(entirePathto, item.name + \\\"\\\\n　　\\\" + content.replace(/&nbsp;/g,\\\"\\\").split(/(\\\\n|\\\\r)+/).filter(it => it.trim().length > 1).map(it=>it.trim()).join(\\\"\\\\r　　\\\") + \\\"\\\\n\\\\n\\\");\\n    }\\n    if (bookInfo.isReplace) {\\n        let ruleList = JSON.parse(readFile(\\\"replaceRule.json\\\") || \\\"[]\\\");\\n        let len = ruleList.length;\\n        let replacePattern = [\\\"replace\\\", \\\"replaceAll\\\"];\\n        let flag = File.fileRule(entirePathto, entirePath, (javaString) => {\\n            for (let i = 0; i < len; i++) {\\n                let replaceRule = ruleList[i];\\n                if (!bookInfo.selected.includes(replaceRule.id)) {\\n                    continue;\\n                }\\n                let replace = replacePattern[0 + replaceRule.isRegex];\\n                javaString = javaString[replace](replaceRule.pattern, replaceRule.replacement);\\n            }\\n            return javaString.getBytes();\\n        });\\n        if (!flag) {\\n            hideLoading();\\n            return \\\"toast://合并失败\\\";\\n        }\\n\\n    }\\n    hideLoading();\\n    return \\\"toast://合并完成\\\";\\n}\\nlayout.push({\\n    title: \\\"合并小说\\\",\\n    url: $(\\\"确定合并?\\\\n会覆盖已有TXT\\\").confirm(txt, MY_PARAMS),\\n    col_type: \\\"scroll_button\\\"\\n});\\nlayout.push({\\n    title: [\\\"☐分页\\\", \\\"☑分页\\\"][mode2],\\n    url: $(\\\"#noLoading#\\\").lazyRule((mode2) => {\\n        putMyVar(\\\".mode2\\\", mode2 === \\\"0\\\" ? \\\"1\\\" : \\\"0\\\");\\n        refreshPage(true);\\n        return \\\"hiker://empty\\\";\\n    }, mode2),\\n    col_type: \\\"scroll_button\\\"\\n});\\nlayout.push({\\n    title: \\\"净化\\\",\\n    url: \\\"hiker://page/NovelCustom.view#noRecordHistory##noHistory##noRefresh#\\\",\\n    extra: MY_PARAMS,\\n    col_type: \\\"scroll_button\\\"\\n});\\nlayout.push({\\n    title: \\\"外部查看\\\",\\n    url: $(\\\"#noLoading#\\\").lazyRule((path) => {\\n        const Config = $.require(\\\"hiker://page/Config.json\\\");\\n        let entirePath = path.replace(Config.novelPath, Config.novelFullPath) + \\\".txt\\\";\\n        if (fileExist(\\\"file://\\\" + entirePath)) {\\n            toast(\\\"调用第三方应用打开文件\\\");\\n            return \\\"openFile://file://\\\" + entirePath\\n        } else {\\n            return \\\"toast://本地暂无可供外部打开的txt文件，请先合并小说！\\\"\\n        }\\n    }, path),\\n    col_type: \\\"scroll_button\\\"\\n});\\nlayout.push({\\n    col_type: \\\"line_blank\\\"\\n});\\n\\nlet mhlist = File.getFilePath(path, \\\"file\\\", \\\".txt\\\");\\nmhlist.sort((a, b) => {\\n    a = (a.name.match(/\\\\d+/) || [])[0] || 0;\\n    b = (b.name.match(/\\\\d+/) || [])[0] || 0;\\n    return a - b;\\n});\\nlet chapterList = [];\\nlet chapterCount = mhlist.length;\\n\\nif (mode2 === \\\"1\\\") {\\n    let mhlistChunk = Tool.chunk(mhlist, Config.viewPageSize);\\n    let viewPageCount = mhlistChunk.length;\\n    let defPage = (viewPageCount - 1 < bookInfo.foot ? 0 : bookInfo.foot) || 0;\\n    let pageNum = Number(getMyVar(\\\".pageNum\\\", \\\"\\\" + defPage));\\n    chapterList = mhlistChunk[pageNum] || [];\\n    layout.push({\\n        title: \\\"““””\\\" + \\\"章节 \\\".big() + (\\\"本页:\\\" + chapterList.length + \\\" 共有:\\\" + chapterCount + \\\"章 当前:\\\" + (pageNum + 1) + \\\"/\\\" + viewPageCount).small(),\\n        url: $(\\\"#noLoading#\\\").lazyRule((isReverse) => {\\n            putMyVar(\\\".isReverse\\\", isReverse === \\\"0\\\" ? \\\"1\\\" : \\\"0\\\");\\n            refreshPage(true);\\n            return \\\"hiker://empty\\\"\\n        }, isReverse),\\n        col_type: \\\"text_1\\\"\\n    });\\n    layout.push({\\n        title: \\\"跳集\\\",\\n        url: $(chapterCount, \\\"输入跳转章节 1-\\\" + chapterCount).input((chapterCount, pageNum, viewPageSize, path) => {\\n            let inputNum = Number(input);\\n            if (Number.isNaN(inputNum) || inputNum < 0 || inputNum > chapterCount) {\\n                return \\\"toast://请输入正确范围内的数字\\\";\\n            }\\n            inputNum = Math.floor((inputNum + viewPageSize) / viewPageSize) - 1;\\n            if (pageNum === inputNum) return \\\"toast://正在当前页面\\\";\\n            putMyVar(\\\".pageNum\\\", \\\"\\\" + inputNum);\\n            const bookInfo = JSON.parse(request(\\\"file://\\\" + path + \\\"/bookInfo.json\\\") || \\\"{}\\\");\\n            bookInfo.foot = inputNum;\\n            writeFile(\\\"file://\\\" + path, JSON.stringify(bookInfo));\\n            refreshPage(false);\\n        }, chapterCount, pageNum, Config.viewPageSize, path),\\n        col_type: \\\"text_5\\\"\\n    });\\n    layout.push({\\n        title: \\\"跳页\\\",\\n        url: $(pageNum + 1, \\\"跳转页数 1-\\\" + viewPageCount).input((viewPageCount, pageNum, path) => {\\n            let inputNum = Number(input) - 1;\\n            if (Number.isNaN(inputNum) || inputNum < 0 || inputNum > viewPageCount - 1) {\\n                return \\\"toast://请输入正确范围内的数字\\\";\\n            }\\n            if (pageNum === inputNum) return \\\"toast://正在当前页面\\\";\\n            putMyVar(\\\".pageNum\\\", \\\"\\\" + inputNum);\\n            const bookInfo = JSON.parse(request(\\\"file://\\\" + path + \\\"/bookInfo.json\\\") || \\\"{}\\\");\\n            bookInfo.foot = inputNum;\\n            writeFile(\\\"file://\\\" + path + \\\"/bookInfo.json\\\", JSON.stringify(bookInfo));\\n            refreshPage(false);\\n        }, viewPageCount, pageNum, path),\\n        col_type: \\\"text_5\\\"\\n    });\\n    layout.push({\\n        title: \\\"上一页\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule((pageNum, path) => {\\n            let inputNum = pageNum - 1;\\n            if (inputNum < 0) {\\n                return \\\"toast://已经是第一页了\\\";\\n            }\\n            putMyVar(\\\".pageNum\\\", \\\"\\\" + inputNum);\\n            const bookInfo = JSON.parse(request(\\\"file://\\\" + path + \\\"/bookInfo.json\\\") || \\\"{}\\\");\\n            bookInfo.foot = inputNum;\\n            writeFile(\\\"file://\\\" + path + \\\"/bookInfo.json\\\", JSON.stringify(bookInfo));\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\";\\n        }, pageNum, path),\\n        col_type: \\\"text_5\\\"\\n    });\\n    layout.push({\\n        title: \\\"下一页\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule((viewPageCount, pageNum, path) => {\\n            let inputNum = pageNum + 1;\\n            if (inputNum > viewPageCount - 1) {\\n                return \\\"toast://已经是最后一页了\\\";\\n            }\\n            putMyVar(\\\".pageNum\\\", \\\"\\\" + inputNum);\\n            const bookInfo = JSON.parse(request(\\\"file://\\\" + path + \\\"/bookInfo.json\\\") || \\\"{}\\\");\\n            bookInfo.foot = inputNum;\\n            writeFile(\\\"file://\\\" + path + \\\"/bookInfo.json\\\", JSON.stringify(bookInfo));\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\";\\n        }, viewPageCount, pageNum, path),\\n        col_type: \\\"text_5\\\"\\n    });\\n    layout.push({\\n        title: \\\"末页\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule((viewPageCount, pageNum, path) => {\\n            let inputNum = viewPageCount - 1;\\n            if (pageNum === inputNum || inputNum === -1) {\\n                return \\\"toast://已经是最后一页了\\\";\\n            }\\n            putMyVar(\\\".pageNum\\\", \\\"\\\" + inputNum);\\n            const bookInfo = JSON.parse(request(\\\"file://\\\" + path + \\\"/bookInfo.json\\\") || \\\"{}\\\");\\n            bookInfo.foot = inputNum;\\n            writeFile(\\\"file://\\\" + path + \\\"/bookInfo.json\\\", JSON.stringify(bookInfo));\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\";\\n        }, viewPageCount, pageNum, path),\\n        col_type: \\\"text_5\\\"\\n    });\\n} else {\\n    chapterList = mhlist;\\n    layout.push({\\n        title: \\\"““””\\\" + \\\"章节 \\\".big() + (\\\"共有:\\\" + chapterCount + \\\"章\\\").small(),\\n        url: $(\\\"#noLoading#\\\").lazyRule((isReverse) => {\\n            putMyVar(\\\".isReverse\\\", isReverse === \\\"0\\\" ? \\\"1\\\" : \\\"0\\\");\\n            refreshPage(true);\\n            return \\\"hiker://empty\\\"\\n        }, isReverse),\\n        col_type: \\\"text_1\\\"\\n    });\\n}\\nlet array = [];\\nif (mode === \\\"0\\\") {\\n    for (let item of chapterList) {\\n        let name = getTitle(item.name);\\n        array.push({\\n            title: name,\\n            url: \\\"hiker://page/NovelMainBody#autoPage##readTheme#\\\",\\n            extra: {\\n                path: item.path,\\n                dirPath: path,\\n                title: name,\\n            },\\n            col_type: Config.def_View_Style\\n        });\\n    }\\n} else {\\n    for (let item of chapterList) {\\n        let name = getTitle(item.name);\\n        array.push({\\n            title: name,\\n            url: $(\\\"确认删除[\\\" + name + \\\"]？\\\").confirm((path) => {\\n                const File = $.require(\\\"hiker://page/File.js\\\");\\n                if (File.deleteFiles(path)) {\\n                    refreshPage(true);\\n                    return \\\"toast://删除成功\\\";\\n                } else {\\n                    return \\\"toast://删除失败\\\";\\n                }\\n            }, item.path),\\n            col_type: Config.def_View_Style\\n        });\\n    }\\n}\\nif (isReverse === \\\"1\\\") {\\n    array.reverse();\\n}\\nlayout.push.apply(layout, array);\\nsetResult(layout);\"},{\"col_type\":\"movie_3\",\"name\":\"#v.小说正文阅读\",\"path\":\"NovelMainBody\",\"rule\":\"js:\\nvar layout = [];\\nlet content = request(\\\"file://\\\" + MY_PARAMS.path);\\n//content = content.replace(/\\\\n|\\\\r/g, \\\"<br>\\\").replace(/(&nbsp;)+/g,\\\" \\\");\\nconst bookInfo = Object.assign({\\n    selected: [],\\n    isReplace: true\\n}, JSON.parse(request(\\\"file://\\\" + MY_PARAMS.dirPath + \\\"/bookInfo.json\\\") || \\\"{}\\\"));\\ncontent = \\\"　　\\\" + content.split(/(\\\\n|\\\\r)+/).filter(it => it.trim().length > 1).map(it=>it.trim()).join(\\\"<br>　　\\\");\\n\\nif (bookInfo.isReplace) {\\n    let javaString = java.lang.String(content);\\n    let ruleList = JSON.parse(readFile(\\\"replaceRule.json\\\") || \\\"[]\\\");\\n    let replacePattern = [\\\"replace\\\", \\\"replaceAll\\\"];\\n    for (let i = 0, len = ruleList.length; i < len; i++) {\\n        let replaceRule = ruleList[i];\\n        if (!bookInfo.selected.includes(replaceRule.id)) {\\n            continue;\\n        }\\n        let replace = replacePattern[0 + replaceRule.isRegex];\\n        javaString = javaString[replace](replaceRule.pattern, replaceRule.replacement);\\n    }\\n    content = String(javaString);\\n}\\n\\nlayout.push({\\n    col_type: \\\"rich_text\\\",\\n    title: (\\\"<strong>\\\" + MY_PARAMS.title + \\\"</strong>\\\").big(),\\n});\\n\\nlayout.push({\\n    title: content,\\n    col_type: 'rich_text',\\n    extra: {\\n        textSize: 18,\\n        click: true\\n    }\\n});\\nsetResult(layout);\"},{\"col_type\":\"text_1\",\"name\":\"#v.合并TXT\",\"path\":\"NovelCollected.view\",\"rule\":\"js:\\nconst File = $.require(\\\"hiker://page/File.js\\\");\\nconst Config = $.require(\\\"hiker://page/Config.json\\\");\\nlet rulelDir = File.getFilePath(Config.novelFullPath, \\\"dir\\\");\\nsetPageTitle(\\\"合并TXT\\\");\\nlet layout = [];\\n\\nfunction operation(path) {\\n    switch (input) {\\n        case \\\"分享\\\":\\n            return \\\"share://\\\" + path;\\n            break;\\n        case \\\"删除\\\":\\n            const File = $.require(\\\"hiker://page/File.js\\\");\\n            if (File.deleteFiles(path)) {\\n                refreshPage();\\n                return \\\"toast://删除成功\\\";\\n            } else {\\n                return \\\"toast://删除失败\\\";\\n            }\\n            break;\\n        case \\\"海阔预览\\\":\\n            return \\\"hiker://page/txtParser.view\\\";\\n            break;\\n        case \\\"打开方式\\\":\\n            return \\\"openFile://file://\\\" + path;\\n            break;\\n    }\\n}\\nfor (let rulePaths of rulelDir) {\\n    let novels = File.getFilePath(rulePaths.path, \\\"file\\\", \\\".txt\\\");\\n    for (let novel of novels) {\\n        layout.push({\\n            title: novel.name,\\n            url: $([\\\"分享\\\", \\\"删除\\\", \\\"海阔预览\\\", \\\"打开方式\\\"], 1).select(operation, novel.path),\\n            desc: \\\"来源：\\\" + rulePaths.name,\\n            col_type: \\\"text_1\\\",\\n            extra: {\\n                path: novel.path\\n            }\\n        });\\n    }\\n}\\nif (layout.length === 0) {\\n    layout.push({\\n        title: '<h1 style=\\\"text-align: center;\\\">啥都没有耶</h1>',\\n        col_type: \\\"rich_text\\\"\\n    });\\n}\\nsetResult(layout);\"},{\"col_type\":\"movie_3\",\"name\":\"#v.更多设置\",\"path\":\"Setting/More.view\",\"rule\":\"js:\\nconst File = $.require(\\\"hiker://page/File.js\\\");\\nconst Config = $.require(\\\"hiker://page/Config.json\\\");\\n\\nconst settingType = MY_PARAMS.settingType || getParam(\\\"settingType\\\");\\n\\nlet layout = [];\\nlet id = \\\"#\\\" + new Date().getTime();\\nswitch (settingType) {\\n    case \\\"cache\\\":\\n        setPageTitle(\\\"清除缓存|设置\\\");\\n        const knownList = new Map([\\n            [File.getName(Config.novelPath), \\\"#管理器#小说缓存目录[不建议清除]\\\"],\\n            [File.getName(Config.comicPath), \\\"#管理器#漫画缓存目录[不建议清除]\\\"],\\n            [File.getName(Config.externalImportPath), \\\"#管理器#导入的TXT目录[不建议清除]\\\"],\\n            [File.getName(Config.novelFullPath), \\\"#管理器#小说合并目录[可以清除]\\\"],\\n            [\\\"dr章节缓存\\\", \\\"道长模板临时缓存[建议清除]\\\"]\\n        ]);\\n\\n        let cacheDir = File.getFilePath(Config.homePath, \\\"dir\\\");\\n\\n        function cleanCache(path) {\\n            const File = $.require(\\\"hiker://page/File.js\\\");\\n            if (File.deleteFiles(path)) {\\n                refreshPage(false);\\n                return \\\"toast://清除完成\\\";\\n            } else {\\n                return \\\"toast://清除失败\\\";\\n            }\\n        }\\n        for (let cache of cacheDir) {\\n            layout.push({\\n                title: cache.name,\\n                desc: \\\"大小：\\\" + File.getFileSize(cache.path) + \\\"\\\\n描述：\\\" + (knownList.get(cache.name) || \\\"未知目录[风险未知]\\\"),\\n                col_type: \\\"text_1\\\",\\n                url: $(\\\"确认清除 \\\" + cache.name + \\\" ?\\\").confirm(cleanCache, cache.path)\\n            });\\n        }\\n        layout.push({\\n            col_type: \\\"line_blank\\\"\\n        });\\n        layout.push({\\n            title: \\\"全部清除(\\\" + File.getFileSize(Config.homePath) + \\\")\\\",\\n            col_type: \\\"text_center_1\\\",\\n            url: $(\\\"确认清除全部缓存数据?\\\").confirm(cleanCache, Config.homePath)\\n        });\\n        break;\\n    case \\\"defaultPic\\\":\\n        setPageTitle(\\\"默认封面|设置\\\");\\n        if (getMyVar(\\\":defaultPicBack\\\")) {\\n            back();\\n            clearMyVar(\\\":defaultPicBack\\\");\\n            break;\\n        }\\n\\n        function setDefaultPic(url) {\\n            let Config = JSON.parse(readFile(\\\"config.json\\\", 0) || \\\"{}\\\");\\n            Config.def_Pic = url;\\n            saveFile(\\\"config.json\\\", JSON.stringify(Config), 0);\\n            back();\\n            return \\\"toast://修改成功\\\";\\n        }\\n        let start = 1;\\n        if (typeof(MY_NAME) !== \\\"undefined\\\" && MY_NAME === \\\"嗅觉浏览器\\\") {\\n            start = 4;\\n        }\\n        for (let i = start; i <= 4; i++) {\\n            layout.push({\\n                title: \\\"图片\\\" + i,\\n                col_type: \\\"movie_3\\\",\\n                pic_url: \\\"hiker://images/home_pic\\\" + i,\\n                url: $(\\\"#noLoading#\\\").lazyRule(setDefaultPic, \\\"hiker://images/home_pic\\\" + i)\\n            });\\n        }\\n        layout.push({\\n            title: \\\"自定义➕\\\",\\n            col_type: \\\"text_3\\\",\\n            url: $([\\\"自定义url\\\", \\\"选择文件路径\\\"]).select(() => {\\n                if (input === \\\"自定义url\\\") {\\n                    return $(\\\"\\\", \\\"输入图片的路径或者链接\\\").input(() => {\\n                        let Config = JSON.parse(readFile(\\\"config.json\\\", 0) || \\\"{}\\\");\\n                        Config.def_Pic = input;\\n                        saveFile(\\\"config.json\\\", JSON.stringify(Config), 0);\\n                        back();\\n                        return \\\"toast://修改成功\\\";\\n                    });\\n                } else {\\n                    let requireUrl = \\\"http://hiker.nokia.press/hikerule/rulelist.json?id=5099\\\";\\n                    let fileSelect = require(requireUrl);\\n                    return fileSelect.fileSelectionUri({\\n                        callback: $.toString(() => {\\n                            let Config = JSON.parse(readFile(\\\"config.json\\\", 0) || \\\"{}\\\");\\n                            Config.def_Pic = \\\"file://\\\" + PATH;\\n                            saveFile(\\\"config.json\\\", JSON.stringify(Config), 0);\\n                            putMyVar(\\\":defaultPicBack\\\", \\\"true\\\");\\n                            back();\\n                            return \\\"toast://修改成功\\\";\\n                        }),\\n                        requireUrl: requireUrl,\\n                        fileType: \\\".jpg|.jpeg|.gif|.png|.svg|.bmp\\\",\\n                        onClickType: \\\"confirm\\\",\\n                        memory: \\\"selectPathCache2\\\"\\n                    });\\n                }\\n            })\\n        });\\n        break;\\n    case \\\"replaceRule\\\":\\n        if (MY_PARAMS.isRefresh) {\\n            addListener(\\\"onClose\\\", $.toString(() => refreshPage()));\\n        }\\n        setPageTitle(\\\"替换规则|设置\\\");\\n        let ruleList = JSON.parse(readFile(\\\"replaceRule.json\\\") || \\\"[]\\\");\\n        layout.push({\\n            title: \\\"新建替换\\\",\\n            url: \\\"hiker://page/editReplaceRule.view#noRecordHistory##noHistory##noRefresh#?isNew=true\\\",\\n            col_type: \\\"text_3\\\"\\n        });\\n        layout.push({\\n            title: \\\"导出规则\\\",\\n            url: $(\\\"确认导出\\\" + ruleList.length + \\\"条规则？\\\\n({homePtah}/replaceRule.json)\\\").confirm((num) => {\\n                const Config = $.require(\\\"hiker://page/Config.json\\\");\\n                let savePta = Config.homePath + \\\"/replaceRule.json\\\";\\n                writeFile(savePta, readFile(\\\"replaceRule.json\\\") || \\\"[]\\\");\\n                log(\\\"\\\\n路径：\\\" + savePta + \\\"\\\\n导出规则 \\\" + num + \\\" 条\\\");\\n                return \\\"share://\\\" + savePta;\\n            }, ruleList.length),\\n            col_type: \\\"text_3\\\"\\n        });\\n\\n        function importRule(isback) {\\n            input = typeof PATH === \\\"undefined\\\" ? input : PATH;\\n            input = input.startsWith(\\\"file://\\\") ? input : \\\"file://\\\" + input\\n            let ruleText = request(input);\\n            if (!ruleText) return \\\"toast://获取文件为空\\\";\\n            try {\\n                let newRuleList = JSON.parse(ruleText);\\n                let ruleList = JSON.parse(readFile(\\\"replaceRule.json\\\") || \\\"[]\\\");\\n                let newCount = 0,\\n                    updateCount = 0;\\n                for (let i in newRuleList) {\\n                    let newRule = newRuleList[i];\\n                    if (!newRule.hasOwnProperty(\\\"replacement\\\") || !newRule.hasOwnProperty(\\\"pattern\\\") || !newRule.hasOwnProperty(\\\"name\\\") || (newRule.scopeContent === undefined ? false : !newRule.scopeContent)) {\\n                        continue;\\n                    }\\n                    let id = newRule.id;\\n                    newRule.id = id || new Date().getTime();\\n                    let idIndex = ruleList.findIndex(rule => rule.id === id);\\n                    if (idIndex > -1) {\\n                        updateCount++;\\n                        ruleList.splice(idIndex, 1, newRule);\\n                    } else {\\n                        newCount++;\\n                        ruleList.push(newRule);\\n                    }\\n                }\\n                saveFile(\\\"replaceRule.json\\\", JSON.stringify(ruleList));\\n                if (isback) {\\n                    back();\\n                } else {\\n                    refreshPage();\\n                }\\n                log(\\\"\\\\n路径：\\\" + input + \\\"\\\\n总规则数：\\\" + newRuleList.length + \\\"\\\\n更新规则 \\\" + updateCount + \\\" 条\\\\t新增规则 \\\" + newCount + \\\" 条\\\");\\n                toast(\\\"导入成功\\\");\\n            } catch (e) {\\n                log(e.toString());\\n                if (isback) back();\\n                toast(\\\"导入失败\\\");\\n            }\\n        }\\n        layout.push({\\n            title: \\\"导入规则\\\",\\n            url: $([\\\"外部文件\\\", \\\"内部文件\\\"], 1, \\\"规则导入\\\").select((importRule) => {\\n                if (input === \\\"外部文件\\\") {\\n                    return \\\"fileSelect://\\\" + $.toString(importRule);\\n                } else {\\n                    let requireUrl = \\\"http://hiker.nokia.press/hikerule/rulelist.json?id=5099\\\";\\n                    let fileSelect = require(requireUrl);\\n                    return fileSelect.fileSelectionUri({\\n                        callback: $.toString(importRule, true),\\n                        requireUrl: requireUrl,\\n                        fileType: \\\".json\\\",\\n                        onClickType: \\\"confirm\\\",\\n                        memory: \\\"selectPathCache\\\"\\n                    });\\n                }\\n            }, importRule),\\n            col_type: \\\"text_3\\\"\\n        });\\n        layout.push({\\n            col_type: \\\"line_blank\\\"\\n        });\\n        for (let i = 0, len = ruleList.length; i < len; i++) {\\n            let replaceRule = ruleList[i];\\n            layout.push({\\n                title: replaceRule.name,\\n                col_type: \\\"text_1\\\",\\n                url: \\\"hiker://empty\\\",\\n                extra: {\\n                    cls: id + \\\".\\\" + i,\\n                    lineVisible: false\\n                }\\n            });\\n            layout.push({\\n                title: \\\"删除\\\",\\n                url: $(\\\"#noLoading#\\\").lazyRule((id, index) => {\\n                    var ruleList = JSON.parse(readFile(\\\"replaceRule.json\\\") || \\\"[]\\\");\\n                    let g = ruleList.splice(index, 1);\\n\\n                    saveFile(\\\"replaceRule.json\\\", JSON.stringify(ruleList));\\n                    //deleteItemByCls(id + \\\".\\\" + index);\\n                    refreshPage(false);\\n                    toast(\\\"删除成功\\\");\\n                    return \\\"hiker://empty\\\";\\n                }, id, i),\\n                extra: {\\n                    cls: id + \\\".\\\" + i\\n                },\\n                col_type: \\\"text_2\\\"\\n            });\\n            layout.push({\\n                title: \\\"编辑\\\",\\n                url: \\\"hiker://page/editReplaceRule.view#noRecordHistory##noHistory##noRefresh#?index=\\\" + i,\\n                col_type: \\\"text_2\\\",\\n                extra: {\\n                    cls: id + \\\".\\\" + i\\n                }\\n            });\\n            layout.push({\\n                col_type: \\\"line_blank\\\",\\n                extra: {\\n                    cls: id + \\\".\\\" + i\\n                }\\n            });\\n        }\\n        break;\\n    case \\\"contents\\\":\\n        let f = require(\\\"http://hiker.nokia.press/hikerule/rulelist.json?id=5099\\\");\\n        setPageTitle(\\\"目录设置|设置\\\");\\n        layout.push({\\n            title: \\\"选择文件夹\\\",\\n            url: JSON.stringify(f.fileSelectionUri({\\n                callback: $.toString((id) => {\\n                    let target = findItem(id).extra;\\n                    updateItem(id, {\\n                        extra: Object.assign(target, {\\n                            defaultValue: PATH\\n                        })\\n                    });\\n                    return true;\\n                }, id),\\n                initialPath: Config.homePath,\\n                requireUrl: \\\"http://hiker.nokia.press/hikerule/rulelist.json?id=5099\\\",\\n                pattern: 1\\n            })),\\n            col_type: \\\"input\\\",\\n            desc: \\\"支持hiker://files路径(该操作不会初始化目录)\\\",\\n            extra: {\\n                defaultValue: Config.homePath,\\n                onChange: $.toString((id) => {\\n                    putMyVar(id, input);\\n                }, id),\\n                id: id\\n            }\\n        });\\n        layout.push({\\n            col_type: \\\"line_blank\\\"\\n        });\\n        layout.push({\\n            title: \\\"确认\\\",\\n            url: $(\\\"#noLoading#\\\").lazyRule((id) => {\\n                let input = getMyVar(id, findItem(id).extra.defaultValue || \\\"\\\");\\n                const Config = $.require(\\\"hiker://page/Config.json\\\");\\n                if (input.startsWith(\\\"hiker://files/\\\")) input = getPath(input).slice(7);\\n                if (input.endsWith(\\\"/\\\")) input=input.replace(/\\\\/$/,\\\"\\\");\\n                if (Config.homePath == input) return \\\"toast://已经是当前目录\\\";\\n                Config = JSON.parse(readFile(\\\"config.json\\\", 0) || \\\"{}\\\");\\n                Config.homePath = input;\\n                saveFile(\\\"config.json\\\", JSON.stringify(Config), 0);\\n                back();\\n                return \\\"toast://已保存\\\";\\n            }, id),\\n            col_type: \\\"text_center_1\\\",\\n        });\\n\\n        break;\\n}\\nsetResult(layout);\"},{\"col_type\":\"movie_3\",\"name\":\"#v.编辑替换规则\",\"path\":\"editReplaceRule.view\",\"rule\":\"js:\\nconst isNew = MY_PARAMS.isNew || getParam(\\\"isNew\\\");\\nconst index = MY_PARAMS.index || Number(getParam(\\\"index\\\"));\\nlet layout = [];\\naddListener(\\\"onClose\\\", $.toString(() => {\\n    clearMyVar(\\\".editReplaceRule.name\\\");\\n    clearMyVar(\\\".editReplaceRule.isRegex\\\");\\n    clearMyVar(\\\".editReplaceRule.pattern\\\");\\n    clearMyVar(\\\".editReplaceRule.replacement\\\");\\n    clearMyVar(\\\".editReplaceRule.first\\\");\\n    //clearMyVar(\\\".editReplaceRule.scope\\\");\\n}));\\nlet ruleList = JSON.parse(readFile(\\\"replaceRule.json\\\") || \\\"[]\\\");\\nlet id = \\\"#\\\" + new Date().getTime();\\n//let replaceRule = isNew == \\\"true\\\"?{}:ruleList[index];\\nif (isNew == \\\"true\\\") {\\n    replaceRule = {\\n        id: new Date().getTime(),\\n        isRegex: false,\\n    }\\n} else {\\n    replaceRule = ruleList[index];\\n}\\n//首次初始化\\nif(getMyVar(\\\".editReplaceRule.first\\\",\\\"\\\")==\\\"\\\"){\\n    putMyVar(\\\".editReplaceRule.isRegex\\\", \\\"\\\" + replaceRule.isRegex);\\n    putMyVar(\\\".editReplaceRule.first\\\",\\\"1\\\");\\n}\\nlayout.push({\\n    title: \\\"拷贝\\\",\\n    url: $(\\\"#noLoading#\\\").lazyRule(() => {\\n        let att = [\\\"name\\\", \\\"isRegex\\\", \\\"pattern\\\", \\\"replacement\\\"];\\n        let json = {};\\n        att.forEach(key => {\\n            let value = getMyVar(\\\".editReplaceRule.\\\" + key, \\\"\\\");\\n            if (key === \\\"isRegex\\\") {\\n                value = value === \\\"true\\\" ? true : false;\\n            }\\n            json[key] = value;\\n        });\\n        copy(JSON.stringify(json));\\n        return \\\"hiker://empty\\\";\\n    }),\\n    col_type: \\\"text_2\\\"\\n});\\nlayout.push({\\n    title: \\\"粘贴\\\",\\n    url: $(\\\"{{clipboard}}\\\").input(() => {\\n        try {\\n            let json = JSON.parse(input);\\n            if (Array.isArray(json) || json.pattern == undefined) return;\\n            let att = [\\\"name\\\", \\\"isRegex\\\", \\\"pattern\\\", \\\"replacement\\\"];\\n            att.forEach(key => {\\n                putMyVar(\\\".editReplaceRule.\\\" + key, String(json[key]));\\n            });\\n            refreshPage(false);\\n        } catch (e) {\\n            log(e.toString());\\n        }\\n    }),\\n    col_type: \\\"text_2\\\"\\n});\\nlayout.push({\\n    col_type: \\\"input\\\",\\n    desc: \\\"替换规则名称\\\",\\n    extra: {\\n        titleVisible: false,\\n        defaultValue: getMyVar(\\\".editReplaceRule.name\\\", replaceRule.name),\\n        onChange: 'putMyVar(\\\".editReplaceRule.name\\\",input);'\\n    }\\n});\\n\\nlayout.push({\\n    col_type: \\\"input\\\",\\n    desc: \\\"替换规则\\\",\\n    extra: {\\n        titleVisible: false,\\n        type: \\\"textarea\\\",\\n        height: -1,\\n        defaultValue: getMyVar(\\\".editReplaceRule.pattern\\\", replaceRule.pattern),\\n        onChange: 'putMyVar(\\\".editReplaceRule.pattern\\\", input);'\\n    }\\n});\\nlayout.push({\\n    title: \\\"是否使用正则表达式：\\\" + getMyVar(\\\".editReplaceRule.isRegex\\\"),\\n    url: $(\\\"#noLoading#\\\").lazyRule((id) => {\\n        let isRegex = getMyVar(\\\".editReplaceRule.isRegex\\\") === \\\"true\\\" ? false : true;\\n        updateItem({\\n            extra: {\\n                id: id\\n            },\\n            title: \\\"是否使用正则表达式：\\\" + isRegex\\n        });\\n        putMyVar(\\\".editReplaceRule.isRegex\\\", \\\"\\\" + isRegex);\\n        return \\\"hiker://empty\\\";\\n    }, id),\\n    col_type: \\\"text_1\\\",\\n    extra: {\\n        id: id\\n    }\\n});\\nlayout.push({\\n    col_type: \\\"input\\\",\\n    desc: \\\"替换为\\\",\\n    extra: {\\n        titleVisible: false,\\n        type: \\\"textarea\\\",\\n        height: -1,\\n        defaultValue: getMyVar(\\\".editReplaceRule.replacement\\\", replaceRule.replacement),\\n        onChange: 'putMyVar(\\\".editReplaceRule.replacement\\\",input);'\\n    }\\n});\\nlayout.push({\\n    title: \\\"保存\\\",\\n    url: $(\\\"#noLoading#\\\").lazyRule((replaceRule, isNew, index) => {\\n        let pattern = getMyVar(\\\".editReplaceRule.pattern\\\", \\\"\\\");\\n        if (!pattern) {\\n            return \\\"toast://替换规则不能为空\\\";\\n        }\\n        Object.assign(replaceRule, {\\n            name: getMyVar(\\\".editReplaceRule.name\\\", \\\"\\\"),\\n            isRegex: getMyVar(\\\".editReplaceRule.isRegex\\\") === \\\"true\\\" ? true : false,\\n            pattern: pattern,\\n            replacement: getMyVar(\\\".editReplaceRule.replacement\\\", \\\"\\\")\\n        });\\n        let ruleList = JSON.parse(readFile(\\\"replaceRule.json\\\") || \\\"[]\\\");\\n        if (isNew == \\\"true\\\") {\\n            ruleList.push(replaceRule);\\n        } else {\\n            ruleList.splice(index, 1, replaceRule);\\n        }\\n        saveFile(\\\"replaceRule.json\\\", JSON.stringify(ruleList));\\n        back();\\n        return \\\"toast://保存成功\\\";\\n    }, replaceRule, isNew, index),\\n    col_type: \\\"text_center_1\\\",\\n});\\n\\n/*\\nlayout.push({\\n    col_type: \\\"input\\\",\\n    desc: \\\"替换范围\\\",\\n    extra: {\\n        titleVisible: false,\\n        type: \\\"textarea\\\",\\n        height: -1,\\n        defaultValue: \\\"\\\",\\n        onChange: 'putMyVar(\\\".editReplaceRule.scope\\\",input);'\\n    }\\n});\\n\\n*/\\nsetResult(layout);\"},{\"col_type\":\"movie_3\",\"name\":\"#v.小说个性化净化\",\"path\":\"NovelCustom.view\",\"rule\":\"js:\\nsetPageTitle(\\\"替换规则|\\\" + MY_PARAMS.name);\\nlet ruleList = JSON.parse(readFile(\\\"replaceRule.json\\\") || \\\"[]\\\");\\nlet id = \\\"#\\\" + new Date().getTime();\\n\\nconst bookInfo = Object.assign({\\n    foot: 0,\\n    isReplace: true,\\n    selected: []\\n}, JSON.parse(request(\\\"file://\\\" + MY_PARAMS.path + \\\"/bookInfo.json\\\") || \\\"{}\\\"));\\n\\nlet layout = [];\\nlayout.push({\\n    title: [\\\"☐净化\\\", \\\"☑净化\\\"][0 + bookInfo.isReplace],\\n    url: $(\\\"#noLoading#\\\").lazyRule(($id, path) => {\\n\\n        var bookInfo = JSON.parse(request(\\\"file://\\\" + path + \\\"/bookInfo.json\\\") || \\\"{}\\\");\\n        let isReplace = bookInfo.isReplace===undefined?true:bookInfo.isReplace;\\n        bookInfo.isReplace = !isReplace;\\n        writeFile(\\\"file://\\\" + path + \\\"/bookInfo.json\\\", JSON.stringify(bookInfo));\\n        updateItem($id, {\\n            title: isReplace ? \\\"☐净化\\\" : \\\"☑净化\\\",\\n        });\\n        return \\\"hiker://empty\\\";\\n    }, id + \\\"#-1\\\", MY_PARAMS.path),\\n    extra: {\\n        id: id + \\\"#-1\\\"\\n    },\\n    col_type: \\\"text_2\\\"\\n});\\nlayout.push({\\n    title: \\\"编辑规则\\\",\\n    url: \\\"hiker://page/Setting/More.view#noRecordHistory##noHistory##noRefresh#?settingType=replaceRule\\\",\\n    col_type: \\\"text_2\\\",\\n    extra:{\\n        isRefresh: true\\n    }\\n});\\nfor (let i = 0, len = ruleList.length; i < len; i++) {\\n    let replaceRule = ruleList[i];\\n    let isTrue = bookInfo.selected.includes(replaceRule.id);\\n    layout.push({\\n        title: (isTrue ? \\\"●\\\" : \\\"○\\\") + replaceRule.name,\\n        col_type: \\\"text_1\\\",\\n        url: \\\"hiker://empty\\\",\\n        y: 0,\\n        extra: {\\n            isTrue: isTrue,\\n            id: id + i,\\n            lineVisible: false\\n        }\\n    });\\n    layout.push({\\n        title: \\\"开启\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule(($id, replaceRule, path) => {\\n            if (findItem($id).extra.isTrue) {\\n                return \\\"toast://已开启\\\";\\n            }\\n            const bookInfo = Object.assign({\\n                selected: []\\n            }, JSON.parse(request(\\\"file://\\\" + path + \\\"/bookInfo.json\\\") || \\\"{}\\\"));\\n            bookInfo.selected.push(replaceRule.id);\\n            updateItem($id, {\\n                title: \\\"●\\\" + replaceRule.name,\\n                extra: {\\n                    isTrue: true,\\n                    id: $id,\\n                    lineVisible: false\\n                }\\n            });\\n            writeFile(\\\"file://\\\" + path + \\\"/bookInfo.json\\\", JSON.stringify(bookInfo));\\n            return \\\"hiker://empty\\\";\\n        }, id + i, replaceRule, MY_PARAMS.path),\\n        col_type: \\\"text_2\\\"\\n    });\\n    layout.push({\\n        title: \\\"关闭\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule(($id, replaceRule, path) => {\\n            if (!findItem($id).extra.isTrue) {\\n                return \\\"toast://已关闭\\\";\\n            }\\n            const bookInfo = Object.assign({\\n                selected: []\\n            }, JSON.parse(request(\\\"file://\\\" + path + \\\"/bookInfo.json\\\") || \\\"{}\\\"));\\n            bookInfo.selected.splice(bookInfo.selected.indexOf(replaceRule.id), 1);\\n            updateItem($id, {\\n                title: \\\"○\\\" + replaceRule.name,\\n                extra: {\\n                    isTrue: false,\\n                    id: $id,\\n                    lineVisible: false\\n                }\\n            });\\n            writeFile(\\\"file://\\\" + path + \\\"/bookInfo.json\\\", JSON.stringify(bookInfo));\\n            return \\\"hiker://empty\\\";\\n        }, id + i, replaceRule, MY_PARAMS.path),\\n        col_type: \\\"text_2\\\"\\n    });\\n    layout.push({\\n        col_type: \\\"line_blank\\\"\\n    });\\n}\\n\\nsetResult(layout);\"},{\"col_type\":\"movie_3\",\"name\":\"#v.外导小说\",\"path\":\"externalimportTxt.view\",\"rule\":\"js:\\nfunction txtView(layout) {\\n    const File = $.require(\\\"hiker://page/File.js\\\");\\n    const Config = $.require(\\\"hiker://page/Config.json\\\");\\n    let files = File.getFilePath(Config.externalImportPath);\\n    files = files.filter(v => /(\\\\.txt|\\\\.epub)$/.test(v.name));\\n\\n    setPageTitle(\\\"小说书架\\\");\\n    //let layout = [];\\n    layout.push({\\n        url: 'input?\\\"hiker://page/txtSearch.view#noRefresh#?searchTerms=\\\"+encodeURIComponent(input):\\\"toast://请输入小说名\\\"',\\n        desc: \\\"搜索\\\",\\n        title: \\\"🔍\\\",\\n        col_type: \\\"input\\\",\\n        extra: {\\n            defaultValue: getMyVar(\\\"searchKeyByTxt\\\", \\\"\\\"),\\n            onChange: \\\"putMyVar('searchKeyByTxt',input)\\\"\\n        }\\n    });\\n    layout.push({\\n        title: \\\"导入小说\\\",\\n        col_type: \\\"text_3\\\",\\n        url: $([\\\"系统选择器\\\", \\\"海阔选择器\\\"], 1, \\\"选择器类型\\\").select(() => {\\n            if (input === \\\"系统选择器\\\") {\\n                return \\\"fileSelect://\\\" + $.toString(() => {\\n                    if (!/(\\\\.txt|.epub)$/i.test(input)) {\\n                        toast(\\\"选择了错误的文件类型\\\");\\n                        return;\\n                    }\\n                    const Config = $.require(\\\"hiker://page/Config.json\\\");\\n                    let fileMatch = input.match(/\\\\/([^\\\\/]*?)(\\\\.txt|\\\\.epub)$/i);\\n                    let novelName = fileMatch[1].replace(\\\"_fileSelect_\\\", \\\"\\\");\\n                    let topath = Config.externalImportPath + novelName + fileMatch[2];\\n                    let topathCache = Config.contentsCache + novelName + fileMatch[2];\\n                    let path = input.replace(\\\"file://\\\", \\\"\\\");\\n                    if (fileExist(\\\"file://\\\" + topath)) {\\n                        confirm({\\n                            title: \\\"导入提示\\\",\\n                            content: \\\"已存在[\\\" + novelName + \\\"]是否覆盖?\\\",\\n                            confirm: $.toString((path, topath, topathCache) => {\\n                                const File = $.require(\\\"hiker://page/File.js\\\");\\n                                File.copyFile(path, topath, true);\\n                                if (fileExist(\\\"file://\\\" + topathCache)) {\\n                                    File.deleteFiles(topathCache);\\n                                }\\n                                refreshPage(false);\\n                                return \\\"toast://导入成功\\\";\\n                            }, path, topath, topathCache)\\n                        });\\n                        return;\\n                    } else {\\n                        const File = $.require(\\\"hiker://page/File.js\\\");\\n                        File.copyFile(path, topath);\\n                        if (fileExist(\\\"file://\\\" + topathCache)) {\\n                            File.deleteFiles(topathCache);\\n                        }\\n                        refreshPage(false);\\n                        toast(\\\"导入成功\\\");\\n                        return;\\n                    }\\n                });\\n            } else {\\n                let requireUrl = \\\"http://hiker.nokia.press/hikerule/rulelist.json?id=5099\\\";\\n                let fileSelect = require(requireUrl);\\n                return fileSelect.fileSelectionUri({\\n                    callback: $.toString(() => {\\n                        const Config = $.require(\\\"hiker://page/Config.json\\\");\\n                        let fileMatch = PATH.match(/\\\\/([^\\\\/]*?)(\\\\.txt|\\\\.epub)$/i);\\n                        let novelName = fileMatch[1];\\n                        let topath = Config.externalImportPath + novelName + fileMatch[2];\\n                        let topathCache = Config.contentsCache + novelName + fileMatch[2];\\n                        let path = PATH;\\n                        if (fileExist(\\\"file://\\\" + topath)) {\\n                            return $(\\\"已存在[\\\" + novelName + \\\"]是否覆盖?\\\").confirm((path, topath, topathCache) => {\\n                                const File = $.require(\\\"hiker://page/File.js\\\");\\n                                File.copyFile(path, topath, true);\\n                                if (fileExist(\\\"file://\\\" + topathCache)) {\\n                                    File.deleteFiles(topathCache);\\n                                }\\n                                back();\\n                                return \\\"toast://导入成功\\\";\\n                            }, path, topath, topathCache);\\n                        } else {\\n                            const File = $.require(\\\"hiker://page/File.js\\\");\\n                            File.copyFile(path, topath);\\n                            if (fileExist(\\\"file://\\\" + topathCache)) {\\n                                File.deleteFiles(topathCache);\\n                            }\\n                            back();\\n                            return \\\"toast://导入成功\\\";\\n                        }\\n                    }),\\n                    requireUrl: requireUrl,\\n                    fileType: \\\".txt|.epub\\\",\\n                    onClickType: \\\"confirm\\\",\\n                    memory: \\\"selectPathCache1\\\"\\n                });\\n            }\\n        }),\\n        extra: {\\n            lineVisible: false\\n        }\\n    });\\n    let options = [\\\"阅读\\\", \\\"分享\\\", \\\"删除\\\", \\\"打开方式\\\"];\\n\\n    let pattern = getMyVar(\\\":txtPattern\\\", options[0]);\\n    let id = Date.now() + \\\":模式\\\";\\n    layout.push({\\n        title: pattern,\\n        col_type: \\\"text_3\\\",\\n        url: $(options, 1, \\\"操作模式\\\").select((id) => {\\n            putMyVar(\\\":txtPattern\\\", input);\\n            updateItem(id, {\\n                title: input\\n            });\\n        }, id),\\n        extra: {\\n            id: id\\n        }\\n    });\\n    layout.push({\\n        title: \\\"文件管理\\\",\\n        col_type: \\\"text_3\\\",\\n        url: \\\"hiker://page/FileManagement.view#noRefresh##noRecordHistory##noHistory#?type=externalImportPath\\\"\\n    });\\n    layout.push({\\n        col_type: \\\"line_blank\\\"\\n    });\\n\\n    function operation(path, name, type) {\\n        let pattern = getMyVar(\\\":txtPattern\\\", \\\"阅读\\\");\\n        switch (pattern) {\\n            case \\\"分享\\\":\\n                return \\\"share://\\\" + path;\\n                break;\\n            case \\\"删除\\\":\\n                return $(\\\"确认删除[\\\" + name + \\\"]\\\").confirm((path) => {\\n                    const File = $.require(\\\"hiker://page/File.js\\\");\\n                    if (File.deleteFiles(path)) {\\n                        if (fileExist(\\\"file://\\\" + path + \\\".json\\\")) {\\n                            File.deleteFiles(path + \\\".json\\\");\\n                        }\\n                        //refreshPage();\\n                        deleteItem(path)\\n                        return \\\"toast://删除成功\\\";\\n                    } else {\\n                        return \\\"toast://删除失败\\\";\\n                    }\\n                }, path);\\n                break;\\n            case \\\"阅读\\\":\\n                return (type===\\\".txt\\\"?\\\"hiker://page/txtParser.view\\\":\\\"hiker://page/epubParser.view#autoCache#\\\")+\\\"?rule=\\\" + MY_RULE.title;\\n                break;\\n            case \\\"打开方式\\\":\\n                return \\\"openFile://file://\\\" + path;\\n                break;\\n        }\\n    }\\n\\n    for (let novel of files) {\\n        let type = novel.name.substring(novel.name.lastIndexOf(\\\".\\\"));\\n        layout.push({\\n            title: novel.name,\\n            url: $(\\\"#noLoading#\\\").lazyRule(operation, novel.path, novel.name, type),\\n            desc: \\\"大小：\\\" + File.getFileSize(novel.path) + \\\"\\\\n修改时间：\\\" + $.dateFormat(novel.lastModified, \\\"yyyy-MM-dd HH:mm:ss\\\"),\\n            col_type: \\\"text_1\\\",\\n            extra: {\\n                path: novel.path,\\n                isCache: true,\\n                title: novel.name,\\n                id: novel.path,\\n                longClick: [{\\n                    title: \\\"分享\\\",\\n                    js: JSON.stringify(\\\"share://\\\" + novel.path)\\n                }, {\\n                    title: \\\"阅读\\\",\\n                    js: JSON.stringify((type===\\\".txt\\\"?\\\"hiker://page/txtParser.view\\\":\\\"hiker://page/epubParser.view#autoCache#\\\")+\\\"?rule=\\\" + MY_RULE.title)\\n                }, {\\n                    title: \\\"打开方式\\\",\\n                    js: JSON.stringify(\\\"openFile://file://\\\" + novel.path)\\n                }, {\\n                    title: \\\"删除\\\",\\n                    js: $.toString((path) => {\\n                        return $.require(\\\"longPress.js\\\").deleteFileForTxt(path)\\n                    }, novel.path)\\n                }]\\n            }\\n        });\\n    }\\n    if (files.length === 0) {\\n        layout.push({\\n            title: \\\"设置\\\",\\n            url: \\\"hiker://page/Setting.view#noRefresh##noRecordHistory##noHistory#\\\",\\n            col_type: \\\"text_2\\\",\\n            extra: {\\n                version: MY_RULE.version\\n            }\\n        });\\n\\n        layout.push({\\n            title: \\\"““帮助””\\\",\\n            url: \\\"hiker://page/help.view#noRefresh##noRecordHistory##noHistory#?keyword=txt\\\",\\n            col_type: \\\"text_2\\\"\\n        });\\n        layout.push({\\n            title: '<h1 style=\\\"text-align: center;\\\">啥都没有耶</h1>',\\n            col_type: \\\"rich_text\\\"\\n        });\\n    }\\n    setResult(layout);\\n}\\nif ($.importParam === undefined) {\\n    $.exports = txtView;\\n} else if ($.importParam === null) {\\n    setResult(txtView([]));\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"#v.TXT解析器\",\"path\":\"txtParser.view\",\"rule\":\"js:\\n(function() {\\n    const Config = $.require(\\\"Config.json\\\");\\n    let regs = $.require(\\\"hiker://page/regularChapter.f\\\");\\n    let path = decodeURIComponent(getParam(\\\"path\\\") || \\\"\\\") || MY_PARAMS.path;\\n    let charst = decodeURIComponent(getParam(\\\"charst\\\") || \\\"\\\") || MY_PARAMS.charst || \\\"UTF-8\\\";\\n    let isCache = decodeURIComponent(getParam(\\\"isCache\\\") || \\\"\\\") || MY_PARAMS.isCache;\\n    if (!path.startsWith(\\\"file://\\\")) {\\n        path = \\\"file://\\\" + path;\\n    }\\n    if(MY_PARAMS.title){\\n        setPageTitle(MY_PARAMS.title);\\n    }else{\\n        setPageTitle($.require(\\\"hiker://page/File.js\\\").getName(path));\\n    }\\n    let layout = [];\\n    let chapterNames = [];\\n    let intervals = [];\\n    let hasPreface = false;\\n    let cachePath = path.replace(Config.externalImportPath, Config.contentsCache);\\n    if (isCache&&fileExist(cachePath)) {\\n        try {\\n\\n            let c = JSON.parse(request(cachePath));\\n            chapterNames = c.chapterNames;\\n            intervals = c.intervals;\\n            hasPreface = c.hasPreface;\\n            layout.push({\\n                title: \\\"重新解析目录\\\",\\n                col_type: \\\"text_center_1\\\",\\n                url: $(\\\"#noLoading#\\\").lazyRule((path) => {\\n                    deleteFile(path);\\n                    refreshPage();\\n                    return \\\"hiker://empty\\\";\\n                }, path+\\\".json\\\"),\\n                extra: {\\n                    lineVisible:false\\n                }\\n            });\\n            layout.push({\\n                col_type:\\\"line_blank\\\"\\n            });\\n        } catch (e) {\\n            log(e.toString());\\n            setResult([{\\n                title: \\\"““””<strong>目录解析失败(重新解析)</strong>\\\".big(),\\n                col_type: \\\"text_center_1\\\",\\n                url: $(\\\"#noLoading#\\\").lazyRule((path) => {\\n                    deleteFile(path);\\n                    refreshPage();\\n                    return \\\"hiker://empty\\\";\\n                }, path+\\\".json\\\"),\\n                extra: {\\n                    lineVisible: false\\n                }\\n            }]);\\n            return;\\n        }\\n\\n    } else {\\n        showLoading(\\\"正在解析目录\\\");\\n        let txt = request(path, {\\n            headers: {\\n                //\\\"content-type\\\": \\\"text/plain; charst=\\\" + charst\\n            }\\n        });\\n        let pattern = regs.getTocRule(txt);\\n        if (!pattern) {\\n            hideLoading();\\n            setResult([{\\n                title: \\\"““””<strong>目录解析失败</strong>\\\".big(),\\n                col_type: \\\"text_center_1\\\",\\n                url: $(\\\"#noLoading#\\\").lazyRule(() => {\\n                    back(false);\\n                    return \\\"hiker://empty\\\";\\n                }),\\n                extra: {\\n                    lineVisible: false\\n                }\\n            }]);\\n            return;\\n        }\\n        let matcher = pattern.matcher(txt);\\n        let pointer = 0;\\n        while (matcher.find()) {\\n            let start = matcher.start();\\n            let end = matcher.end();\\n            let t = matcher.group();\\n            if (pointer === 0 && start > 30) {\\n                hasPreface = true;\\n            }\\n            chapterNames.push(t);\\n            intervals.push([pointer, start]);\\n            pointer = end;\\n        }\\n        intervals.push([pointer, txt.length]);\\n        if (isCache) {\\n            writeFile(cachePath, JSON.stringify({\\n                chapterNames: chapterNames,\\n                intervals: intervals,\\n                hasPreface: hasPreface\\n            }));\\n        }\\n        hideLoading();\\n    }\\n\\n\\n    if (hasPreface) {\\n        let interval = intervals[0];\\n        layout.push({\\n            title: \\\"序言\\\",\\n            col_type: \\\"text_1\\\",\\n            url: \\\"hiker://page/TXTViewer.view#autoPage##readTheme#\\\",\\n            extra: {\\n                chapterName: \\\"序言\\\",\\n                start: interval[0],\\n                end: interval[1],\\n                path: path,\\n                charst: charst\\n            }\\n        });\\n    }\\n    for (let i = 0; i < chapterNames.length; i++) {\\n        let name = chapterNames[i];\\n        let interval = intervals[i + 1];\\n        layout.push({\\n            title: name,\\n            col_type: \\\"text_1\\\",\\n            url: \\\"hiker://page/TXTViewer.view#autoPage##readTheme#\\\",\\n            extra: {\\n                start: interval[0],\\n                end: interval[1],\\n                chapterName: name,\\n                path: path,\\n                charst: charst\\n            }\\n        });\\n    }\\n    setResult(layout);\\n})()\"},{\"col_type\":\"movie_3\",\"name\":\"#v.TXT查看器\",\"path\":\"TXTViewer.view\",\"rule\":\"js:\\nlet path = MY_PARAMS.path;\\nlet charst = MY_PARAMS.charst;\\nlet txt = request(path, {\\n    headers: {\\n       //\\\"content-type\\\": \\\"text/plain; charst=\\\" + charst\\n    }\\n});\\n\\nlet targetTexts = txt.substring(MY_PARAMS.start, MY_PARAMS.end);\\n\\nlet content = targetTexts.split(/(\\\\n|\\\\r)+/).filter(it => it.length > 1).join(\\\"<br>\\\");\\nlet layout = [];\\nlayout.push({\\n    col_type: \\\"rich_text\\\",\\n    title: (\\\"<strong>\\\" + MY_PARAMS.chapterName + \\\"</strong>\\\").big(),\\n});\\n\\nlayout.push({\\n    title: content,\\n    col_type: 'rich_text',\\n    extra: {\\n        textSize: 18,\\n        click: true\\n    }\\n});\\nsetResult(layout);\"},{\"col_type\":\"movie_3\",\"name\":\"#j.章节正则\",\"path\":\"regularChapter.f\",\"rule\":\"js:\\nlet rules = [{\\n        \\\"id\\\": -1,\\n        \\\"enable\\\": true,\\n        \\\"name\\\": \\\"目录(去空白)\\\",\\n        \\\"rule\\\": \\\"(?<=[　\\\\\\\\s])(?:序章|楔子|正文(?!完|结)|终章|后记|尾声|番外|第?\\\\\\\\s{0,4}[\\\\\\\\d〇零一二两三四五六七八九十百千万壹贰叁肆伍陆柒捌玖拾佰仟]+?\\\\\\\\s{0,4}(?:章|节(?!课)|卷|集(?![合和]))).{0,30}$\\\",\\n        \\\"example\\\": \\\"第一章 假装第一章前面有空白但我不要\\\",\\n        \\\"serialNumber\\\": 0\\n    },\\n    {\\n        \\\"id\\\": -2,\\n        \\\"enable\\\": true,\\n        \\\"name\\\": \\\"目录\\\",\\n        \\\"rule\\\": \\\"^[ 　\\\\\\\\t]{0,4}(?:序章|楔子|正文(?!完|结)|终章|后记|尾声|番外|第?\\\\\\\\s{0,4}[\\\\\\\\d〇零一二两三四五六七八九十百千万壹贰叁肆伍陆柒捌玖拾佰仟]+?\\\\\\\\s{0,4}(?:章|节(?!课)|卷|集(?![合和])|部(?![分赛游])|篇(?!张))).{0,30}$\\\",\\n        \\\"example\\\": \\\"第一章 标准的粤语就是这样\\\",\\n        \\\"serialNumber\\\": 1\\n    },\\n    {\\n        \\\"id\\\": -3,\\n        \\\"enable\\\": false,\\n        \\\"name\\\": \\\"目录(匹配简介)\\\",\\n        \\\"rule\\\": \\\"(?<=[　\\\\\\\\s])(?:(?:内容|文章)?简介|文案|前言|序章|楔子|正文(?!完|结)|终章|后记|尾声|番外|第?\\\\\\\\s{0,4}[\\\\\\\\d〇零一二两三四五六七八九十百千万壹贰叁肆伍陆柒捌玖拾佰仟]+?\\\\\\\\s{0,4}(?:章|节(?!课)|卷|集(?![合和])|部(?![分赛游])|回(?![合来事去])|场(?![和合比电是])|篇(?!张))).{0,30}$\\\",\\n        \\\"example\\\": \\\"简介 老夫诸葛村夫\\\",\\n        \\\"serialNumber\\\": 2\\n    },\\n    {\\n        \\\"id\\\": -4,\\n        \\\"enable\\\": false,\\n        \\\"name\\\": \\\"目录(古典、轻小说备用)\\\",\\n        \\\"rule\\\": \\\"^[ 　\\\\\\\\t]{0,4}(?:序章|楔子|正文(?!完|结)|终章|后记|尾声|番外|第?\\\\\\\\s{0,4}[\\\\\\\\d〇零一二两三四五六七八九十百千万壹贰叁肆伍陆柒捌玖拾佰仟]+?\\\\\\\\s{0,4}(?:章|节(?!课)|卷|集(?![合和])|部(?![分赛游])|回(?![合来事去])|场(?![和合比电是])|话|篇(?!张))).{0,30}$\\\",\\n        \\\"example\\\": \\\"第一章 比上面只多了回和话\\\",\\n        \\\"serialNumber\\\": 3\\n    },\\n    {\\n        \\\"id\\\": -5,\\n        \\\"enable\\\": false,\\n        \\\"name\\\": \\\"数字(纯数字标题)\\\",\\n        \\\"rule\\\": \\\"(?<=[　\\\\\\\\s])\\\\\\\\d+\\\\\\\\.?[ 　\\\\\\\\t]{0,4}$\\\",\\n        \\\"example\\\": \\\"12\\\",\\n        \\\"serialNumber\\\": 4\\n    },\\n    {\\n        \\\"id\\\": -6,\\n        \\\"enable\\\": false,\\n        \\\"name\\\": \\\"大写数字(纯数字标题)\\\",\\n        \\\"rule\\\": \\\"(?<=[　\\\\\\\\s])[〇零一二两三四五六七八九十百千万壹贰叁肆伍陆柒捌玖拾佰仟]{1,12}[ 　\\\\\\\\t]{0,4}$\\\",\\n        \\\"example\\\": \\\"一百七十\\\",\\n        \\\"serialNumber\\\": 4\\n    },\\n    {\\n        \\\"id\\\": -7,\\n        \\\"enable\\\": true,\\n        \\\"name\\\": \\\"数字 分隔符 标题名称\\\",\\n        \\\"rule\\\": \\\"^[ 　\\\\\\\\t]{0,4}\\\\\\\\d{1,5}[:：,.， 、_—\\\\\\\\-].{1,30}$\\\",\\n        \\\"example\\\": \\\"1、这个就是标题\\\",\\n        \\\"serialNumber\\\": 5\\n    },\\n    {\\n        \\\"id\\\": -8,\\n        \\\"enable\\\": true,\\n        \\\"name\\\": \\\"大写数字 分隔符 标题名称\\\",\\n        \\\"rule\\\": \\\"^[ 　\\\\\\\\t]{0,4}(?:序章|楔子|正文(?!完|结)|终章|后记|尾声|番外|[〇零一二两三四五六七八九十百千万壹贰叁肆伍陆柒捌玖拾佰仟]{1,8})[ 、_—\\\\\\\\-].{1,30}$\\\",\\n        \\\"example\\\": \\\"一、只有前面的数字有差别\\\",\\n        \\\"serialNumber\\\": 6\\n    },\\n    {\\n        \\\"id\\\": -9,\\n        \\\"enable\\\": true,\\n        \\\"name\\\": \\\"正文 标题/序号\\\",\\n        \\\"rule\\\": \\\"^[ 　\\\\\\\\t]{0,4}正文[ 　]{1,4}.{0,20}$\\\",\\n        \\\"example\\\": \\\"正文 我奶常山赵子龙\\\",\\n        \\\"serialNumber\\\": 7\\n    },\\n    {\\n        \\\"id\\\": -10,\\n        \\\"enable\\\": true,\\n        \\\"name\\\": \\\"Chapter/Section/Part/Episode 序号 标题\\\",\\n        \\\"rule\\\": \\\"^[ 　\\\\\\\\t]{0,4}(?:[Cc]hapter|[Ss]ection|[Pp]art|ＰＡＲＴ|[Nn][oO]\\\\\\\\.|[Ee]pisode|(?:内容|文章)?简介|文案|前言|序章|楔子|正文(?!完|结)|终章|后记|尾声|番外)\\\\\\\\s{0,4}\\\\\\\\d{1,4}.{0,30}$\\\",\\n        \\\"example\\\": \\\"Chapter 1 MyGrandmaIsNB\\\",\\n        \\\"serialNumber\\\": 8\\n    },\\n    {\\n        \\\"id\\\": -11,\\n        \\\"enable\\\": false,\\n        \\\"name\\\": \\\"Chapter(去简介)\\\",\\n        \\\"rule\\\": \\\"^[ 　\\\\\\\\t]{0,4}(?:[Cc]hapter|[Ss]ection|[Pp]art|ＰＡＲＴ|[Nn][Oo]\\\\\\\\.|[Ee]pisode)\\\\\\\\s{0,4}\\\\\\\\d{1,4}.{0,30}$\\\",\\n        \\\"example\\\": \\\"Chapter 1 MyGrandmaIsNB\\\",\\n        \\\"serialNumber\\\": 9\\n    },\\n    {\\n        \\\"id\\\": -12,\\n        \\\"enable\\\": true,\\n        \\\"name\\\": \\\"特殊符号 序号 标题\\\",\\n        \\\"rule\\\": \\\"(?<=[\\\\\\\\s　])[【〔〖「『〈［\\\\\\\\[](?:第|[Cc]hapter)[\\\\\\\\d〇零一二两三四五六七八九十百千万壹贰叁肆伍陆柒捌玖拾佰仟]{1,10}[章节].{0,20}$\\\",\\n        \\\"example\\\": \\\"【第一章 后面的符号可以没有\\\",\\n        \\\"serialNumber\\\": 10\\n    },\\n    {\\n        \\\"id\\\": -13,\\n        \\\"enable\\\": false,\\n        \\\"name\\\": \\\"特殊符号 标题(成对)\\\",\\n        \\\"rule\\\": \\\"(?<=[\\\\\\\\s　]{0,4})(?:[\\\\\\\\[〈「『〖〔《（【\\\\\\\\(].{1,30}[\\\\\\\\)】）》〕〗』」〉\\\\\\\\]]?|(?:内容|文章)?简介|文案|前言|序章|楔子|正文(?!完|结)|终章|后记|尾声|番外)[ 　]{0,4}$\\\",\\n        \\\"example\\\": \\\"『加个直角引号更专业』\\\",\\n        \\\"serialNumber\\\": 11\\n    },\\n    {\\n        \\\"id\\\": -14,\\n        \\\"enable\\\": true,\\n        \\\"name\\\": \\\"特殊符号 标题(单个)\\\",\\n        \\\"rule\\\": \\\"(?<=[\\\\\\\\s　]{0,4})(?:[☆★✦✧].{1,30}|(?:内容|文章)?简介|文案|前言|序章|楔子|正文(?!完|结)|终章|后记|尾声|番外)[ 　]{0,4}$\\\",\\n        \\\"example\\\": \\\"☆、晋江作者最喜欢的格式\\\",\\n        \\\"serialNumber\\\": 12\\n    },\\n    {\\n        \\\"id\\\": -15,\\n        \\\"enable\\\": true,\\n        \\\"name\\\": \\\"章/卷 序号 标题\\\",\\n        \\\"rule\\\": \\\"^[ \\\\\\\\t　]{0,4}(?:(?:内容|文章)?简介|文案|前言|序章|楔子|正文(?!完|结)|终章|后记|尾声|番外|[卷章][\\\\\\\\d〇零一二两三四五六七八九十百千万壹贰叁肆伍陆柒捌玖拾佰仟]{1,8})[ 　]{0,4}.{0,30}$\\\",\\n        \\\"example\\\": \\\"卷五 开源盛世\\\",\\n        \\\"serialNumber\\\": 13\\n    },\\n    {\\n        \\\"id\\\": -16,\\n        \\\"enable\\\": false,\\n        \\\"name\\\": \\\"顶格标题\\\",\\n        \\\"rule\\\": \\\"^\\\\\\\\S.{1,20}$\\\",\\n        \\\"example\\\": \\\"不超过20个字顶格写的都是标题\\\",\\n        \\\"serialNumber\\\": 14\\n    },\\n    {\\n        \\\"id\\\": -17,\\n        \\\"enable\\\": false,\\n        \\\"name\\\": \\\"双标题(前向)\\\",\\n        \\\"rule\\\": \\\"(?m)(?<=[ \\\\\\\\t　]{0,4})第[\\\\\\\\d〇零一二两三四五六七八九十百千万壹贰叁肆伍陆柒捌玖拾佰仟]{1,8}章.{0,30}$(?=[\\\\\\\\s　]{0,8}第[\\\\\\\\d零一二两三四五六七八九十百千万壹贰叁肆伍陆柒捌玖拾佰仟]{1,8}章)\\\",\\n        \\\"example\\\": \\\"第一章 真正的标题并假装换行第一章 这个不要\\\",\\n        \\\"serialNumber\\\": 15\\n    },\\n    {\\n        \\\"id\\\": -18,\\n        \\\"enable\\\": false,\\n        \\\"name\\\": \\\"双标题(后向)\\\",\\n        \\\"rule\\\": \\\"(?m)(?<=[ \\\\\\\\t　]{0,4}第[\\\\\\\\d〇零一二两三四五六七八九十百千万壹贰叁肆伍陆柒捌玖拾佰仟]{1,8}章.{0,30}$[\\\\\\\\s　]{0,8})第[\\\\\\\\d零一二两三四五六七八九十百千万壹贰叁肆伍陆柒捌玖拾佰仟]{1,8}章.{0,30}$\\\",\\n        \\\"example\\\": \\\"第一章 这个标题不要并假装换行第一章真正的标题\\\",\\n        \\\"serialNumber\\\": 16\\n    },\\n    {\\n        \\\"id\\\": -19,\\n        \\\"enable\\\": true,\\n        \\\"name\\\": \\\"书名 括号 序号\\\",\\n        \\\"rule\\\": \\\"^.{1,20}[(（][\\\\\\\\d〇零一二两三四五六七八九十百千万壹贰叁肆伍陆柒捌玖拾佰仟]{1,8}[)）][ 　\\\\t]{0,4}$\\\",\\n        \\\"example\\\": \\\"标题后面数字有括号(12)\\\",\\n        \\\"serialNumber\\\": 17\\n    },\\n    {\\n        \\\"id\\\": -20,\\n        \\\"enable\\\": true,\\n        \\\"name\\\": \\\"书名 序号\\\",\\n        \\\"rule\\\": \\\"^.{1,20}[\\\\\\\\d〇零一二两三四五六七八九十百千万壹贰叁肆伍陆柒捌玖拾佰仟]{1,8}[ 　\\\\t]{0,4}$\\\",\\n        \\\"example\\\": \\\"标题后面数字没有括号124\\\",\\n        \\\"serialNumber\\\": 18\\n    }\\n];\\nlet Matcher = java.util.regex.Matcher;\\nlet Pattern = java.util.regex.Pattern;\\n\\nfunction getTocRule(content) {\\n    let maxCs = 1;\\n    let tocPattern = null;\\n    for (let tocRule of rules) {\\n        if (!tocRule.enable) continue;\\n        let pattern = Pattern.compile(tocRule.rule, Pattern.MULTILINE);\\n        let matcher = pattern.matcher(content);\\n        let cs = 0;\\n        while (matcher.find()) {\\n            cs++;\\n        }\\n        if (cs >= maxCs) {\\n            maxCs = cs;\\n            tocPattern = pattern;\\n        }\\n    }\\n    return tocPattern;\\n}\\n$.exports.getTocRule = getTocRule;\"},{\"col_type\":\"movie_3\",\"name\":\"#V.帮助\",\"path\":\"help.view\",\"rule\":\"js:\\nlet helpText = {\\n    \\\"txt\\\": `\\n        <h1 id=\\\"txt是什么\\\">TXT是什么?</h1>\\n        <p><a href=\\\"https://baike.baidu.com/item/txt/1217330\\\">我已经帮你百度了</a>；简单来说就是一种储存小说的文件(扩展名:txt)。</p>\\n        <h1 id=\\\"如何用该小程序阅读txt小说\\\">如何用该小程序阅读txt小说?</h1>\\n        <p>在主页面 ◉TXT 界面下，点击导入TXT，选择目标小说文件(txt文件，<em>该操作不会删除txt文件，而是copy一份到小程序的路径下</em>)，导入后再在 ◉TXT 界面下选择想要阅读的小说即可。</p>\\n\\n    `,\\n    \\\"novelComic\\\": `\\n        <h1 id=\\\"这个小程序有什么用？\\\">这个小程序有什么用？</h1>\\n        <ul>\\n        <li><u>代码上为其他小程序(漫画类/小说类)提供下载接口。</u></li>\\n        <li><u>本体充当阅读器，可以浏览用该小程序提供的下载接口(上面)，下载的漫画/小说。</u></li>\\n        <li><u>提供TXT格式小说文件解析功能。</u>\\n        <h1 id=\\\"为什么列表里什么都没用\\\">为什么列表里什么都没用?</h1>\\n        <u>初次使用，没有很正常吧。🤔</u>\\n        <h1 id=\\\"该如何添加漫画或小说\\\">该如何添加漫画(或小说)?</h1>\\n        <u> 在一个有下载功能的小程序(漫画类/小说类)中下载一本漫画/小说，返回该规则即可浏览。</u></li>\\n        </ul>\\n    `\\n};\\nsetPageTitle(\\\"帮助\\\");\\nlet keyword = getParam(\\\"keyword\\\");\\nlet text;\\nif (keyword === undefined || !(text = helpText[keyword])) {\\n    setResult([{\\n        title: '<h1 style=\\\"text-align: center;\\\">资料不见咯</h1>',\\n        col_type: \\\"rich_text\\\"\\n    }]);\\n} else {\\n    setResult([{\\n        title: text,\\n        col_type: \\\"rich_text\\\"\\n    }]);\\n}\"},{\"col_type\":\"text_1\",\"name\":\"#v.外导搜索\",\"path\":\"txtSearch.view\",\"rule\":\"js:\\nconst File = $.require(\\\"hiker://page/File.js\\\");\\nconst Config = $.require(\\\"hiker://page/Config.json\\\");\\n\\nlet searchTerms = decodeURIComponent(getParam(\\\"searchTerms\\\"));\\nsetPageTitle(\\\"「\\\" + searchTerms + \\\"」的搜索结果\\\");\\nlet data = File.getFilePath(Config.externalImportPath, undefined);\\ndata = data.filter(v => /(\\\\.txt|\\\\.epub)$/.test(v.name));\\n\\nlet termsArr = searchTerms.split(\\\"\\\").map(t => t.replace(/\\\\*|\\\\.|\\\\?|\\\\+|\\\\$|\\\\^|\\\\[|\\\\]|\\\\(|\\\\)|\\\\{|\\\\}|\\\\||\\\\/|\\\\\\\\/g, k => \\\"\\\\\\\\\\\" + k));\\nlet reg = new RegExp(termsArr.join(\\\".*\\\"), \\\"i\\\");\\nlet searchResult = [];\\nfor (let txt of data) {\\n    if (reg.test(txt.name)) {\\n        let type = txt.name.substring(txt.name.lastIndexOf(\\\".\\\"));\\n        searchResult.push({\\n            title: txt.name,\\n            url: (type===\\\".txt\\\"?\\\"hiker://page/txtParser.view\\\":\\\"hiker://page/epubParser.view#autoCache#\\\")+\\\"?rule=\\\" + MY_RULE.title,\\n            desc: txt.path,\\n            extra: {\\n                path: txt.path,\\n                isCache: true,\\n                title: txt.name\\n            }\\n        });\\n    }\\n}\\nif (searchResult.length === 0) {\\n    searchResult.push({\\n        col_type: \\\"big_big_blank_block\\\",\\n    }, {\\n        col_type: \\\"big_big_blank_block\\\",\\n    }, {\\n        col_type: \\\"big_big_blank_block\\\",\\n    }, {\\n        col_type: \\\"big_big_blank_block\\\",\\n    }, {\\n        title: '<h2 style=\\\"text-align: center;\\\">🔎没有找到相关书籍</h2>',\\n        col_type: \\\"rich_text\\\"\\n    });\\n}\\nsetResult(searchResult);\"},{\"col_type\":\"movie_3\",\"name\":\"#f.长按\",\"path\":\"longPress.js\",\"rule\":\"js:\\n$.exports = {\\n    deleteFileForBook(path) {\\n        //return $(\\\"所有的 漫画/小说 章节将被删除\\\\m确认删除？\\\").confirm((path) => {\\n        const File = $.require(\\\"hiker://page/File.js\\\");\\n        if (File.deleteFiles(path)) {\\n            deleteItem(path)\\n            return \\\"toast://删除成功\\\";\\n        } else {\\n            return \\\"toast://删除失败\\\";\\n        }\\n        //}, path);\\n    },\\n    deleteFileForTxt(path) {\\n        const File = $.require(\\\"hiker://page/File.js\\\");\\n        if (File.deleteFiles(path)) {\\n            if (fileExist(\\\"file://\\\" + path + \\\".json\\\")) {\\n                File.deleteFiles(path + \\\".json\\\");\\n            }\\n            deleteItem(path);\\n            return \\\"toast://删除成功\\\";\\n        } else {\\n            return \\\"toast://删除失败\\\";\\n        }\\n    }\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"#fg.下载主程序\",\"path\":\"mainDownload\",\"rule\":\"const File = $.require(\\\"hiker://page/File.js\\\");\\nconst Config = $.require(\\\"hiker://page/Config.json\\\");\\nconst Tool = $.require(\\\"hiker://page/Tool.js\\\");\\n\\n$.exports.novel = function novel(item, info, order, MY_ID, interrupt) {\\n    let mainPath = Config.novelPath + \\\"/\\\" + info.ruleName + \\\"/\\\" + Tool.textShield(info.bookName) + \\\"/\\\";\\n    let chapterPath = mainPath + order + \\\"$A$\\\" + Tool.textShield(item.title) + \\\".txt\\\";\\n    let content = \\\"\\\";\\n    if (interrupt && getMyVar(MY_ID + \\\":status\\\", \\\"\\\") === \\\"1\\\") {\\n        return -1;\\n    }\\n    try {\\n        let getContent = new Function(\\\"input\\\", \\\"url\\\", \\\"return \\\" + info.parseCode);\\n        content = getContent(item.url, item.url) || \\\"\\\";\\n    } catch (e) {\\n        e.message = \\\"<小说正文解析错误> \\\" + e.message;\\n        throw e;\\n    }\\n    if (!content) {\\n        toast(\\\"小说为空\\\");\\n        throw new Error(\\\"<小说正文解析错误：正文返回为空>\\\");\\n    }\\n    if (info.bookTopPic) {\\n        try {\\n            let bookTopPic = Tool.hikerPic(info.bookTopPic);\\n            Tool.picDownload(bookTopPic[0], mainPath + info.bookName + \\\".jpg\\\", bookTopPic[1], info.decode);\\n\\n        } catch (e) {\\n            log(\\\"<封面下载错误> \\\" + e.message);\\n        }\\n    }\\n    File.fileWrite(chapterPath, content.replace(/<script>.*?<\\\\/script>/gmi, \\\"\\\").trimRight());\\n    //File.renameFile(chapterPath, order + \\\"$A$\\\" + item.title + \\\".txt\\\");\\n}\\n\\n$.exports.comic = function comic(item, info, order, MY_ID, interrupt) {\\n    let mainPath = Config.comicPath + \\\"/\\\" + info.ruleName + \\\"/\\\" + Tool.textShield(info.bookName) + \\\"/\\\";\\n    let chapterPath = mainPath + order + \\\"$B$\\\" + Tool.textShield(item.title) + \\\"/\\\";\\n    let picList = [];\\n    try {\\n        let getPicList = new Function(\\\"input\\\", \\\"url\\\", \\\"return\\\" + info.parseCode);\\n        picList = getPicList(item.url, item.url);\\n        if (typeof picList === \\\"string\\\") {\\n            picList = picList.replace(\\\"pics://\\\", \\\"\\\").split(\\\"&&\\\");\\n        }\\n    } catch (e) {\\n        e.message = \\\"<漫画图片解析错误> \\\" + e.message;\\n        throw e;\\n    }\\n    picList = picList.filter(p => p);\\n    const L = picList.length;\\n    if (L === 0) {\\n        toast(\\\"图片链接为空\\\");\\n        throw new Error(\\\"<漫画图片解析错误：图片链接返回为空>\\\");\\n    }\\n    if (info.bookTopPic) {\\n        try {\\n            let bookTopPic = Tool.hikerPic(info.bookTopPic);\\n            Tool.picDownload(bookTopPic[0], mainPath + info.bookName + \\\".jpg\\\", bookTopPic[1], info.decode);\\n        } catch (e) {\\n            log(\\\"<封面下载错误> \\\" + e.message);\\n        }\\n    }\\n\\n    let errorNum = 0;\\n    for (var i = 0; i < L; i++) {\\n        try {\\n            let pic = Tool.hikerPic(picList[i]);\\n            Tool.picDownload(pic[0], chapterPath + (i + 1) + \\\".jpg\\\", pic[1], info.decode);\\n            if (interrupt && getMyVar(MY_ID + \\\":status\\\", \\\"\\\") === \\\"1\\\") {\\n                return -1;\\n            }\\n            errorNum = 0;\\n        } catch (e) {\\n            if (errorNum < 10) {\\n                i--;\\n                errorNum++;\\n                continue;\\n            } else {\\n                throw e;\\n            }\\n        }\\n    }\\n\\n    File.renameFile(chapterPath, order + \\\"$A$\\\" + Tool.textShield(item.title));\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"#v.漫画兼容\",\"path\":\"comicCompatible.view\",\"rule\":\"js:\\nconst File = $.require(\\\"hiker://page/File.js\\\");\\nsetPageTitle($.log(MY_PARAMS.title));\\nlet filelist = File.getFilePath(MY_PARAMS.path);\\nlet piclist = filelist.map((item, i) => ({\\n    col_type: \\\"pic_1_full\\\",\\n    url: \\\"hiker://empty\\\",\\n    pic_url: MY_PARAMS.path + \\\"/\\\" + (i + 1) + \\\".jpg\\\"\\n}));\\n\\nsetResult(piclist);\"},{\"col_type\":\"movie_3\",\"name\":\"#v.书架\",\"path\":\"Bookrack.view\",\"rule\":\"js:\\nconst File = $.require(\\\"File.js\\\");\\nconst rank = $.require(\\\"fileRank.js\\\");\\nconst Tool = $.require(\\\"Tool.js\\\");\\nconst Config = $.require(\\\"Config.json\\\");\\n\\n(function() {\\n    let type = MY_PARAMS.type || getParam(\\\"type\\\", \\\"\\\") || \\\"comic\\\";\\n    let ruleName = Tool.textShield(MY_PARAMS.ruleName || decodeURIComponent(getParam(\\\"ruleName\\\")));\\n    if (!ruleName) {\\n        toast(\\\"请传入规则名\\\");\\n        back(false);\\n    }\\n    if (![\\\"comic\\\", \\\"novel\\\"].includes(type)) {\\n        toast(\\\"请传入正确的type:comic novel\\\");\\n        back(false);\\n    }\\n    setPageTitle(ruleName + \\\"|本地书架\\\");\\n    let layout = [];\\n    let path = Config[type + \\\"Path\\\"] + ruleName;\\n    let col_type = getItem(\\\"bookrack:col_type\\\", \\\"movie_3_marquee\\\");\\n    let rankMethod = getItem(\\\"bookrack:rankMethod\\\", \\\"系统\\\");\\n    let rankIsReverse = getItem(\\\"bookrack:rankIsReverse\\\", \\\"\\\");\\n\\n    let colTypes = [\\\"movie_1\\\", \\\"movie_2\\\", \\\"movie_3_marquee\\\", \\\"movie_1_vertical_pic\\\", \\\"pic_2\\\", \\\"pic_3\\\", \\\"pic_3_square\\\", \\\"pic_2_card\\\"];\\n    \\n    let rankMethods = [\\\"系统\\\", \\\"大小\\\", \\\"名称\\\", \\\"时间\\\"];\\n    layout.push({\\n        url: '\\\"hiker://search?s=\\\"+input',\\n        desc: \\\"搜你想要的#\\\" + type + \\\"#......\\\",\\n        title: \\\"🔍\\\",\\n        col_type: \\\"input\\\",\\n        extra: {\\n            rules: $.toString((ruleName, type) => {\\n                let arr1 = [{\\n                        \\\"title\\\": ruleName,\\n                        \\\"search_url\\\": \\\"hiker://empty?isAll=1&searchTerms=**&type=\\\" + type,\\n                        \\\"searchFind\\\": \\\"js:$.require('hiker://page/Search.view?rule='+MY_RULE._title);\\\"\\n                    }];\\n                \\n                return JSON.stringify(arr1);\\n            }, ruleName, type),\\n            /*defaultValue: getMyVar('searchKey', ''),\\n            onChange: \\\"putMyVar('searchKey',input)\\\"*/\\n        }\\n    });\\n\\n    layout.push({\\n        title: \\\"🧩\\\",\\n        col_type: \\\"flex_button\\\",\\n        url: $(colTypes.map(v=>v===col_type?\\\"““\\\"+v+\\\"””\\\":v)).select((name) => {\\n            if(/““.*?””/.test(input)) return;\\n            setItem(\\\"bookrack:col_type\\\", input);\\n            refreshPage();\\n        })\\n    });\\n    for (let name of rankMethods) {\\n        let a = rankMethod === name;\\n        let titlea = a ? \\\"‘‘\\\" + name + \\\"’’\\\" : name;\\n        let titleb = \\\"\\\";\\n        if (a) {\\n            titleb = !rankIsReverse ? \\\"↓\\\" : \\\"↑\\\";\\n        } else {\\n            titleb = \\\"↕\\\";\\n        }\\n        layout.push({\\n            title: titlea + titleb,\\n            col_type: \\\"flex_button\\\",\\n            url: $(\\\"#noLoading#\\\").lazyRule((name) => {\\n                let rankMethod = getItem(\\\"bookrack:rankMethod\\\", \\\"系统\\\");\\n                let rankIsReverse = getItem(\\\"bookrack:rankIsReverse\\\", \\\"\\\");\\n\\n                if (rankMethod === name) {\\n                    if (rankIsReverse) {\\n                        rankIsReverse = \\\"\\\";\\n                    } else {\\n                        rankIsReverse = \\\"1\\\";\\n                    }\\n\\n                    setItem(\\\"bookrack:rankIsReverse\\\", rankIsReverse);\\n                } else {\\n                    setItem(\\\"bookrack:rankIsReverse\\\", \\\"\\\");\\n                    setItem(\\\"bookrack:rankMethod\\\", name);\\n\\n                }\\n                refreshPage(false);\\n                return \\\"hiker://empty\\\";\\n            }, name)\\n        });\\n    }\\n    let rankMethodMap = {\\n        \\\"系统\\\": \\\"\\\",\\n        \\\"大小\\\": \\\"size\\\",\\n        \\\"名称\\\": \\\"name\\\",\\n        \\\"时间\\\": \\\"time\\\"\\n    };\\n    let bookList = [];\\n    let list = rank(File.getFiles(path, \\\"dir\\\"), rankMethodMap[rankMethod]);\\n    if (list.length === 0) {\\n        bookList.push({\\n            title: \\\"““””\\\" + \\\"啥都没有耶\\\".big(),\\n            url: \\\"hiker://empty\\\",\\n            col_type: \\\"text_center_1\\\",\\n            extra: {\\n                lineVisible: false\\n            }\\n        });\\n\\n    }\\n    let pageUrl = type === \\\"novel\\\" ? \\\"hiker://page/NovelBrowser.view\\\" : \\\"hiker://page/ComicBrowser.view\\\";\\n    for (let item of list) {\\n        let pic = fileExist(\\\"file://\\\" + item.getPath() + \\\"/\\\" + item.getName() + \\\".jpg\\\") ? item.getPath() + \\\"/\\\" + item.getName() + \\\".jpg\\\" : Config.def_Pic;\\n        bookList.push({\\n            title: item.getName(),\\n            pic_url: pic,\\n            url: pageUrl + \\\"?rule=\\\" + MY_RULE.title,\\n            col_type:col_type,\\n            extra: {\\n                longClick: [{\\n                    title: \\\"删除\\\",\\n                    js: $.toString((path) => {\\n                        return $.require(\\\"longPress.js\\\").deleteFileForBook(path);\\n                    }, item.getPath())\\n                }],\\n                id: item.getPath(),\\n                path: item.getPath(),\\n                name: item.getName()\\n            }\\n        });\\n    }\\n    if (rankIsReverse) {\\n        bookList.reverse();\\n    }\\n\\n    setResult(layout.concat(bookList));\\n})();\"},{\"col_type\":\"movie_3\",\"name\":\"#f.文件排序\",\"path\":\"fileRank.js\",\"rule\":\"js:\\nconst File = $.require(\\\"File.js\\\");\\nlet chnNumChar = {\\n    零: 0,\\n    一: 1,\\n    二: 2,\\n    三: 3,\\n    四: 4,\\n    五: 5,\\n    六: 6,\\n    七: 7,\\n    八: 8,\\n    九: 9\\n};\\n\\nlet chnNameValue = {\\n    十: {\\n        value: 10,\\n        secUnit: false\\n    },\\n    百: {\\n        value: 100,\\n        secUnit: false\\n    },\\n    千: {\\n        value: 1000,\\n        secUnit: false\\n    },\\n    万: {\\n        value: 10000,\\n        secUnit: true\\n    },\\n    亿: {\\n        value: 100000000,\\n        secUnit: true\\n    }\\n}\\n\\nfunction ChineseToNumber(chnStr) {\\n    let rtn = 0;\\n    let section = 0;\\n    let number = 0;\\n    let secUnit = false;\\n    let str = chnStr.split('');\\n\\n    for (let i = 0; i < str.length; i++) {\\n        let num = chnNumChar[str[i]];\\n        if (typeof num !== 'undefined') {\\n            number = num;\\n            if (i === str.length - 1) {\\n                section += number;\\n            }\\n        } else {\\n            let unit = chnNameValue[str[i]].value;\\n            secUnit = chnNameValue[str[i]].secUnit;\\n            if (secUnit) {\\n                section = (section + number) * unit;\\n                rtn += section;\\n                section = 0;\\n            } else {\\n                section += (number * unit);\\n            }\\n            number = 0;\\n        }\\n    }\\n    return rtn + section;\\n}\\n\\nfunction nameCompare(a, b) {\\n    if (a == null || b == null)\\n        return a == null ? b == null ? 0 : -1 : 1;\\n\\n    a = a.replace(/([零一二三四五六七八九十百千万亿])/g, function(match, p1, p2, p3, offset, string) {\\n        // p1 is nondigits, p2 digits, and p3 non-alphanumerics\\n        return v.ChineseToNumber(p1);\\n    })\\n    b = b.replace(/([零一二三四五六七八九十百千万亿])/g, function(match, p1, p2, p3, offset, string) {\\n        // p1 is nondigits, p2 digits, and p3 non-alphanumerics\\n        return v.ChineseToNumber(p1);\\n    })\\n\\n    let NUMBERS = java.util.regex.Pattern.compile(\\\"(?<=\\\\\\\\D)(?=\\\\\\\\d)|(?<=\\\\\\\\d)(?=\\\\\\\\D)\\\");\\n    let split1 = NUMBERS.split(new java.lang.String(a));\\n    let split2 = NUMBERS.split(new java.lang.String(b));\\n\\n    for (let i = 0; i < Math.min(split1.length, split2.length); i++) {\\n        let c1 = split1[i].charCodeAt(0);\\n        let c2 = split2[i].charCodeAt(0);\\n        let cmp = 0;\\n        let zeroCharCode = '0'.charCodeAt(0);\\n        let nineCharCode = '9'.charCodeAt(0);\\n\\n        if (c1 >= zeroCharCode && c1 <= nineCharCode && c2 >= zeroCharCode && c2 <= nineCharCode) {\\n            cmp = new java.math.BigInteger(split1[i]).compareTo(new java.math.BigInteger(split2[i]));\\n        }\\n\\n        if (cmp === 0) {\\n            let regex = /[a-zA-Z0-9]/\\n            let s1 = String(split1[i])\\n            let s2 = String(split2[i])\\n            if (regex.test(s1) || regex.test(s2)) {\\n                cmp = new java.lang.String(split1[i]).compareTo(new java.lang.String(split2[i]));\\n                // cmp = s1.localeCompare(s2, 'en')\\n            } else {\\n                cmp = s1.localeCompare(s2, 'zh')\\n            }\\n        }\\n\\n        if (cmp !== 0) {\\n            return cmp;\\n        }\\n    }\\n    let lengthCmp = split1.length - split2.length;\\n    // if (lengthCmp !== 0) lengthCmp = lengthCmp > 0 ? -1 : 1;\\n    return lengthCmp;\\n}\\n\\nfunction rank(list, m) {\\n    switch (m) {\\n        case \\\"type\\\":\\n            return list;\\n        case \\\"name\\\":\\n            return list.sort((a, b) => nameCompare(String(a.getName()), String(b.getName())));\\n        case \\\"size\\\":\\n            return list.sort((a, b) => File.getTotalSizeOfFilesInDir(a) - File.getTotalSizeOfFilesInDir(b));\\n        case \\\"time\\\":\\n            return list.sort((a, b) => a.lastModified() - b.lastModified());\\n        default:\\n            return list;\\n    }\\n\\n}\\n$.exports=rank;\"},{\"col_type\":\"movie_3\",\"name\":\"#v.epub解析器\",\"path\":\"epubParser.view\",\"rule\":\"js:\\nvar layout = [];\\nsetPageTitle(\\\"书籍信息\\\");\\nlet path = decodeURIComponent(getParam(\\\"path\\\") || \\\"\\\") || MY_PARAMS.path;\\nlet meta = getEpubMetadata(path);\\n//log(meta)\\n\\nlayout.push({\\n    title: meta.firstTitle,\\n    col_type: \\\"text_center_1\\\",\\n    url: \\\"hiker://empty\\\",\\n    extra: {\\n        lineVisible: false\\n    }\\n});\\n\\nlayout.push({\\n    title: \\\"👤作者：\\\" + meta.authors[0].lastname,\\n    col_type: \\\"rich_text\\\",\\n});\\nlet description = (meta.descriptions[0] || \\\"\\\").replace(/<p.*?>|<\\\\/p>/g, \\\"\\\");\\nlet tdescription = description;\\nif (description) {\\n    \\n    if (description.length > 50) {\\n        description = description.substring(0, 50) +\\\"......\\\" +\\\"更多>\\\".link($().b64(\\\"'\\\").rule(() => {\\n            setPageTitle(\\\"简介\\\");\\n            setResult([{\\n                title: \\\"简介：<br>　　\\\" + MY_PARAMS.text,\\n                col_type: \\\"rich_text\\\",\\n\\n            }]);\\n        }));\\n    }\\n    layout.push({\\n        title: \\\"📝简介：<br>　　\\\"+description,\\n        col_type: \\\"rich_text\\\",\\n        extra: {\\n            text: tdescription\\n        }\\n    });\\n}\\n//setPageTitle(meta.firstTitle);\\nlayout.push({\\n    col_type: \\\"line_blank\\\",\\n    url: \\\"hiker://empty\\\"\\n});\\nlet chapters = getEpubChapters(path);\\nfor (let it of chapters) {\\n    layout.push({\\n        title: it.title,\\n        url: \\\"hiker://page/epubViewer.view#readTheme##autoPage#\\\",\\n        col_type: \\\"text_1\\\",\\n        extra: {\\n            href: it.url,\\n            path: path,\\n            title: it.title\\n        }\\n    });\\n}\\nsetResult(layout);\"},{\"col_type\":\"movie_3\",\"name\":\"#v.epub查看器\",\"path\":\"epubViewer.view\",\"rule\":\"js:\\nlet path = MY_PARAMS.path;\\nlet url = MY_PARAMS.href;\\nlet c = getEpubContent(path, url);\\n//let a= c.replace(/\\\\s?<div.*?>|<\\\\/div>\\\\s?/g, \\\"\\\").replace(/\\\\s?<p.*?>(.*)<\\\\/p>\\\\s?/g, \\\"\\\\u3000\\\\u3000$1<br>\\\");\\n//let b=c.replace(/\\\\s?<div.*?>|<\\\\/div>\\\\s?/g, \\\"\\\").replace(/\\\\s?<p.*?>(.*?)<\\\\/p>\\\\s?/g, \\\"\\\\u3000\\\\u3000$1<br>\\\");\\n//log(a==b)\\n//log(getEpubContent0(path, url))\\n\\nlet layout = [];\\nlayout.push({\\n    col_type: \\\"rich_text\\\",\\n    title: (\\\"<strong>\\\" + MY_PARAMS.title + \\\"</strong>\\\").big(),\\n});\\n\\nlayout.push({\\n    title: c,\\n    col_type: 'rich_text',\\n    extra: {\\n        textSize: 18,\\n        click: true\\n    }\\n});\\nsetResult(layout);\"},{\"col_type\":\"movie_3\",\"name\":\"#v文件管理\",\"path\":\"FileManagement.view\",\"rule\":\"js:\\nconst Config = $.require(\\\"hiker://page/Config.json\\\");\\nlet url = \\\"http://hiker.nokia.press/hikerule/rulelist.json?id=5099\\\";\\nlet f = require(url);\\nlet type = getParam(\\\"type\\\", \\\"homePath\\\");\\naddListener(\\\"onClose\\\", () => {\\n    refreshPage();\\n});\\nlet hikerPath = \\\"file://\\\" + Config.homePath;\\nif(!fileExist(hikerPath)){\\n    writeFile(hikerPath+\\\"/创建目录.txt\\\",\\\"\\\");\\n    deleteFile(hikerPath+\\\"/创建目录.txt\\\");\\n}\\nf.fileSelection({\\n    callback: $.toString(() => {\\n        //根据文件扩展名，用不同小程序打开\\n        if (\\\".jpg\\\" === TYPE) {\\n            return PATH;\\n        } else if (\\\".txt\\\" === TYPE) {\\n            return \\\"hiker://page/txtParser.view?isCache=true&rule=\\\" + MY_RULE.title + \\\"&path=\\\" + PATH;\\n        } else if (\\\".epub\\\" === TYPE) {\\n            return \\\"hiker://page/epubParser.view#autoCache#?rule=\\\" + MY_RULE.title + \\\"&path=\\\" + PATH;\\n        } else {\\n            return $(\\\"无法打开，是否使用其他应用打开？\\\").confirm(path => \\\"openFile://file://\\\" + path, PATH);\\n        }\\n    }),\\n    initialPath: Config[type],\\n    rootDirPath: Config.homePath,\\n    //onClickType: \\\"confirm\\\",\\n    //memory: \\\"FileManagement:memory\\\",\\n    requireUrl: url,\\n    fileType: \\\"\\\\.txt|\\\\.epub|.jpg\\\",\\n    //cHomeTips: \\\"是否使用海阔小程序打开[${name}]?\\\",\\n    //cSearchTips: \\\"是否使用海阔小程序打开[${path}]?\\\"\\n});\"}]","proxy":"","icon":"https://lanmeiguojiang.com/tubiao/q/58.png"},{"last_chapter_rule":"","title":"Alist","author":"Joe&道长魔改","version":32,"type":"tool","url":"hiker://empty","col_type":"pic_1","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\n    var d = [];\nif (getAppVersion() < 3204) {\n    setResult([{\n        title: \"您当前版本不支持本小程序，请更新至最新版本\",\n        url: \"https://haikuo.lanzoui.com/u/GoldRiver\"\n    }])\n} else {\n    const {\n        getFiles,\n        getLink\n    } = $.require('hiker://page/api');\n    const {color,small}=$.require('hiker://page/utils');\n    var path = getMyVar(\"path\", \"\");\n    d.push({\n        title: '⚙️设置',\n        col_type: 'scroll_button',\n        url: 'hiker://page/settings#noHistory##noRecordHistory#',\n        extra: {\n            version: MY_RULE.version\n        }\n    });\n    let sub_urls = $.get_sub_urls();\n    let rstrip = $.rstrip;\n    var base_path = rstrip(getMyVar(\"baseurl\", sub_urls[0].url), '/');\n    let nowSub = sub_urls.find(x=>rstrip(x.url,'/')===base_path);\n    sub_urls.forEach((item) => {\n        var isClicked = base_path === rstrip(item.url, '/');\n        d.push({\n            title: isClicked ? \"‘‘’’<strong><font color='#1E90FF'>\" + item.name + \"</front></strong>\" : item.name,\n            url: isClicked ? base_path + path :  $(rstrip(item.url, '/')+\"#noLoading#\").lazyRule(() => {\n                input = input.split('#')[0];\n                putMyVar(\"baseurl\", input);\n                clearMyVar(\"path\");\n                refreshPage(false);\n                return \"toast://切换成功\"\n            }),\n            col_type: \"scroll_button\"\n        });\n    });\n    d.push({\n        col_type: \"blank_block\"\n    });\n    d.push({\n        title: \"‘‘’’<strong><font color='#1E90FF'>...</front></strong>\",\n        url: $('#noLoading#').lazyRule((path) => {\n            // 返回上级\n            path.pop();\n            putMyVar(\"path\", path.join(\"/\"));\n            if(getItem('clear_change','')){\n                clearMyVar('search','');\n            }\n            refreshPage(false);\n            return \"hiker://empty\"\n        }, path.split(\"/\")),\n        col_type: \"scroll_button\"\n    });\n    d.push({\n        title: \"🏠首页\",\n        col_type: \"scroll_button\",\n        url: $('#noLoading#').lazyRule(() => {\n            putMyVar(\"path\", \"\");\n            if(getItem('clear_refresh','')){\n                clearMyVar('search','');\n            }\n            refreshPage(false);\n            return \"hiker://empty\"\n        }),\n    });\n    let paths = \"\";\n    for (item of path.split(\"/\")) {\n        if (item !== \"\") {\n            paths += \"/\" + item;\n            d.push({\n                title: item,\n                col_type: \"scroll_button\",\n                url: $('#noLoading#').lazyRule((paths) => {\n                    putMyVar(\"path\", paths);\n                    if(getItem('clear_change','')){\n                        clearMyVar('search','');\n                    }\n                    refreshPage(false);\n                    return \"hiker://empty\"\n                }, paths)\n            })\n        }\n    }\n    let sorts = [\"名称\", \"类型\", \"大小\", '时间'];\n    let nsort = getMyVar('sort', '名称');\n    let nsearch = getMyVar('search','');\n    sorts.forEach(item => {\n        let cc = nsort === item + \"-\";\n        let isClicked = nsort === item;\n        d.push({\n            title: cc || isClicked ? \"‘‘’’<strong><font color='#1E90FF'>\" + item + (cc ? \"∧\" : \"∨\") + \"</front></strong>\" : item,\n            col_type: \"flex_button\",\n            url: $('#noLoading#').lazyRule((item, isClicked) => {\n                if (isClicked) {\n                    putMyVar(\"sort\", item + \"-\");\n                } else {\n                    putMyVar(\"sort\", item);\n                    if(getItem('clear_change','')){\n                        clearMyVar('search','');\n                    }\n                }\n                refreshPage(false);\n                return \"hiker://empty\"\n            }, item, isClicked)\n        });\n    });\n    let filterOption = getItem('filterOption','全部');\n    let filter_rules = JSON.parse(readFile('filter_rules.json', 0) || '[]').filter(x=>x.active);\n    let filterSels = ['全部','文件','文件夹'];\n    filterSels = filterSels.concat(filter_rules.map(x=>x.name));\n    let filterSel = filterSels.map(it=>it===filterOption?color(it,'#12b668'):it);\n    filterSel.push(color('自定义过滤','#d96715'));\n    d.push({\n        title:'⏳'+color(filterOption,'#d96715'),\n        col_type:'flex_button',\n        url:$(filterSel,2,'选择要显示的内容').select((filterOption)=>{\n            input = pdfh(input,'body&&Text').replace('““””','');\n            if(input==='自定义过滤'){\n                return 'hiker://page/superSettings#noHistory##noRecordHistory#'\n            }\n            if(filterOption!==input){\n                setItem('filterOption',input);\n                refreshPage(false);\n            }\n            return 'hiker://empty'\n        },filterOption),\n    });\n    d.push({\n        title:nsearch?\"🔍\"+small(color(':'+nsearch,'#12b668')):'🔍',\n        col_type:'flex_button',\n        url:$(nsearch,'输入要搜索的内容。支持正则。如\\\\.js').input((nsearch)=>{\n            if(input!==nsearch){\n                putMyVar('search',input);\n                refreshPage(false);\n            }\n            return 'hiker://empty'\n        },nsearch),\n    });\n    d.push({\n        title: color(\"🕓历史\",\"#d96715\"),\n        url: \"hiker://page/history#noHistory##noRecordHistory#\",\n        col_type: \"flex_button\"\n    });\n    let dirInfo = getFiles(path,filterOption);\n    if(dirInfo.can_upload){\n        d.push({\n            title: color(\"⛅访客\",\"#15ab21\"),\n            url: \"hiker://page/upload#noHistory##noRecordHistory#\",\n            col_type: \"flex_button\"\n        });\n    }\n    // log(nowSub);\n    if(path.split('/').length>1&&nowSub&&nowSub.webdav&&nowSub.webdav.user){\n        let web_dav = nowSub.webdav;\n        // log(webdav);\n        d.push({\n            title: color(\"📂创建\",\"#15ab21\"),\n            url: $('','请输入待创建的文件夹名称').input((user,pwd,base_path,path)=>{\n                if(input){\n                    let url = base_path +'/dav'+path;\n                    log(url);\n                    let webdav = buildWebDav(url, user, pwd);\n                    webdav.makeDir(input);\n                    refreshPage(false);\n                    return \"toast://文件夹\"+input+\"创建完毕\"\n                }\n                return 'hiker://empty'\n            },web_dav.user,web_dav.pwd,base_path,path),\n            col_type: \"flex_button\"\n        });\n        d.push({\n            title: color(\"☁上传\",\"#15ab21\"),\n            url: \"hiker://page/webdavUpload#noHistory##noRecordHistory#\",\n            col_type: \"flex_button\"\n        });\n    }\n    d.push({\n        title:color('🔍全局','#12b668'),\n        col_type:'flex_button',\n        url:'hiker://page/search?page=fypage#noHistory##noRecordHistory#',\n    });\n    d.push({\n        col_type: \"line_blank\"\n    });\n    let clickOption = getItem('clickOption', '打开');\n    let showZimu = getItem('showZimu','开');\n    dirInfo.result.forEach(item => {\n        if (item.url) {\n            d.push({\n                title: item.title,\n                img: item.img,\n                url: item.url,\n                col_type: item.col_type,\n            });\n        } else {\n            // let it_type = item.extra.type;\n            let it_type = item.type;\n            let url = 'hiker://empty';\n            let title = item.extra.name || item.title;\n            let id=item.extra.id;\n            if (it_type === 1) {\n                url = $('#noLoading#').lazyRule((item, title) => {\n                    putMyVar(\"path\", $.rstrip(getMyVar(\"path\", \"\"),'/' )+ \"/\" + title);\n                    if(getItem('clear_change','')){\n                        clearMyVar('search','');\n                    }\n                    refreshPage(false);\n                    return \"hiker://empty\"\n                }, item, title);\n            } else if (it_type === 3 || /\\.m3u8$/.test(title)) { //3是媒体,禁用下载和跳转\n                url = getLink(title, null,'打开', showZimu,'#isVideo=true#');\n            } else if (it_type === 6) {\n                url = getLink(title, null,'打开', showZimu,\"#.jpg\");\n            } else { //跟随系统预览和下载\n                url = getLink(title, null,clickOption,showZimu);\n            }\n            d.push({\n                title: item.title,\n                img: item.img,\n                url: url,\n                col_type: item.col_type,\n                extra: {\n                    id:id,\n                    type: it_type,\n                    title: title,\n                }\n            });\n        }\n    });\n    setResult(d);\n}","searchFind":"","search_url":"","group":"工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"$.require('hiker://page/libs?rule=道长仓库Pro');\nif (!(getAppVersion() < 3204)) {\n    const {getU}=$.require('hiker://page/api');\n    const {isOffice}=$.require('hiker://page/fileType');\n    const {similar,removeExt,saveHistory,renderText}=$.require('hiker://page/utils');\n    $.extend({\n        get_sub_urls() {\n            let sub_urls = JSON.parse(readFile('sub_urls.json', 0) || '[]');\n            if (sub_urls.length < 1) {\n                sub_urls = this.sub_urls;\n            }\n            return sub_urls\n        },\n        getU:getU,\n        isOffice:isOffice,\n        similar:similar,\n        removeExt:removeExt,\n        saveHistory:saveHistory,\n        renderText:renderText,\n        lstrip(string,char){//去除左边指定字符\n            return string.replace(new RegExp('^\\\\'+char+'+', 'g'), '');\n        },\n        rstrip(string,char){//去除右边指定字符\n            return string.replace(new RegExp('\\\\'+char+'+$', 'g'), '');\n        },\n        strip(string,char){//去除两边指定字符\n            return string.replace(new RegExp('^\\\\'+char+'+|\\\\'+char+'+$', 'g'), '');\n        },\n        getTimeOut(){\n            return Number(getItem('timeout',this.timeout+''))\n        },\n        timeout:3500,\n        sub_urls: [{\n            name: '小棉袄仓库',\n            url: 'http://pan.haikuoshijie.cn/',\n        }, {\n            name: '嗨翻',\n            url: 'https://pan.hikerfans.com/',\n        }, {\n            name: '非盘',\n            url: 'http://www.feifwp.top/',\n        }, {\n            name: '姬路白雪',\n            url: 'https://pan.jlbx.xyz/',\n        }, {\n            name: '听闻',\n            url: 'https://wangpan.sangxuesheng.com/',\n        }, {\n            name: 'Joe自用',\n            url: 'http://joegu.tk/',\n        }],\n    });\n}","pages":"[{\"col_type\":\"movie_3\",\"name\":\"代码\",\"path\":\"api\",\"rule\":\"function getFiles(path,filterOption) {\\n    let sort = getMyVar('sort', '名称');\\n    let search = getMyVar('search','');\\n    filterOption = filterOption||'全部';\\n    let result = [];\\n    let can_upload = false;\\n    let sub_urls = $.get_sub_urls();\\n    let baseurl = $.rstrip(getMyVar(\\\"baseurl\\\", sub_urls[0].url), '/');\\n    try {\\n        let password = sub_urls.find(x => x.url.includes(baseurl)).password || {};\\n        var res = JSON.parse(post(baseurl + \\\"/api/public/path\\\", {\\n            headers: {\\n                \\\"Content-Type\\\": \\\"application/json\\\"\\n            },\\n            body: JSON.stringify({\\n                path: path,\\n                password: password[path] || '',\\n            }),\\n            timeout: $.getTimeOut(),\\n        }));\\n    } catch (e) {\\n        log('获取文件列表失败:'+e.message);\\n        return {result:result,can_upload: can_upload}\\n    }\\n    const icon_dict = $.require('hiker://page/fileType').get_icon_dict();\\n    const icons = $.require('hiker://page/fileType').get_icons();\\n    const {\\n        bytesToSize,\\n        small,\\n        color,\\n        sorts,\\n        getTime\\n    } = $.require('hiker://page/utils');\\n    let showDetail = getItem('showDetail', '开') === '开';\\n    try {\\n        let msg = res.message.trim();\\n        if (msg === \\\"success\\\") {\\n            let list = res.data.files;\\n            storage0.putMyVar(\\\"now_files\\\",list);//把当前路径的文件信息储存起来,后面获取匹配字幕要用\\n            can_upload = res.data.meta.upload;\\n            if(filterOption==='文件'){\\n                list = list.filter(x=>x.type!==1)\\n            }else if(filterOption==='文件夹'){\\n                list = list.filter(x=>x.type===1)\\n            }else if(filterOption!=='全部'){\\n                let filter_rules = JSON.parse(readFile('filter_rules.json', 0) || '[]');\\n                let filter_rule = filter_rules.find(x=>x.name===filterOption);\\n                if(filter_rule&&filter_rule.rule){\\n                    if(filter_rule.rule.startsWith('!')){\\n                        list = list.filter(x=>!(new RegExp(filter_rule.rule.slice(1))).test(x.name));\\n                    }else{\\n                        list = list.filter(x=>(new RegExp(filter_rule.rule)).test(x.name));\\n                    }\\n                }\\n            }\\n\\n            if(search){\\n                list = list.filter(x=>(new RegExp(search)).test(x.name))\\n            }\\n            if (['大小', '类型', '名称', '时间'].includes(sort)) {\\n                sorts(list, sort);\\n            } else {\\n                sorts(list, sort.replace('-', '')).reverse();\\n            }\\n            list.forEach(item => {\\n                let ext = item.name.split('.').slice(-1)[0];\\n                let img = item.type === 1 ? icon_dict['1'] : (icons[ext] || icon_dict[item.type + '']);\\n                result.push({\\n                    title: item.name,\\n                    img: img,\\n                    type: item.type,\\n                    col_type: \\\"avatar\\\",\\n                    extra: {\\n                        id:baseurl+path+item.name,\\n                        type: item.type,\\n                        name:item.name,\\n                    }\\n                });\\n                if (showDetail) {\\n                    let date = getTime(item);\\n                    let size = item.size_str;\\n                    if (!size || size === \\\"\\\") {\\n                        size = item.size === 0 ? \\\"/\\\" : bytesToSize(item.size)\\n                    }\\n                    if (size && size !== \\\"\\\" && size !== 0) {\\n                        size = \\\"&nbsp;&nbsp;&nbsp;\\\" + size;\\n                    } else {\\n                        size = \\\"\\\";\\n                    }\\n                    let desc = date + size;\\n                    result.push({\\n                        type: item.type,\\n                        title: small(color(desc, '#aaaaaa')),\\n                        col_type: \\\"text_1\\\",\\n                        extra: {\\n                            id:baseurl+path+item.name,\\n                            type: item.type,\\n                            name: item.name,\\n                        }\\n                    })\\n                }\\n            });\\n        } else if (msg === \\\"Wrong password\\\") {\\n            result.push({\\n                title: \\\"点我输入密码\\\",\\n                col_type: \\\"text_1\\\",\\n                url: $(getMyVar(\\\"password\\\", \\\"\\\")).input((path, baseurl) => {\\n                    let sub_urls = $.get_sub_urls();\\n                    let idex = sub_urls.findIndex(x => x.url.includes(baseurl));\\n                    if (idex > -1) {\\n                        if (!sub_urls[idex].password) {\\n                            sub_urls[idex].password = {}\\n                        }\\n                        sub_urls[idex].password[path] = input;\\n                        saveFile('sub_urls.json', JSON.stringify(sub_urls), 0);\\n                        putMyVar(\\\"password\\\", input);\\n                        refreshPage(false);\\n                        return \\\"hiker://empty\\\"\\n                    } else {\\n                        return 'toast://未获取到链接为:' + baseurl + '的索引'\\n                    }\\n\\n                }, path, baseurl),\\n            })\\n        }\\n    } catch (e) {\\n        log('发生了错误:' + e.message);\\n        throw e\\n    }\\n    return {result:result,can_upload:can_upload}\\n}\\n\\nfunction getLink(input, path,clickOption,showZimu, ext,reload) {\\n    clickOption = clickOption || '打开';\\n    showZimu = showZimu || '开';\\n    ext = ext || false;\\n    reload = reload||false;\\n    path = (path||getMyVar(\\\"path\\\", \\\"\\\")) + \\\"/\\\";\\n    let sub_urls = $.get_sub_urls();\\n    let baseurl = $.rstrip(getMyVar(\\\"baseurl\\\", sub_urls[0].url), '/');\\n    let npath = path + input;\\n    let homeUrl='hiker://empty';\\n    if(/菜单/.test(clickOption)){\\n        homeUrl+='#noLoading#'\\n    }\\n    return $(homeUrl).lazyRule((baseurl, npath, path,clickOption,showZimu,input, ext,reload) => {\\n        const {clickLazy} = $.require('hiker://page/clickFunction');\\n        return clickLazy(baseurl, npath, path,clickOption,showZimu,input, ext,reload)\\n    }, baseurl, npath, path,clickOption,showZimu, input,ext,reload);\\n    // log('当前文件路径:'+npath);\\n}\\n\\nfunction getU(baseurl,npath,ext){\\n    try {\\n        let sub_urls = $.get_sub_urls();\\n        let password = sub_urls.find(x => x.url.includes(baseurl)).password || {};\\n        let res = JSON.parse(post(baseurl + \\\"/api/public/path\\\", {\\n            headers: {\\n                \\\"Content-Type\\\": \\\"application/json\\\"\\n            },\\n            body: JSON.stringify({\\n                path: npath,\\n                password: password[npath] || '',\\n            }),\\n            timeout: $.getTimeOut(),\\n        }));\\n        if (res.data) {\\n            let u = res.data.files[0].url;\\n            u = !/^http/.test(u) ? baseurl.split('//')[0] + u : u;\\n            if (ext) {\\n                u = u + ext;\\n            }\\n            return u\\n        }else{\\n            return \\\"toast://\\\" + res.message\\n        }\\n    }catch (e) {\\n        return 'toast://文件' + npath + '信息获取发生错误:' + e.message;\\n    }\\n}\\n\\n$.exports.getFiles = getFiles;\\n$.exports.getLink = getLink;\\n$.exports.getU = getU;\"},{\"col_type\":\"movie_3\",\"name\":\"设置\",\"path\":\"settings\",\"rule\":\"js:\\nlet d = [];\\nsetPageTitle('Alist|设置');\\nconst {color,small} = $.require('hiker://page/utils');\\nlet timeout=$.getTimeOut();\\naddListener('onClose', $.toString(() => {\\n    refreshPage(false); //刷新\\n}));\\nlet sub_urls = JSON.parse(readFile('sub_urls.json', 0) || '[]');\\nd.push({\\n    title: '基础设置 ①初始化',\\n    desc: `默认添加一些远程的alist地址方便订阅\\\\n当前共计${color(sub_urls.length,'#d96715')}条Alist订阅链接`,\\n    col_type: 'text_1',\\n    url: $('确认初始化自带的远程地址吗?将丢失自定义的内容').confirm(() => {\\n        saveFile(\\\"sub_urls.json\\\", JSON.stringify($.sub_urls), 0);\\n        refreshPage(false);\\n        return 'toast://已初始化'\\n    }),\\n});\\n\\nlet newVersion;\\nlet myVersion = MY_PARAMS.version||999;\\ntry {\\n    newVersion = JSON.parse(fetch(\\\"http://hiker.nokia.press/hikerule/dev/getbyid?id=5153\\\",{timeout:timeout})).result.ver\\n} catch (e) {\\n    toast(\\\"道长仓库抽风了，本次未检测到新版信息\\\");\\n    newVersion = myVersion;\\n}\\nlet isUpdate = Number(newVersion) <= Number(myVersion);\\nlet isVer = Number(newVersion) === Number(myVersion);\\nif(!isUpdate||!isVer){\\n    log('有新版本:'+newVersion+',当前:'+myVersion);\\n}\\nd.push({\\n    title: isUpdate ? \\\"已是最新版\\\" : \\\"🆙新版本\\\",\\n    url: \\\"rule://5rW36ZiU6KeG55WM6aaW6aG16aKR6YGT6KeE5YiZ44CQQWxpc3TjgJHvv6Vob21lX3J1bGVfdXJs77+laHR0cDovL2hpa2VyLm5va2lhLnByZXNzL2hpa2VydWxlL3J1bGVsaXN0Lmpzb24/aWQ9NTE1Mw==\\\",\\n    col_type: \\\"text_2\\\"\\n});\\n\\nd.push({\\n    title: \\\"超时毫秒:\\\" + timeout,\\n    url: $(timeout,'请输入全局接口超时毫秒时间').input(() => {\\n        if(!Number(input)){\\n            return 'toast://超时毫秒数必须是整数！'\\n        }\\n        setItem(\\\"timeout\\\",Number(input)+'');\\n        refreshPage(false);\\n        return \\\"hiker://empty\\\"\\n    }),\\n    col_type: \\\"text_2\\\"\\n});\\nlet clickOption = getItem('clickOption','打开');\\nlet showDetail = getItem('showDetail','开');\\nlet showZimu = getItem('showZimu','开');\\nlet save_mode = getItem(\\\"save_mode\\\", \\\"单个\\\");\\nlet clickSel = ['打开','下载','菜单'].map(it=>it===clickOption?color(it,'#12b668'):it);\\nd.push({\\n    title:'点击操作:'+color(clickOption,'#d96715'),\\n    col_type:'text_2',\\n    url:$(clickSel,2,'请选择点击文件执行操作').select((clickOption)=>{\\n        input = pdfh(input,'body&&Text').replace('““””','');\\n        if(clickOption!==input){\\n            setItem('clickOption',input);\\n            refreshPage(false);\\n        }\\n        return 'hiker://empty'\\n    },clickOption),\\n});\\nd.push({\\n    title: \\\"显示文件详情:\\\" + color(showDetail,'#d96715'),\\n    url: $('#noLoading#').lazyRule((showDetail) => {\\n        setItem(\\\"showDetail\\\", showDetail === \\\"开\\\" ? \\\"关\\\" : \\\"开\\\");\\n        refreshPage(false);\\n        return \\\"toast://切换成功\\\"\\n    },showDetail),\\n    col_type: \\\"text_2\\\"\\n});\\nd.push({\\n    title: \\\"外挂字幕开关:\\\" + color(showZimu,'#d96715'),\\n    url: $('#noLoading#').lazyRule((showZimu) => {\\n        setItem(\\\"showZimu\\\", showZimu === \\\"开\\\" ? \\\"关\\\" : \\\"开\\\");\\n        refreshPage(false);\\n        return \\\"toast://切换成功\\\"\\n    },showZimu),\\n    col_type: \\\"text_2\\\"\\n});\\nd.push({\\n    title: color('更多高级设置','#d96715'),\\n    url: 'hiker://page/superSettings#noHistory##noRecordHistory#',\\n    col_type: \\\"text_2\\\"\\n});\\n\\nif(save_mode!=='批量') {\\n    d.push({\\n        title: '名称',\\n        desc: '备注...',\\n        col_type: 'input',\\n        url: $.toString(() => {\\n        }),\\n        extra: {\\n            defaultValue: getMyVar('alist_name', ''),\\n            onChange: 'putMyVar(\\\"alist_name\\\",input)'\\n        }\\n    });\\n}\\nd.push({\\n    title: '链接',\\n    desc: 'alist服务的首页链接',\\n    col_type: 'input',\\n    url: $.toString(() => {\\n\\n    }),\\n    extra: {\\n        defaultValue: getMyVar('alist_url', ''),\\n        onChange: 'putMyVar(\\\"alist_url\\\",input)',\\n        height: 2,\\n        highlight: save_mode==='批量',\\n        type: \\\"textarea\\\",\\n    }\\n});\\n\\nfunction saveSub(code) {\\n    let a_name = getMyVar('alist_name', '').trim();\\n    let a_url = code||getMyVar('alist_url', '').trim();\\n    let save_mode = code?'批量':getItem(\\\"save_mode\\\", \\\"单个\\\");\\n    if(save_mode === '单个') {\\n        if (!a_name) {\\n            return 'toast://名称必填!'\\n        }\\n        if (!a_url || !/^http/.test(a_url)) {\\n            return 'toast://链接不合法!'\\n        }\\n        let sub_urls = JSON.parse(readFile('sub_urls.json', 0) || '[]');\\n        let idex = sub_urls.findIndex(it => $.rstrip(it.url,'/') === $.rstrip(a_name,'/'));\\n        if (idex > -1) {\\n            if (sub_urls[idex].url !== a_url||sub_urls[idex].name !== a_name) {\\n                sub_urls[idex].url = a_url;\\n                sub_urls[idex].name = a_name;\\n                return $('检测到本地有重复的' + a_name + ',是否覆盖?').confirm((sub_urls) => {\\n                    saveFile('sub_urls.json', JSON.stringify(sub_urls), 0);\\n                    refreshPage(false);\\n                    return 'toast://已保存'\\n                }, sub_urls)\\n            } else {\\n                return 'toast://没有操作'\\n            }\\n        } else {\\n            sub_urls.unshift({\\n                name: a_name,\\n                url: a_url,\\n            });\\n            saveFile('sub_urls.json', JSON.stringify(sub_urls), 0);\\n            refreshPage(false);\\n            return 'toast://已保存'\\n        }\\n    }else if(save_mode === '批量'){\\n        let add_data = [];\\n        try {\\n            add_data = eval(a_url);\\n            JSON.stringify(add_data);\\n        }catch (e) {\\n            return 'toast://批量添加格式有误,请参考预处理的json格式。名称重复会直接覆盖保存'\\n        }\\n        let sub_urls = JSON.parse(readFile('sub_urls.json', 0) || '[]');\\n        let sub_cnt = sub_urls.length;\\n        let new_add_data = []; // 自动去重\\n        add_data = add_data.filter(x=>x.name&&x.url);\\n        if(!Array.isArray(add_data) || add_data.length < 1){\\n            return 'toast://导入的东西看起来没对呢!'\\n        }\\n        add_data.forEach((it)=>{\\n            let idex = new_add_data.findIndex(x=>$.rstrip(x.url) === $.rstrip(it.url));\\n            idex>-1?new_add_data[idex] = it:new_add_data.unshift(it);\\n        });\\n        // log('准备新增列表:');\\n        // log(new_add_data);\\n        new_add_data.forEach((it)=>{\\n            let idex = sub_urls.findIndex(x=>$.rstrip(x.url) === $.rstrip(it.url));\\n            idex>-1?sub_urls[idex] = Object.assign(sub_urls[idex],it):sub_urls.unshift(it);\\n        });\\n        let new_cnt = sub_urls.length - sub_cnt;\\n        if(new_cnt > 0 ){\\n            saveFile('sub_urls.json', JSON.stringify(sub_urls), 0);\\n            refreshPage(false);\\n            return 'toast://已保存'+new_cnt+'条记录'\\n        }else{\\n            return 'toast://没有待保存的内容'\\n        }\\n    }\\n}\\nlet opCol = 'scroll_button';\\nd.push({\\n    title: save_mode,\\n    col_type: opCol,\\n    url: $('#noLoading#').lazyRule((save_mode) => {\\n        let next_mode = save_mode === '单个'?'批量':'单个';\\n        setItem('save_mode',next_mode);\\n        refreshPage(false);\\n        return 'toast://已切换编辑保存模式为:'+next_mode\\n    },save_mode)\\n});\\nd.push({\\n    title: '保存',\\n    col_type: opCol,\\n    url: $('#noLoading#').lazyRule((saveSub) => {\\n        return saveSub();\\n    }, saveSub)\\n});\\nd.push({\\n    title: '保存并新增',\\n    col_type: opCol,\\n    url: $('#noLoading#').lazyRule((saveSub) => {\\n        let tips = saveSub();\\n        clearMyVar(\\\"alist_name\\\");\\n        clearMyVar(\\\"alist_url\\\");\\n        refreshPage(false);\\n        return tips\\n    }, saveSub)\\n});\\nd.push({\\n    title: '导入',\\n    col_type: opCol,\\n    url: $(\\\"{{clipboard}}\\\", \\\"自动识别剪切板内容或手动输入口令\\\").input((saveSub)=>{\\n        input=input.trim();\\n        let code=input.split('\\\\n')[1];\\n        if(!/Alist订阅编码分享/.test(input)){\\n            return 'toast://导入口令有误'\\n        }\\n        try {\\n            code = base64Decode(code);\\n            log(code);\\n        }catch (e) {\\n            return 'toast://发生错误:\\\\n'+e.message;\\n        }\\n        return saveSub(code);\\n    },saveSub)\\n});\\nd.push({\\n    title: '全编码分享',\\n    col_type: opCol,\\n    url: $('#noLoading#').lazyRule(() => {\\n        let sub_urls = JSON.parse(readFile('sub_urls.json', 0) || '[]');\\n        confirm({title:'温馨提示',\\n            content:'将一键分享本地的所有订阅,是否将密码一起分享？',\\n            confirm:$.toString((sub_urls)=>{\\n                let code = 'Alist订阅编码分享 '+sub_urls[0].name+'等'+sub_urls.length+'条'+':\\\\n'+base64Encode(JSON.stringify(sub_urls));\\n                return 'copy://'+code\\n            },sub_urls),\\n            cancel:$.toString((sub_urls)=>{\\n                sub_urls = sub_urls.map((it)=>{return {name:it.name,url:it.url}});\\n                let code = 'Alist订阅编码分享 '+sub_urls[0].name+'等'+sub_urls.length+'条'+':\\\\n'+base64Encode(JSON.stringify(sub_urls));\\n                return 'copy://'+code\\n            },sub_urls)});\\n        return 'hiker://empty'\\n    }),\\n});\\nd.push({\\n    title: '全文件分享',\\n    col_type: opCol,\\n    url: $('#noLoading#').lazyRule(() => {\\n        let sub_urls = JSON.parse(readFile('sub_urls.json', 0) || '[]');\\n        let sharePath = 'hiker://files/cache/alist订阅.txt';\\n        confirm({title:'温馨提示',\\n            content:'将一键分享本地的所有订阅,是否将密码一起分享？',\\n            confirm:$.toString((sub_urls,sharePath)=>{\\n                writeFile(sharePath,JSON.stringify(sub_urls));\\n                return 'share://'+sharePath\\n            },sub_urls,sharePath),\\n            cancel:$.toString((sub_urls,sharePath)=>{\\n                sub_urls = sub_urls.map((it)=>{return {name:it.name,url:it.url}});\\n                // log(sub_urls);\\n                writeFile(sharePath,JSON.stringify(sub_urls));\\n                return 'share://'+sharePath\\n            },sub_urls,sharePath)});\\n        return 'hiker://empty'\\n    }),\\n});\\nlet subPath = `hiker://files/rules/files/${MY_RULE.title}/sub_urls.json`;\\nlet cachePath = 'hiker://files/cache/sub_urls.json';\\nd.push({\\n    title: '编辑JSON',\\n    col_type: opCol,\\n    url: $(['接着上次编辑','重新加载编辑'],1,'请选择如何编辑').select((subPath,cachePath) => {\\n        function sub_edit(subPath,cachePath,reload){\\n            reload = reload||false;\\n            if(!fileExist(cachePath)||reload){\\n                writeFile(cachePath,readFile('sub_urls.json', 0) || '[]');\\n            }\\n            let status = fetch('hiker://home@JSON编辑器');\\n            let hasJsonEditor = (status && status !== 'null');\\n            if(!hasJsonEditor){\\n                return 'editFile://'+cachePath;\\n            }else{\\n                return 'hiker://page/interface#noHistory##noRecordHistory#?rule=JSON编辑器&Json='+base64Encode(cachePath);\\n            }\\n        }\\n        if(input==='接着上次编辑'){\\n            return sub_edit(subPath,cachePath);\\n        }else if(input==='重新加载编辑'){\\n            return sub_edit(subPath,cachePath,true);\\n        }else{\\n            return 'hiker://empty'\\n        }\\n    },subPath,cachePath)\\n});\\nd.push({\\n    title:'保存本地',\\n    col_type:opCol,\\n    url:$('将JSON编辑的缓存结果保存为本地订阅?').confirm((cachePath)=>{\\n        let code = JSON.parse(fetch(cachePath));\\n        code = code.filter(x=>x.name && x.url);\\n        saveFile('sub_urls.json', JSON.stringify(code), 0);\\n        refreshPage(false);\\n        return 'toast://保存完毕'\\n    },cachePath)\\n});\\n\\nsub_urls.forEach((it, idex) => {\\n    d.push({\\n        title: it.name,\\n        desc: it.url,\\n        url: $(['置顶','删除', '修改名称','修改地址','快捷输入','密码管理','分享(含密码)','分享(无密码)'], 2, '请选择1个操作').select((it, sub_urls, idex) => {\\n            if (input === '置顶') {\\n                sub_urls.splice(idex, 1);\\n                sub_urls.unshift(it);\\n                if (getMyVar(\\\"baseurl\\\", \\\"\\\") !== it.url) {\\n                    putMyVar(\\\"baseurl\\\", it.url);\\n                    clearMyVar(\\\"path\\\");\\n                }\\n            }\\n            else if (input === '删除') {\\n                sub_urls.splice(idex, 1);\\n                if (getMyVar(\\\"baseurl\\\", \\\"\\\") === it.url) {\\n                    putMyVar(\\\"baseurl\\\", sub_urls[0].url);\\n                    clearMyVar(\\\"path\\\");\\n                }\\n            }else if (input === '修改名称') {\\n                return $(it.name,'给此订阅改个名字吧').input((sub_urls,idex)=>{\\n                    input = input.trim();\\n                    if(input){\\n                        sub_urls[idex].name = input;\\n                        saveFile('sub_urls.json', JSON.stringify(sub_urls), 0);\\n                        refreshPage(false);\\n                        return 'toast://修改成功'\\n                    }else{\\n                        return 'toast://修改失败'\\n                    }\\n                },sub_urls,idex);\\n            }else if (input === '修改地址') {\\n                return $(it.url,'给此订阅改个地址吧').input((sub_urls,idex)=>{\\n                    input = input.trim();\\n                    if(input&&/^http/.test(input)){\\n                        sub_urls[idex].url = input;\\n                        saveFile('sub_urls.json', JSON.stringify(sub_urls), 0);\\n                        refreshPage(false);\\n                        return 'toast://修改成功'\\n                    }else{\\n                        return 'toast://修改失败'\\n                    }\\n                },sub_urls,idex);\\n            } else if (input === '快捷输入') {\\n                putMyVar(\\\"alist_name\\\",it.name);\\n                putMyVar(\\\"alist_url\\\",it.url);\\n                refreshPage(false);\\n                return 'hiker://empty'\\n            }else if (input === '密码管理') {\\n                return 'hiker://page/passwordManage?idex='+idex\\n            }else if (/分享/.test(input)) {\\n                if(input.includes('无密码')){\\n                    delete it.password;\\n                }\\n                let code = 'Alist订阅编码分享 '+it.name+':\\\\n'+base64Encode(JSON.stringify([it]));\\n                return 'copy://'+code\\n            }\\n            saveFile('sub_urls.json', JSON.stringify(sub_urls), 0);\\n            refreshPage(false);\\n            return 'toast://已' + input\\n        }, it, sub_urls, idex),\\n        col_type: \\\"text_1\\\",\\n        extra:{\\n            idex:idex+''\\n        }\\n    })\\n});\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"文件类型\",\"path\":\"fileType\",\"rule\":\"const type_dict = {\\n 0: 'zip|exe|apk|crx',\\n 1: '文件夹',\\n 2: 'pdf|xls|doc',\\n 3: 'mp4|mkv|mp3|flv',\\n 4: '?',\\n 5: 'md|txt|json|js',\\n 6: 'gif|jpg|hiec',\\n}\\n\\nfunction get_icon_dict() {\\n let root = 'https://gitcode.net/qq_32394351/dr/-/raw/master/img/文件类型/';\\n return {\\n  0: root + 'zip.svg',\\n  1: root + '文件夹.svg',\\n  2: root + '文件.svg',\\n  3: root + 'mp4.svg',\\n  4: root + '文件.svg',\\n  5: root + '文件.svg',\\n  6: root + 'gif.svg',\\n }\\n}\\nlet iconStyles = [{\\n name:'默认',\\n url:'https://gitcode.net/qq_32394351/dr/-/raw/master/img/文件类型/'\\n},{\\n name:'蓝莓',\\n url:'https://gitcode.net/qq_32394351/dr/-/raw/master/img/文件类型2/'\\n}];\\nlet iconStyle = getItem('iconStyle','默认');\\nlet nowStyle = iconStyles.find(x=>x.name===iconStyle);\\nlet iconRoot = nowStyle?nowStyle.url:iconStyles[0].url;\\n\\nfunction get_icons() {\\n // let root = 'https://gitcode.net/qq_32394351/dr/-/raw/master/img/文件类型/';\\n let root = iconRoot;\\n let files = 'ai|apk|avi|css|dmg|exe|flv|gif|hiker|html|iso|jpg|js|json|log|mov|mp3|mp4|otf|php|png|ppt|psd|table|txt|wav|xls|zip|文件|文件夹'.split('|');\\n let obj = {};\\n files.forEach((it) => {\\n  obj[it] = root + it + '.svg';\\n });\\n return obj\\n}\\n\\nfunction isOffice(url){\\n let str='doc|docx|docm|dotm|dotx|xlsx|xlsb|xls|xlsm|pptx|ppsx|ppt|pps|pptm|potm|ppam|potx|ppsm'.split('|').map(it=>'\\\\\\\\.'+it+'$').join('|');\\n let mc=new RegExp(str);\\n return mc.test(url);\\n}\\n\\n$.exports.type_dict = type_dict;\\n$.exports.get_icon_dict = get_icon_dict;\\n$.exports.get_icons = get_icons;\\n$.exports.isOffice = isOffice;\\n$.exports.iconStyles = iconStyles;\"},{\"col_type\":\"movie_3\",\"name\":\"工具\",\"path\":\"utils\",\"rule\":\"function bytesToSize(size) {\\n    if (size < 0.1 * 1024) {\\n        //小于0.1KB，则转化成B\\n        size = size.toFixed(2) + \\\"B\\\";\\n    } else if (size < 0.1 * 1024 * 1024) {\\n        // 小于0.1MB，则转化成KB\\n        size = (size / 1024).toFixed(2) + \\\"KB\\\";\\n    } else if (size < 0.1 * 1024 * 1024 * 1024) {\\n        // 小于0.1GB，则转化成MB\\n        size = (size / (1024 * 1024)).toFixed(2) + \\\"MB\\\";\\n    } else {\\n        // 其他转化成GB\\n        size = (size / (1024 * 1024 * 1024)).toFixed(2) + \\\"GB\\\";\\n    }\\n    // 转成字符串\\n    let sizeStr = size + \\\"\\\",\\n        // 获取小数点处的索引\\n        index = sizeStr.indexOf(\\\".\\\"),\\n        // 获取小数点后两位的值\\n        dou = sizeStr.substr(index + 1, 2);\\n    // 判断后两位是否为00，如果是则删除00\\n    if (dou === \\\"00\\\") return sizeStr.substring(0, index) + sizeStr.substr(index + 3, 2);\\n    return size;\\n}\\n$.exports.bytesToSize = bytesToSize;\\n$.exports.color = function(text, color) {\\n    text += \\\"\\\";\\n    if (text.indexOf(\\\"““””\\\") === 0) {\\n        text.replace(\\\"““””\\\", \\\"\\\");\\n    }\\n    return \\\"““””<font color='\\\" + color + \\\"'>\\\" + text + \\\"</font>\\\";\\n}\\n\\n$.exports.sleep = function(timeout) {\\n    java.lang.Thread.sleep(timeout);\\n}\\n\\nfunction htmlTag(tag, text) {\\n    text += \\\"\\\";\\n    if (text.indexOf(\\\"““””\\\") === 0) {\\n        text.replace(\\\"““””\\\", \\\"\\\");\\n    }\\n    return \\\"““””\\\" + \\\"<\\\" + tag + \\\">\\\" + text + \\\"</\\\" + tag + \\\">\\\";\\n\\n}\\n$.exports.htmlTag = htmlTag;\\n$.exports.small = function(text) {\\n    return htmlTag(\\\"small\\\", text);\\n}\\n\\nfunction getTime(file,isStandard) {\\n    isStandard = isStandard||false;\\n    let tTime = file.updated_at || file.time_str || \\\"\\\";\\n    tTime = tTime.split(\\\"T\\\");\\n    let date = tTime[0];\\n    if(isStandard){\\n        date = date.replace(/-/g,\\\"/\\\");\\n    }\\n    tTime = tTime[1].split(/Z|\\\\./);\\n    date += \\\" \\\" + tTime[0];\\n    return date;\\n}\\nfunction getTimeInt(timeStr){\\n    return (new Date(timeStr)).getTime()\\n}\\n$.exports.getTime = getTime;\\n\\nlet chnNumChar = {\\n    零: 0,\\n    一: 1,\\n    二: 2,\\n    三: 3,\\n    四: 4,\\n    五: 5,\\n    六: 6,\\n    七: 7,\\n    八: 8,\\n    九: 9\\n};\\n\\nlet chnNameValue = {\\n    十: {\\n        value: 10,\\n        secUnit: false\\n    },\\n    百: {\\n        value: 100,\\n        secUnit: false\\n    },\\n    千: {\\n        value: 1000,\\n        secUnit: false\\n    },\\n    万: {\\n        value: 10000,\\n        secUnit: true\\n    },\\n    亿: {\\n        value: 100000000,\\n        secUnit: true\\n    }\\n}\\n\\nfunction ChineseToNumber(chnStr) {\\n    let rtn = 0;\\n    let section = 0;\\n    let number = 0;\\n    let secUnit = false;\\n    let str = chnStr.split('');\\n\\n    for (let i = 0; i < str.length; i++) {\\n        let num = chnNumChar[str[i]];\\n        if (typeof num !== 'undefined') {\\n            number = num;\\n            if (i === str.length - 1) {\\n                section += number;\\n            }\\n        } else {\\n            let unit = chnNameValue[str[i]].value;\\n            secUnit = chnNameValue[str[i]].secUnit;\\n            if (secUnit) {\\n                section = (section + number) * unit;\\n                rtn += section;\\n                section = 0;\\n            } else {\\n                section += (number * unit);\\n            }\\n            number = 0;\\n        }\\n    }\\n    return rtn + section;\\n}\\n\\nfunction nameCompare(a, b) {\\n    if (a == null || b == null)\\n        return a == null ? b == null ? 0 : -1 : 1;\\n\\n    a = a.replace(/([零一二三四五六七八九十百千万亿])/g, function(match, p1, p2, p3, offset, string) {\\n        // p1 is nondigits, p2 digits, and p3 non-alphanumerics\\n        return ChineseToNumber(p1);\\n    })\\n    b = b.replace(/([零一二三四五六七八九十百千万亿])/g, function(match, p1, p2, p3, offset, string) {\\n        // p1 is nondigits, p2 digits, and p3 non-alphanumerics\\n        return ChineseToNumber(p1);\\n    })\\n\\n    let NUMBERS = java.util.regex.Pattern.compile(\\\"(?<=\\\\\\\\D)(?=\\\\\\\\d)|(?<=\\\\\\\\d)(?=\\\\\\\\D)\\\")\\n    let split1 = NUMBERS.split(new java.lang.String(a));\\n    let split2 = NUMBERS.split(new java.lang.String(b));\\n\\n    for (let i = 0; i < Math.min(split1.length, split2.length); i++) {\\n        let c1 = split1[i].charCodeAt(0);\\n        let c2 = split2[i].charCodeAt(0);\\n        let cmp = 0;\\n        let zeroCharCode = '0'.charCodeAt(0);\\n        let nineCharCode = '9'.charCodeAt(0);\\n\\n        if (c1 >= zeroCharCode && c1 <= nineCharCode && c2 >= zeroCharCode && c2 <= nineCharCode) {\\n            cmp = new java.math.BigInteger(split1[i]).compareTo(new java.math.BigInteger(split2[i]));\\n        }\\n\\n        if (cmp === 0) {\\n            let regex = /[a-zA-Z0-9]/\\n            let s1 = String(split1[i])\\n            let s2 = String(split2[i])\\n            if (regex.test(s1) || regex.test(s2)) {\\n                cmp = new java.lang.String(split1[i]).compareTo(new java.lang.String(split2[i]));\\n                // cmp = s1.localeCompare(s2, 'en')\\n            } else {\\n                cmp = s1.localeCompare(s2, 'zh')\\n            }\\n        }\\n\\n        if (cmp !== 0) {\\n            return cmp;\\n        }\\n    }\\n    let lengthCmp = split1.length - split2.length;\\n    // if (lengthCmp !== 0) lengthCmp = lengthCmp > 0 ? -1 : 1;\\n    return lengthCmp;\\n}\\n\\n$.exports.sorts = function(list, sort) {\\n    if (sort === \\\"类型\\\") {\\n        // log(\\\"类型排序\\\");\\n        list.sort(function(a, b) {\\n            return a.type - b.type\\n        });\\n    } else if (sort === \\\"名称\\\") {\\n        // log(\\\"名称排序\\\");\\n        // list.sort(function(a, b) {\\n        //     return a.name.localeCompare(b.name, \\\"zh\\\")\\n        // });\\n        list.sort(function(a, b) {\\n            return nameCompare(a.name||a.title, b.name||b.title);\\n        });\\n    } else if (sort === \\\"大小\\\") {\\n        // log(\\\"大小排序\\\");\\n        list.sort(function(a, b) {\\n            return (a.size || Number(a.size_str) || 0) - (b.size || Number(b.size_str) || 0);\\n        });\\n    }else if (sort === \\\"时间\\\") {\\n        // log(\\\"时间排序\\\");\\n        list.sort(function(a, b) {\\n            return getTimeInt(getTime(a,true)) - getTimeInt(getTime(b,true))\\n        });\\n    }\\n    return list\\n}\\n\\nfunction similar(s, t, f) {//判断两个字符串之间的相似度\\n    if (!s || !t) {\\n        return 0\\n    }\\n    if(s === t){\\n        return 100;\\n    }\\n    var l = s.length > t.length ? s.length : t.length\\n    var n = s.length\\n    var m = t.length\\n    var d = []\\n    f = f || 2\\n    var min = function (a, b, c) {\\n        return a < b ? (a < c ? a : c) : (b < c ? b : c)\\n    }\\n    var i, j, si, tj, cost\\n    if (n === 0) return m\\n    if (m === 0) return n\\n    for (i = 0; i <= n; i++) {\\n        d[i] = []\\n        d[i][0] = i\\n    }\\n    for (j = 0; j <= m; j++) {\\n        d[0][j] = j\\n    }\\n    for (i = 1; i <= n; i++) {\\n        si = s.charAt(i - 1)\\n        for (j = 1; j <= m; j++) {\\n            tj = t.charAt(j - 1)\\n            if (si === tj) {\\n                cost = 0\\n            } else {\\n                cost = 1\\n            }\\n            d[i][j] = min(d[i - 1][j] + 1, d[i][j - 1] + 1, d[i - 1][j - 1] + cost)\\n        }\\n    }\\n    let res = (1 - d[n][m] / l) *100\\n    return res.toFixed(f)\\n}\\n\\n$.exports.similar = similar;\\n$.exports.removeExt = function (file){\\n    return file.split('.').slice(0,-1).join('.')\\n};\\n\\n$.exports.saveHistory = function (id,data){\\n    let view_history = JSON.parse(readFile('view_history.json', 0) || '[]');\\n    let idex = view_history.findIndex(x=>x.extra&&x.extra.id===id);\\n    if(idex > -1){\\n        view_history.splice(idex,1);\\n    }\\n    view_history.unshift(data);\\n    saveFile('view_history.json',JSON.stringify(view_history),0);\\n    return true\\n}\\n\\n$.exports.renderText = function (realUrl,type){\\n    type = type || 'code';\\n    return $('hiker://empty#noHistory##noRecordHistory#').rule((realUrl,type) => {\\n        let d = [];\\n        let html;\\n        try {\\n            html = request(realUrl, {\\n                timeout: $.getTimeOut()\\n            }) || '';\\n        } catch (e) {\\n            html = '预览失败:' + e.message\\n        }\\n        if(/md|code/.test(type)){\\n            require('http://hiker.nokia.press/hikerule/rulelist.json?id=3187');\\n            html = type==='md'?marked.parse(html):marked.parse(\\\"```\\\\n\\\" + html + \\\"\\\\n```\\\");\\n        }else if (type==='txt'&& html.length > 6000) {\\n            html = html.slice(0, 6000) + \\\"...\\\\nerror:文件过大不支持预览\\\";\\n        }\\n        let col = /md|code/.test(type) ? 'rich_text' : 'long_text';\\n        d.push({\\n            title: html,\\n            col_type: col,\\n            url: 'hiker://empty'\\n        });\\n        setResult(d);\\n    }, realUrl,type)\\n}\"},{\"name\":\"密码管理\",\"path\":\"passwordManage\",\"rule\":\"js:\\nlet d = [];\\nsetPageTitle('Alist密码管理');\\nconst {color,small} = $.require('hiker://page/utils');\\nlet idex = getParam('idex', MY_PARAMS.idex||\\\"\\\");\\nif(!idex){\\n    d.push({\\n        title:'索引获取失败,无法管理密码',\\n        col_type:'text_1',\\n        url:'hiker://empty'\\n    });\\n}else{\\n    idex = Number(idex);\\n    let sub_urls = JSON.parse(readFile('sub_urls.json', 0) || '[]');\\n    let nowSub = sub_urls[idex];\\n    let name = color(nowSub.name,'#d96715');\\n    let password = nowSub.password;\\n    let webdav = nowSub.webdav||{};\\n    if(!password){\\n        d.push({\\n            title:'订阅'+name+'暂无密码',\\n            col_type:'text_1',\\n            url:'hiker://empty'\\n        });\\n    }else{\\n        d.push({\\n            title:'订阅'+name+'密码如下',\\n            col_type:'text_1',\\n            url:'hiker://empty'\\n        });\\n        d.push({\\n            title:JSON.stringify(password),\\n            col_type:'long_text',\\n        });\\n    }\\n    d.push({\\n       title:'<big><strong>webdav配置<big><strong>',\\n       col_type:'rich_text',\\n    });\\n    let webdav_path = $.rstrip(nowSub.url,'/')+'/dav';\\n    d.push({\\n        title:'webdav地址',\\n        desc:webdav_path,\\n        col_type:'text_1',\\n        url:'copy://'+webdav_path\\n    });\\n    d.push({\\n        title: '账号',\\n        url: $.toString((user)=>{\\n            copy(user||getMyVar('webdav_user',''));\\n            return 'hiker://empty'\\n        },webdav.user),\\n        col_type: \\\"input\\\",\\n        desc: \\\"webdav登录账号\\\",\\n        pic_url: \\\"\\\",\\n        extra:{\\n            defaultValue:webdav.user||getMyVar('webdav_user',''),\\n            onChange:\\\"putMyVar('webdav_user',input)\\\",\\n        }\\n    });\\n    d.push({\\n        title: '密码',\\n        url: $.toString((pwd)=>{\\n            copy(pwd||getMyVar('webdav_pwd',''));\\n            return 'hiker://empty'\\n        },webdav.pwd),\\n        col_type: \\\"input\\\",\\n        desc: \\\"webdav登录密码\\\",\\n        pic_url: \\\"\\\",\\n        extra:{\\n            type:'password',\\n            defaultValue:webdav.pwd||getMyVar('webdav_pwd',''),\\n            onChange:\\\"putMyVar('webdav_pwd',input)\\\",\\n        }\\n    });\\n    d.push({\\n        title:'验证并保存',\\n        col_type:'text_center_1',\\n        url:$('#noLoading#').lazyRule((webdav_path,idex)=>{\\n            showLoading('登录验证中,请稍等...');\\n            let url = webdav_path;\\n            let user = getMyVar(\\\"webdav_user\\\");\\n            let pwd = getMyVar(\\\"webdav_pwd\\\");\\n            if (!user|| !pwd) {\\n                return \\\"toast://请输入webdav登录账号和密码\\\";\\n            }\\n            let webdav = buildWebDav(url, user, pwd);\\n            try {\\n                let list = JSON.parse(webdav.list());\\n                if(list.length < 1){\\n                    hideLoading();\\n                    return 'toast://保存失败!登录检测到文件列表为空,请确保账号密码正确且webdav路径下至少有1个文件/文件夹'\\n                }\\n            }catch (e) {\\n                log(e.message);\\n                hideLoading();\\n                return 'toast://保存失败!登录检测到文件列表为空,请确保账号密码正确且webdav路径下至少有1个文件/文件夹'\\n            }\\n            let sub_urls = JSON.parse(readFile('sub_urls.json', 0) || '[]');\\n            let nowSub = sub_urls[idex];\\n            nowSub.webdav = {user:user,pwd:pwd};\\n            saveFile('sub_urls.json', JSON.stringify(sub_urls),0);\\n            // log(list);\\n            hideLoading();\\n            return 'toast://登录验证成功,已保存凭证'\\n        },webdav_path,idex),\\n    });\\n}\\nsetResult(d);\"},{\"name\":\"高级设置\",\"path\":\"superSettings\",\"rule\":\"js:\\nlet d = [];\\nsetPageTitle('Alist|高级设置');\\naddListener('onClose', $.toString(() => {\\n    refreshPage(false); //刷新\\n}));\\nconst {color,small} = $.require('hiker://page/utils');\\nconst {iconStyles} = $.require('hiker://page/fileType');\\nd.push({\\n    title:'搜索记录自动清除',\\n    desc:'设置执行以下动作时是否自动清除搜索内容',\\n    col_type:'text_1',\\n    url:'hiker://empty'\\n});\\nlet clear_change = getItem('clear_change','');\\nlet clear_refresh = getItem('clear_refresh','开');\\nd.push({\\n    title:clear_change?color('切换目录','#12b668'):'切换目录',\\n    col_type:'text_2',\\n    url:$('#noLoading#').lazyRule((clear_change)=>{\\n        setItem(\\\"clear_change\\\", clear_change? \\\"\\\" : \\\"开\\\");\\n        refreshPage(false);\\n        return 'hiker://empty'\\n    },clear_change)\\n});\\nd.push({\\n    title:clear_refresh?color('回首页','#12b668'):'回首页',\\n    col_type:'text_2',\\n    url:$('#noLoading#').lazyRule((clear_refresh)=>{\\n        setItem(\\\"clear_refresh\\\", clear_refresh? \\\"\\\" : \\\"开\\\");\\n        refreshPage(false);\\n        return 'hiker://empty'\\n    },clear_refresh)\\n});\\nlet size = storage0.getItem('search_size',20);\\nd.push({\\n    title:'搜索每页数:'+color(''+size,'#d96715'),\\n    col_type:'text_2',\\n    url:$(size,'请输入全局搜索的每页显示数量\\\\n实测超过200有卡死的风险').input(()=>{\\n        if(!Number(input)){\\n            return 'toast://输入有误'\\n        }\\n        storage0.setItem('search_size',Number(input));\\n        refreshPage(false);\\n        return 'hiker://empty'\\n    }),\\n});\\nlet auth = getItem(\\\"authorization\\\", \\\"\\\");\\nd.push({\\n    title:'站长auth:'+color(auth.substr(0,3),'#d96715'),\\n    col_type:'text_2',\\n    url:$(auth,'你如果是站长可以设置authorization实现免密搜索').input((auth)=>{\\n        input = input.trim();\\n        if(auth!==input){\\n            setItem('authorization',input);\\n            refreshPage(false);\\n        }\\n        return 'hiker://empty'\\n    },auth),\\n});\\n\\nlet iconStyle = getItem('iconStyle','默认');\\nlet iconSel = iconStyles.map(it=>it.name === iconStyles?color(it.name,'#12b668'):it.name);\\nd.push({\\n    title:'图标风格:    '+color(iconStyle,'#d96715'),\\n    desc:'可选全局图标主题样式',\\n    col_type:'text_1',\\n    url:$(iconSel,2,'请选择一套图标样式').select((iconStyle)=>{\\n        input = pdfh(input,'body&&Text').replace('““””','');\\n        if(iconStyle!==input){\\n            setItem('iconStyle',input);\\n            refreshPage(false);\\n        }\\n        return 'hiker://empty'\\n    },iconStyle)\\n});\\nd.push({\\n    title:'自定义过滤条件'+small(color('(点击来个例子)','#aaaaaa')),\\n    desc:'设置一些自定义的筛选内容附加到主页快速筛选栏',\\n    col_type:'text_1',\\n    url:$('来个示例?').confirm(()=>{\\n        putMyVar('filter_name', '视频');\\n        putMyVar('filter_rule', '\\\\\\\\.m3u8|\\\\\\\\.mp4');\\n        refreshPage(false);\\n        return 'toast://例子给你了,自己保存吧!'\\n    })\\n});\\nd.push({\\n    title: '名称',\\n    desc: '如: 视频',\\n    col_type: 'input',\\n    url: $.toString(() => {\\n    }),\\n    extra: {\\n        defaultValue: getMyVar('filter_name', ''),\\n        onChange: 'putMyVar(\\\"filter_name\\\",input)'\\n    }\\n});\\nd.push({\\n    title: '内容',\\n    desc: '如: \\\\\\\\.m3u8|\\\\\\\\.mp4',\\n    col_type: 'input',\\n    url: $.toString(() => {\\n\\n    }),\\n    extra: {\\n        defaultValue: getMyVar('filter_rule', ''),\\n        onChange: 'putMyVar(\\\"filter_rule\\\",input)',\\n        height: 2,\\n        highlight: true,\\n        type: \\\"textarea\\\",\\n    }\\n});\\nfunction saveFilter() {\\n    let filter_name = getMyVar('filter_name', '').trim();\\n    let filter_rule = getMyVar('filter_rule', '').trim();\\n    if (!filter_name) {\\n        return 'toast://名称必填!'\\n    }\\n    if (!filter_rule) {\\n        return 'toast://过滤规则必填!'\\n    }\\n    let filter_rules = JSON.parse(readFile('filter_rules.json', 0) || '[]');\\n    let idex = filter_rules.findIndex(it => it.name === filter_name);\\n    if (idex > -1) {\\n        if (filter_rules[idex].rule !== filter_rule) {\\n            filter_rules[idex].rule = filter_rule;\\n            // filter_rules[idex].active = true;\\n            return $('检测到本地有重复的' + filter_name + ',是否覆盖?').confirm((filter_rules) => {\\n                saveFile('filter_rules.json', JSON.stringify(filter_rules), 0);\\n                refreshPage(false);\\n                return 'toast://已保存'\\n            }, filter_rules)\\n        } else {\\n            return 'toast://没有操作'\\n        }\\n    } else {\\n        filter_rules.unshift({\\n            name: filter_name,\\n            rule: filter_rule,\\n            active:true,\\n        });\\n        saveFile('filter_rules.json', JSON.stringify(filter_rules), 0);\\n        refreshPage(false);\\n        return 'toast://已保存'\\n    }\\n}\\n\\nd.push({\\n    title:'保存规则',\\n    col_type: 'text_3',\\n    url:$('#noLoading#').lazyRule((saveFilter)=>{\\n        return saveFilter();\\n    },saveFilter)\\n});\\nd.push({\\n    title:'导入规则',\\n    col_type: 'text_3',\\n    url:$(\\\"{{clipboard}}\\\", \\\"自动识别剪切板内容或手动输入口令\\\").input(()=>{\\n        input=input.trim();\\n        let url=input.split('\\\\n')[1];\\n        if(!/Alist自定义过滤规则/.test(input)||!/^http/.test(url)){\\n            return 'toast://导入口令有误'\\n        }\\n        try {\\n            let code=parsePaste(url);\\n            let newRules = JSON.parse(base64Decode(code));\\n            let filter_rules = JSON.parse(readFile('filter_rules.json', 0) || '[]');\\n            let filter_cnt = filter_rules.length;\\n            newRules = newRules.filter(x=>x.name&&x.rule);\\n            if(!Array.isArray(newRules) || newRules.length < 1){\\n                return 'toast://导入的东西看起来没对呢!'\\n            }\\n            newRules.forEach((it)=>{\\n                let idex = filter_rules.findIndex(x=>$.rstrip(x.name) === $.rstrip(it.name));\\n                idex>-1?filter_rules[idex] = it:filter_rules.unshift(it);\\n            });\\n            let new_cnt = filter_rules.length - filter_cnt;\\n            if(new_cnt > 0 ){\\n                saveFile('filter_rules.json', JSON.stringify(filter_rules), 0);\\n                refreshPage(false);\\n                return 'toast://已保存'+new_cnt+'条记录'\\n            }else{\\n                return 'toast://没有待保存的内容'\\n            }\\n        }catch (e) {\\n            return 'toast://导入失败!\\\\n'+ e.message;\\n        }\\n    }),\\n});\\nd.push({\\n    title:'分享规则',\\n    col_type: 'text_3',\\n    url:$('#noLoading#').lazyRule(()=>{\\n        let filter_rules = JSON.parse(readFile('filter_rules.json', 0) || '[]');\\n        if(filter_rules.length < 1){\\n            return 'toast://你还没有规则,无法分享!'\\n        }\\n        let shareText = base64Encode(JSON.stringify(filter_rules));\\n        var pastes = getPastes();\\n        var url = sharePaste(shareText,pastes.slice(-1)[0]);\\n        let import_rule= \\\"Alist自定义过滤规则：\\\"+filter_rules[0].name+'等'+filter_rules.length+'条\\\\n'+url;\\n        copy(import_rule);\\n        return 'hiker://empty'\\n    })\\n});\\nlet filter_rules = JSON.parse(readFile('filter_rules.json', 0) || '[]');\\nfilter_rules.forEach((it, idex) => {\\n    d.push({\\n        title: it.active?color(it.name,'#12b668'):color(it.name,'#aaaaaa'),\\n        desc: it.rule,\\n        url: $(['删除', '修改名称','修改规则','快捷输入','启用','禁用'], 2, '请选择1个操作').select((it, filter_rules, idex) => {\\n            if (input === '删除') {\\n                let filterOption = getItem('filterOption','全部');\\n                if(filterOption===it.name){\\n                    clearItem('filterOption')\\n                }\\n                filter_rules.splice(idex, 1);\\n            }else if (input === '修改名称') {\\n                return $(it.name,'给此规则改个名字吧').input((filter_rules,idex)=>{\\n                    input = input.trim();\\n                    if(input){\\n                        filter_rules[idex].name = input;\\n                        saveFile('filter_rules.json', JSON.stringify(filter_rules), 0);\\n                        refreshPage(false);\\n                        return 'toast://修改成功'\\n                    }else{\\n                        return 'toast://修改失败'\\n                    }\\n                },filter_rules,idex);\\n            }else if (input === '修改规则') {\\n                return $(it.rule,'给此规则改个匹配内容吧').input((filter_rules,idex)=>{\\n                    input = input.trim();\\n                    if(input){\\n                        filter_rules[idex].rule = input;\\n                        saveFile('filter_rules.json', JSON.stringify(filter_rules), 0);\\n                        refreshPage(false);\\n                        return 'toast://修改成功'\\n                    }else{\\n                        return 'toast://修改失败'\\n                    }\\n                },filter_rules,idex);\\n            } else if (input === '快捷输入') {\\n                putMyVar(\\\"filter_name\\\",it.name);\\n                putMyVar(\\\"filter_rule\\\",it.rule);\\n                refreshPage(false);\\n                return 'hiker://empty'\\n            }else if (input === '启用') {\\n                filter_rules[idex].active = true;\\n                saveFile('filter_rules.json', JSON.stringify(filter_rules), 0);\\n                refreshPage(false);\\n                return 'toast://已启用'\\n            }else if (input === '禁用') {\\n                filter_rules[idex].active = false;\\n                saveFile('filter_rules.json', JSON.stringify(filter_rules), 0);\\n                refreshPage(false);\\n                return 'toast://已禁用'\\n            }\\n            saveFile('filter_rules.json', JSON.stringify(filter_rules), 0);\\n            refreshPage(false);\\n            return 'toast://已' + input\\n        }, it, filter_rules, idex),\\n        col_type: \\\"text_1\\\",\\n        extra:{\\n            idex:idex+''\\n        }\\n    })\\n});\\nsetResult(d);\"},{\"name\":\"观看历史\",\"path\":\"history\",\"rule\":\"js:\\nvar d = [];\\nsetPageTitle('Alist|观影历史');\\nconst {color,small} = $.require('hiker://page/utils');\\nd.push({\\n    title: \\\"清空\\\",\\n    url: $('确认清空历史记录?').confirm(() => {\\n        // deleteFile('view_history.json');\\n        saveFile('view_history.json','[]',0);\\n        refreshPage(false);\\n        return \\\"toast://观影历史已清空!\\\"\\n    }),\\n    col_type: \\\"text_3\\\"\\n});\\nlet hisPath = `hiker://files/rules/files/${MY_RULE.title}/view_history.json`;\\nd.push({\\n    title: \\\"编辑\\\",\\n    url: $('#noLoading#').lazyRule((hisPath)=>{\\n        if(!fileExist(hisPath)){\\n            saveFile('view_history.json','[]',0);\\n        }\\n        return 'editFile://'+hisPath\\n    },hisPath),\\n    col_type: \\\"text_3\\\"\\n});\\nlet option = getItem('his_click','播放');\\nd.push({\\n    title: option==='播放'?option:color(option,'#ab2415'),\\n    url: $('#noLoading#').lazyRule((color)=>{\\n        let option = getItem('his_click','播放');\\n        let nextOption = option === '播放'?'删除':'播放';\\n        setItem('his_click',nextOption);\\n        updateItem(\\\"his_click\\\", {\\n            title:nextOption==='播放'?nextOption:color(nextOption,'#ab2415')\\n        });\\n        refreshPage(false);\\n        return 'hiker://empty'\\n    },color),\\n    col_type: \\\"text_3\\\",\\n    extra:{\\n        id:'his_click'\\n    }\\n});\\nlet view_history = JSON.parse(readFile('view_history.json', 0) || '[]');\\nif(view_history.length > 0){\\n    view_history.forEach((it)=>{\\n        it.col_type = 'text_1';\\n        if(option==='删除'){\\n            it.url = $('#noLoading#').lazyRule((id)=>{\\n                let view_history = JSON.parse(readFile('view_history.json', 0) || '[]');\\n                let idex = view_history.findIndex(x=>x.extra.id === id);\\n                view_history.splice(idex,1);\\n                saveFile('view_history.json', JSON.stringify(view_history),0);\\n                refreshPage(false);\\n                return 'hiker://empty'\\n            },it.extra.id);\\n        }\\n        d.push(it);\\n    });\\n}else{\\n  d.push({\\n      title:'暂无观影记录,先去观看一个视频吧!',\\n      col_type:'text_center_1',\\n      url:'hiker://empty'\\n  });\\n}\\nsetResult(d);\"},{\"name\":\"文件上传\",\"path\":\"upload\",\"rule\":\"js:\\nsetPageTitle('Alist|访客上传文件');\\nconst {color,small} = $.require('hiker://page/utils');\\nlet html = `\\n<!doctype html>\\n<html> \\n    <head> \\n    <!--<author>顺承天意&&@LoyDgIk&&道长</author>-->\\n        <meta charset=\\\"UTF-8\\\"> \\n        <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0\\\"> <!-- <meta name=\\\"color-scheme\\\" content=\\\"light dark\\\"> --> \\n        <title>上传文件</title> \\n        <style>\\n        button {\\n            display: block;\\n            width: 100%;\\n            margin: 6px;\\n            outline: none;\\n            height: 40px;\\n            line-height: 40px;\\n            color: #fff;\\n            background-color: #26a2ff;\\n            text-align: center;\\n            border-radius: 4px;\\n            border: none;\\n            cursor: pointer;\\n        }\\n\\n        #upload-input {\\n            opacity: 0;\\n            filter: alpha(opacity=0);\\n            display: inline-block;\\n            width: 100%;\\n            height: 100%;\\n        }\\n\\n        #upload-text {\\n            position: relative;\\n            bottom: 40px;\\n            user-select: none;\\n        }\\n    </style>\\n    </head>\\n    <body><button onclick=\\\"easyUpload()\\\"> <span id=\\\"upload-input\\\">选择文件</span><span id=\\\"upload-text\\\">选择文件</span> </button>\\n        \\n    </body>\\n</html>\\n`;\\nlet sub_urls = $.get_sub_urls();\\nlet baseurl = $.rstrip(getMyVar(\\\"baseurl\\\", sub_urls[0].url), '/');\\nlet path = getMyVar(\\\"path\\\", \\\"\\\");\\nlet password = sub_urls.find(x => x.url.includes(baseurl)).password || {};\\npassword = password[path] || '';\\nlet obj = {\\n    base_url:baseurl,\\n    path:path,\\n    password:password,\\n    html:html,\\n};\\nfunction x5js(obj) {\\n    document.write(obj.html);\\n    function easyUpload() {\\n        var input = document.createElement(\\\"input\\\");\\n        input.type = \\\"file\\\";\\n        input.click();\\n        input.onchange = function() {\\n            fba.showLoading(\\\"正在上传\\\");\\n            var files = input.files;\\n            const form = new FormData();\\n            for (let i = 0; i < files.length; i++) {\\n                form.append(\\\"files\\\", files[i], files[i].name);\\n            }\\n            form.append(\\\"path\\\", obj.path);\\n            form.append(\\\"password\\\", obj.password);\\n            var xhr = new XMLHttpRequest();\\n            //xhr.setRequestHeader('Content-Type', 'application/json');\\n            var action = obj.base_url + \\\"/api/public/upload\\\"; //上传接口\\n            // fba.log(\\\"正在上传\\\");\\n            xhr.onload = function() {\\n                fba.hideLoading();\\n                if (xhr.readyState === 4 && xhr.status === 200) {\\n                    var resultObj = JSON.parse(xhr.responseText);\\n                    fba.log(xhr.responseText);\\n                    alert(\\\"上传成功\\\\n\\\" + resultObj.message);\\n                    fba.back(true);\\n                }else{\\n                    alert(\\\"上传失败\\\");\\n                }\\n            }\\n            xhr.open(\\\"POST\\\", action);\\n            xhr.send(form); //发送表单数据\\n        }\\n    }\\n    window.easyUpload = function() {\\n        try {\\n            easyUpload();\\n        } catch (e) {\\n            fba.log(e.toString());\\n        }\\n    }\\n}\\nvar d = [];\\nd.push({\\n    title:'当前主页:'+small(color(obj.base_url,'#aaaaaa')),\\n    desc:'当前相对路径:'+small(color(obj.path,'#aaaaaa')),\\n    col_type: 'text_1',\\n    url:obj.base_url + obj.path,\\n    extra: {\\n        password:obj.password\\n    }\\n});\\nd.push({\\n    col_type: \\\"x5_webview_single\\\",\\n    desc: \\\"60&&list\\\",\\n    url:\\\"about:blank\\\",\\n    extra: {\\n        js: $.toString(x5js, obj),\\n        //jsLoadingInject: true\\n    }\\n});\\nsetResult(d);\"},{\"name\":\"搜索\",\"path\":\"search\",\"rule\":\"js:\\nvar d = [];\\nsetPageTitle('Alist|🔍全局搜索');\\nlet nsearch = getMyVar('searchAll','');\\naddListener('onClose', $.toString(() => {\\n    let clear_refresh = getItem('clear_refresh','开');\\n    if(clear_refresh === '开'){\\n        clearMyVar('searchAll');\\n    }\\n}));\\nif(MY_PAGE===1||!nsearch) {\\n    d.push({\\n        title: '🔍搜索',\\n        desc: '搜点什么吧?',\\n        url: $.toString(() => {\\n            refreshPage(false);\\n        }),\\n        col_type: 'input',\\n        extra: {\\n            defaultValue: nsearch,\\n            onChange: 'putMyVar(\\\"searchAll\\\",input)',\\n        }\\n    });\\n}\\nlet searchResult = [];\\nlet showDetail = getItem('showDetail', '开') === '开';\\nlet filterOption = getItem('filterOption','全部');\\nif(nsearch){\\n    let sub_urls = $.get_sub_urls();\\n    let baseurl = $.rstrip(getMyVar(\\\"baseurl\\\", sub_urls[0].url), '/');\\n    let path = getMyVar(\\\"path\\\", \\\"\\\");\\n    let lastSearch = baseurl + path + '?key='+nsearch+'|'+showDetail;\\n    if(lastSearch === getMyVar('lastSearch','')){\\n        if(MY_PAGE===1) {\\n            showLoading('获取上次搜索结果中...');\\n        }\\n        log(`搜索${nsearch},第${MY_PAGE}页`);\\n        searchResult = JSON.parse(readFile('search_results.json',0));\\n    }else {\\n        showLoading(`搜索${nsearch}中，请稍等...`);\\n        const icon_dict = $.require('hiker://page/fileType').get_icon_dict();\\n        const icons = $.require('hiker://page/fileType').get_icons();\\n        const {getLink} = $.require('hiker://page/api');\\n        let clickOption = getItem('clickOption', '打开');\\n        const {bytesToSize, small, color, getTime,sorts} = $.require('hiker://page/utils');\\n        let showZimu = getItem('showZimu', '开');\\n        d.push({\\n            title: '主页:' + small(color(baseurl, '#aaaaaa')),\\n            desc: '路径:' + small(color(path, '#aaaaaa')),\\n            url: 'hiker://empty',\\n            col_type: 'text_1'\\n        });\\n\\n        try {\\n            let password = sub_urls.find(x => x.url.includes(baseurl)).password || {};\\n            let res = JSON.parse(post(baseurl + \\\"/api/public/search\\\", {\\n                headers: {\\n                    \\\"Content-Type\\\": \\\"application/json\\\",\\n                    \\\"authorization\\\": getItem(\\\"authorization\\\", \\\"\\\")\\n                },\\n                body: JSON.stringify({\\n                    path: path,\\n                    keyword: nsearch,\\n                    password: password[path] || ''\\n                }),\\n                timeout: $.getTimeOut(),\\n            }));\\n\\n            let list = res.data;\\n            if (list.length < 1) {\\n                searchResult.push({\\n                    title: \\\"找不到你想要的ʕ·ᴥ·ʔ\\\",\\n                    url: \\\"hiker://empty\\\"\\n                });\\n            } else {\\n                if(filterOption==='文件'){\\n                    list = list.filter(x=>x.type!==1)\\n                }else if(filterOption==='文件夹'){\\n                    list = list.filter(x=>x.type===1)\\n                }else if(filterOption!=='全部'){\\n                    let filter_rules = JSON.parse(readFile('filter_rules.json', 0) || '[]');\\n                    let filter_rule = filter_rules.find(x=>x.name===filterOption);\\n                    if(filter_rule&&filter_rule.rule){\\n                        if(filter_rule.rule.startsWith('!')){\\n                            list = list.filter(x=>!(new RegExp(filter_rule.rule.slice(1))).test(x.name));\\n                        }else{\\n                            list = list.filter(x=>(new RegExp(filter_rule.rule)).test(x.name));\\n                        }\\n                    }\\n                }\\n                showLoading('搜索到' + list.length + '条结果,加载中');\\n                list.forEach((item) => {\\n                    let it_type = item.type;//资源类型\\n                    let url = 'hiker://empty';\\n                    let title = item.name;//资源名称\\n                    let path = item.path;//资源路径\\n                    let id = baseurl + path + title;//资源唯一标志\\n                    let ext = title.split('.').slice(-1)[0];\\n                    let img = it_type === 1 ? icon_dict['1'] : (icons[ext] || icon_dict[it_type + '']);\\n                    if (it_type === 1) {\\n                        url = $('#noLoading#').lazyRule((item) => {\\n                            putMyVar(\\\"path\\\", item.path + \\\"/\\\" + item.name)\\n                            back();\\n                            return \\\"hiker://empty\\\"\\n                        }, item);\\n                    } else if (it_type === 3 || /\\\\.m3u8$/.test(title)) { //3是媒体,禁用下载和跳转\\n                        url = getLink(title,path, '打开', showZimu, '#isVideo=true#',true);\\n                    } else if (it_type === 6) {\\n                        url = getLink(title,path, '打开', showZimu, \\\"#.jpg\\\",true);\\n                    } else { //跟随系统预览和下载\\n                        url = getLink(title,path, clickOption, showZimu,true);\\n                    }\\n                    searchResult.push({\\n                        name:title,\\n                        title: title,\\n                        img: img,\\n                        url: url,\\n                        col_type: \\\"avatar\\\",\\n                        extra: {\\n                            id: id,\\n                            type: it_type,\\n                            title: title,\\n                        }\\n                    });\\n                    // log(item);\\n                    if (showDetail) {\\n                        let date = (item.updated_at || item.time_str) ? getTime(item) : '\\\\t\\\\t\\\\t\\\\t';\\n                        let size = item.size_str;\\n                        if (!size || size === \\\"\\\") {\\n                            size = item.size === 0 ? \\\"/\\\" : bytesToSize(item.size)\\n                        }\\n                        if (size && size !== \\\"\\\" && size !== 0) {\\n                            size = \\\"&nbsp;&nbsp;&nbsp;\\\" + size;\\n                        } else {\\n                            size = \\\"\\\";\\n                        }\\n                        let desc = date + size;\\n                        searchResult.push({\\n                            name:title,\\n                            title: small(color(desc, '#aaaaaa')),\\n                            col_type: \\\"text_1\\\",\\n                            url: url,\\n                            extra: {\\n                                id: id,\\n                                type: it_type,\\n                                title: title,\\n                            }\\n                        })\\n                    }\\n                });\\n                toast('搜索结束，即将加载完毕...');\\n            }\\n            putMyVar('lastSearch', lastSearch);\\n            if(!showDetail){//非详细模式才自动按名称排序\\n                sorts(searchResult,'名称');\\n            }\\n            saveFile('search_results.json', JSON.stringify(searchResult), 0);\\n\\n        } catch (e) {\\n            searchResult.push({\\n                title: \\\"好像不能搜索,点击返回\\\",\\n                desc: e.message,\\n                url: $('#noLoading#').lazyRule(() => {\\n                    back();\\n                    return \\\"hiker://empty\\\"\\n                })\\n            });\\n            putMyVar('lastSearch', lastSearch);\\n            saveFile('search_results.json', JSON.stringify(searchResult), 0);\\n            // log(e.message);\\n        }\\n    }\\n}\\nlet size = storage0.getItem('search_size',20);\\nif(showDetail){size = size*2} // 显示详细需要x2\\nsearchResult = searchResult.slice((MY_PAGE-1)*size,MY_PAGE*size);\\nd = d.concat(searchResult);\\nhideLoading();\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"点击函数\",\"path\":\"clickFunction\",\"rule\":\"function clickLazy(baseurl, npath, path,clickOption,showZimu,input, ext,reload){\\n    if (clickOption !== '菜单') {\\n        let u=$.getU(baseurl,npath,ext);\\n        if(/toast:/.test(u)){\\n            return u\\n        }\\n        let playUrl = baseurl + \\\"/d\\\" + npath;//文件302直链\\n        u = ext?playUrl+ext:playUrl; // 既然获取u没报错,为了可以让视频投屏,那么u覆写为302直链\\n        //log(u);\\n        if (clickOption === '打开') {\\n            if(ext&&/isVideo/.test(ext)&&showZimu==='开'){//判断打开的是媒体文件才走字幕逻辑\\n                let id = baseurl + npath;//当前文件的唯一标识\\n                let data = {\\n                    title: input,\\n                    desc: id,\\n                    extra:{\\n                        id:id,\\n                    }\\n                };\\n                var now_files = storage0.getMyVar(\\\"now_files\\\",[]);//获取缓存的,避免二次请求\\n                // log('同目录文件数为:'+now_files.length);\\n                if(now_files.length < 1|| reload){//从搜索进去的,只能重新获取了\\n                    const {getFiles} = $.require('hiker://page/api');\\n                    let dirInfo = getFiles(path,'文件');\\n                    now_files = dirInfo.result||[];\\n                    // log('重新获取同目录文件:'+now_files.length);\\n                }\\n                let files;\\n                if(reload){\\n                    files = now_files.filter(x=>x.type!==1&&/\\\\.srt$|\\\\.vtt$|\\\\.ass$|\\\\.ssa$/.test(x.title)).map(x=>x.title); // 筛选文件并且名称含字幕后缀的\\n                }else{\\n                    files = now_files.filter(x=>x.type!==1&&/\\\\.srt$|\\\\.vtt$|\\\\.ass$|\\\\.ssa$/.test(x.name)).map(x=>x.name); // 筛选文件并且名称含字幕后缀的\\n                }\\n                // log(now_files);\\n                if(files.length > 0){//当前目录有字幕文件\\n                    let bestFile = files.find(x=>$.removeExt(input).includes($.removeExt(x)));//视频文件去掉后缀完美包含字幕文件去后缀\\n                    if(bestFile){//找到了最符合的文件名称\\n                        log(`${input}自动匹配最佳外挂字幕文件:${bestFile}`);\\n                        let realUrl = baseurl + '/d' + path + bestFile;\\n                        data.url = JSON.stringify({\\n                            urls: [u],\\n                            subtitle: realUrl\\n                        });\\n                        $.saveHistory(id,data);\\n                        return JSON.stringify({\\n                            urls: [u],\\n                            subtitle: realUrl\\n                        });\\n                    }else{\\n                        files = files.filter(x=>$.similar($.removeExt(input),$.removeExt(x))>=30);//筛选相似度>30的文件\\n                        if (files.length > 0) {\\n                            files.unshift('不需要字幕');\\n                            return $(files, 1, \\\"请选择字幕\\\").select((baseurl, path, u,ext,id,playUrl,data) => {\\n                                if(input==='不需要字幕'){\\n                                    data.url = u;\\n                                    $.saveHistory(id,data);\\n                                    return u\\n                                }\\n                                let realUrl = baseurl + '/d' + path + input;\\n                                data.url = JSON.stringify({\\n                                    urls: [u],\\n                                    subtitle: realUrl\\n                                });\\n                                $.saveHistory(id,data);\\n                                return JSON.stringify({\\n                                    urls: [u],\\n                                    subtitle: realUrl\\n                                });\\n                            }, baseurl, path, u,ext,id,playUrl,data);\\n                        } else {\\n                            data.url = u;\\n                            $.saveHistory(id,data);\\n                            return u\\n                        }\\n                    }\\n                }else{\\n                    data.url = u;\\n                    $.saveHistory(id,data);\\n                    return u\\n                }\\n            }else if(ext&&/isVideo/.test(ext)&&showZimu!=='开'){\\n                let id = baseurl + npath;//当前文件的唯一标识\\n                let data = {\\n                    title: input,\\n                    desc: id,\\n                    url:u,\\n                    extra:{\\n                        id:id,\\n                    }\\n                };\\n                $.saveHistory(id,data);\\n                return u\\n            }else{\\n                return u\\n            }\\n        }\\n        if (clickOption === '打开') {\\n            return u\\n        } else if (clickOption === '下载') {\\n            return 'download://' + u\\n        }\\n    }else{\\n        let sub_urls = $.get_sub_urls();\\n        let rstrip = $.rstrip;\\n        let nowSub = sub_urls.find(x=>rstrip(x.url,'/')===baseurl);\\n        let dav = nowSub?nowSub.webdav||{}:{};\\n        let sel_list = ['打开', '下载', '预览', '复制直链'];\\n        if(path.split('/').length>1&&nowSub&&nowSub.webdav&&nowSub.webdav.user){\\n            sel_list.push('删除');\\n        }\\n        return $(sel_list, 2, '请选择1个文件操作').select((baseurl, path,npath,ext,user,pwd,dav) => {\\n            //log(dav);\\n            let u=$.getU(baseurl,npath,ext);\\n            if(/toast:/.test(u)){\\n                return u\\n            }\\n            let realUrl = baseurl + '/d' + npath;\\n            if (input === '打开') {\\n                return u;\\n            } else if (input === '下载') {\\n                return 'download://' + u\\n            } else if (input === '复制直链') {\\n                return 'copy://' + realUrl\\n            }else if(input === '删除'){\\n                // let url = baseurl +'/dav'+npath;\\n                let fname = npath.split('/').slice(-1)[0];\\n                let url = baseurl +'/dav'+path;\\n                return $('确认删除:'+fname+' ?').confirm((realUrl,url,fname,user,pwd)=>{\\n                    let webdav = buildWebDav(url, user, pwd);\\n                    // log(fname);\\n                    log(url+fname);\\n                    webdav.delete(fname)\\n                    refreshPage(false);\\n                    return \\\"toast://已删除\\\"+realUrl\\n                },realUrl,url,fname,user,pwd);\\n            }else if (input === '预览') {\\n                if (/\\\\.md$/.test(realUrl)) {\\n                    return $.renderText(realUrl,'md');\\n                } else if (/\\\\.html$|\\\\.json$|\\\\.js$|\\\\.css$|\\\\.py$|\\\\.php$|\\\\.go$/.test(realUrl)) {\\n                    return $.renderText(realUrl,'code');\\n                } else if (/\\\\.txt$/.test(realUrl)) {\\n                    return $.renderText(realUrl,'txt');\\n                } else if (/\\\\.pdf$/.test(realUrl)) {\\n                    return \\\"x5://https://alist-org.github.io/pdf.js/web/viewer.html?file=\\\" + realUrl\\n                } else if ($.isOffice(realUrl)) {\\n                    return \\\"x5://https://view.officeapps.live.com/op/view.aspx?src=\\\" + realUrl\\n                } else {\\n                    let sub_urls = $.get_sub_urls();\\n                    let password = sub_urls.find(x => x.url.includes(baseurl)).password || {};\\n                    let res = JSON.parse(post(baseurl + \\\"/api/public/preview\\\", {\\n                        headers: {\\n                            \\\"Content-Type\\\": \\\"application/json\\\"\\n                        },\\n                        body: JSON.stringify({\\n                            path: npath,\\n                            password: password[npath] || \\\"\\\",\\n                        }),\\n                        timeout: $.getTimeOut(),\\n                    }));\\n                    if (res.data) {\\n                        return res.data.preview_url + '&access_token=' + res.data.access_token;\\n                    } else {\\n                        return 'toast://' + res.message;\\n                    }\\n                }\\n            } else {\\n                return 'toast://无效操作'\\n            }\\n        },baseurl, path,npath,ext,dav.user,dav.pwd,dav);\\n\\n    }\\n}\\n\\n$.exports.clickLazy = clickLazy;\"},{\"col_type\":\"movie_3\",\"name\":\"webDav上传文件\",\"path\":\"webdavUpload\",\"rule\":\"js:\\nlet d=[];\\nsetPageTitle('Alist|webdav上传');\\naddListener('onClose', $.toString(() => {\\n    refreshPage(false); //刷新\\n}));\\nd.push({\\n    title: '上传☁️',\\n    url: $.toString(()=>{\\n        let input = getMyVar('webdav_path','');\\n        if(!/^(hiker|file|\\\\/storage\\\\/|\\\\/sdcard\\\\/)/.test(input)){\\n            return 'toast://文件路径有误!'\\n        }\\n        showLoading(\\\"上传中，请稍候\\\");\\n        let sub_urls = $.get_sub_urls();\\n        let rstrip = $.rstrip;\\n        var base_path = rstrip(getMyVar(\\\"baseurl\\\", sub_urls[0].url), '/');\\n        var path = getMyVar(\\\"path\\\", \\\"\\\");\\n        let nowSub = sub_urls.find(x=>rstrip(x.url,'/')===base_path);\\n        let url = base_path +'/dav'+path;\\n        let name = input.split(\\\"/\\\").slice(-1)[0];\\n        log(`开始将${name}上传至${url}`);\\n        let webdav = buildWebDav(url, nowSub.webdav.user, nowSub.webdav.pwd);\\n        webdav.upload(name, input);\\n        hideLoading();\\n        refreshPage(false);\\n        return \\\"toast://上传完毕,可以在此继续选择文件上传或者返回上级查看成功的文件\\\"\\n    }),\\n    col_type: \\\"input\\\",\\n    desc: \\\"待上传的文件路径,支持hiker://,file://,/storage/开头\\\",\\n    pic_url: \\\"\\\",\\n    extra:{\\n        height:3,\\n        type:'textarea',\\n        id:'webdav_path',\\n        defaultValue:getMyVar('webdav_path',''),\\n        onChange:\\\"putMyVar('webdav_path',input)\\\",\\n    }\\n});\\nd.push({\\n    title: \\\"选择文件路径\\\",\\n    url:$('#noLoading#').lazyRule(()=>{\\n        let fp=config.lib.fileSelect;\\n        let f=$.rc(fp);\\n        return f.fileSelectionUri({\\n            callback: $.toString(() => {\\n                let target = findItem(\\\"webdav_path\\\").extra;\\n                updateItem(\\\"webdav_path\\\", {\\n                    extra: Object.assign(target, {\\n                        defaultValue: PATH\\n                    })\\n                });\\n                putMyVar('webdav_path',PATH);\\n                return true;\\n            }),\\n            onClickType:'confirm',\\n            fileType: \\\"\\\",\\n            pattern: 0,\\n            requireUrl:fp,\\n            initialPath:getPath('hiker://files/').slice(7),\\n            memory:'true',\\n        });\\n    }),\\n    col_type: \\\"text_center_1\\\",\\n});\\n\\nsetResult(d)\"}]","proxy":"","icon":"https://cdn.jsdelivr.net/gh/alist-org/logo@main/can_circle.svg"},{"last_chapter_rule":"","title":"奇妙工具箱","author":"小棉袄🌞","version":7,"type":"tool","url":"hiker://empty##","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\nlet vip = getItem(\"vip\", \"0\") == \"1\";\nd.push({\n    title: vip ? \"欢迎您，尊贵的会员！\" : \"您还不是会员\",\n    url: $(\"#noLoading#\").lazyRule(() => {\n        confirm({\n            title: \"说明\",\n            content: \"本工具箱所有功能免费无广告使用，为激励作者不断更新和新增优秀功能，因此搞了一个会员制，本会员制为分享制，只需要分享软件或者官方公众号给您的朋友，然后点击确定按钮即可，会员领取方案为无人售票制度，点击确定按钮即可\",\n            confirm: $.toString(() => {\n                confirm({\n                    title: \"领取会员\",\n                    content: \"确定领取会员吗？确认您已分享软件或者官方公众号给您的朋友，确认请点击下方的确定按钮\",\n                    confirm: $.toString(() => {\n                        setItem(\"vip\", \"1\");\n                        refreshPage();\n                        return \"toast://恭喜，您已成为会员！\"\n                    })\n                });\n                return \"hiker://empty\"\n            })\n        });\n        return \"hiker://empty\"\n    }),\n    col_type: \"avatar\",\n    desc: \"\",\n    pic_url: vip ? \"http://gh.haikuoshijie.cn/https://github.com/qiusunshine/hiker-rules/blob/master/plugins/%E5%86%A0%E5%86%9B3.png\" : \"hiker://images/account\"\n});\n\nd.push({\n    title: \"磁力云播\",\n    url: \"hiker://empty\",\n    desc: \"““””<small>基于迅雷SDK，支持磁力、电驴、种子、FTP、HTTP、RTMP等多种格式</small>\",\n    col_type: \"text_center_1\",\n    extra: {\n        lineVisible: false\n    }\n});\n\nd.push({\n    title: \"播放\",\n    url: $.toString(() => {\n        return input;\n    }),\n    col_type: \"input\",\n    desc: \"请输入链接\",\n    pic_url: \"\"\n});\n\nd.push({\n    title: \"视频提取\",\n    desc: \"直接输入网页地址即可提取播放、下载视频\",\n    url: \"hiker://empty\",\n    col_type: \"text_center_1\",\n    extra: {\n        lineVisible: false\n    }\n});\n\nd.push({\n    title: \"提取\",\n    url: $.toString(() => {\n        return \"video://\" + input;\n    }),\n    col_type: \"input\",\n    desc: \"请输入网页链接\",\n    pic_url: \"\"\n});\n\nd.push({\n    title: \"电子书阅读器(txt)\",\n    url: $(\"#noLoading#\").lazyRule(() => {\n        let r = fetch(\"hiker://home@本地资源管理\");\n        if (r && r.length > 5) {\n            return \"hiker://home@本地资源管理\";\n        } else {\n            confirm({\n                title: \"温馨提示\",\n                content: \"当前未导入扩展插件，点击下方确定按钮导入\",\n                confirm: $.toString(() => {\n                    return \"海阔视界首页频道规则【本地资源管理】￥home_rule_url￥http://hiker.nokia.press/hikerule/rulelist.json?id=3559\"\n                })\n            });\n            return \"hiker://empty\"\n        }\n    }),\n    col_type: \"card_pic_2\",\n    pic_url: \"hiker://images/home_pic4\",\n});\nd.push({\n    title: \"epub转换器\",\n    url: \"web://https://convertio.co/zh/\",\n    col_type: \"card_pic_2_2\",\n    pic_url: \"hiker://images/home_pic3\"\n});\nd.push({\n    title: \"WebDav\",\n    url: $(\"#noLoading#\").lazyRule(() => {\n        let r = fetch(\"hiker://home@Webdav\");\n        log(r);\n        if (r && r.length > 5) {\n            return \"hiker://home@Webdav\";\n        } else {\n            confirm({\n                title: \"温馨提示\",\n                content: \"当前未导入扩展插件，点击下方确定按钮导入\",\n                confirm: $.toString(() => {\n                    return \"海阔视界首页频道规则【Webdav】￥home_rule_url￥http://hiker.nokia.press/hikerule/rulelist.json?id=5210\"\n                })\n            });\n            return \"hiker://empty\"\n        }\n    }),\n    col_type: \"card_pic_2_2\",\n    pic_url: \"hiker://images/home_pic2\"\n});\nd.push({\n    title: \"图片提取器\",\n    url: \"hiker://page/pic\",\n    col_type: \"text_center_1\",\n    desc: \"\",\n    pic_url: \"\"\n});\n\nd.push({\n    title: \"““””<span style=\\\"color: #aaaaaa\\\"><small>扩展插件来自小棉袄、LoyDgIk、Joe等</small></span>\",\n    url: \"hiker://empty\",\n    col_type: \"text_center_1\",\n    extra: {\n        lineVisible: false\n    }\n});\n\nd.push({\n    col_type: \"line_blank\",\n    extra: {\n        id: \"qmgjx\"\n    }\n});\n\nsetResult(d);\ntry {\n    MY_URL = \"https://haikuoshijie.cn/\";\n    let html = request(MY_URL);\n    let arr = pdfa(html, \".post-list&&li\");\n    addItemAfter(\"qmgjx\", arr.map(it => {\n        return {\n            title: pdfh(it, \"h3--time&&Text\"),\n            url: \"x5://\" + pd(it, \"a&&href\"),\n            col_type: \"text_1\",\n            desc: pdfh(it, \".index-time&&Text\") + \"   \" + pdfh(it, \".post-meta&&span&&Text\")\n        }\n    }))\n} catch (e) {}","searchFind":"","search_url":"","group":"工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"pic\",\"path\":\"pic\",\"rule\":\"js:\\nvar d = [];\\nlet x = getItem(\\\"x\\\", \\\"否\\\");\\nlet desc = x == \\\"是\\\" ? \\\"float&&300\\\" : \\\"float&&1\\\";\\nd.push({\\n    col_type: \\\"x5_webview_single\\\",\\n    url: \\\"\\\",\\n    desc: desc,\\n    title: \\\"\\\",\\n    extra: {\\n        js: $.toString(() => {\\n            function getimgs() {\\n                var videoElements = document.getElementsByTagName(\\\"img\\\");\\n                if (videoElements == null) {\\n                    return [];\\n                }\\n                let urls = [];\\n                for (let i = 0; i < videoElements.length; i++) {\\n                    if (videoElements[i].width > 70 && videoElements[i].height > 70) {\\n                        const src = videoElements[i].src;\\n                        if (src == null || src.length < 5 || urls.includes(src) || src.indexOf(\\\"data:\\\") == 0) {\\n                            continue;\\n                        }\\n                        //log(src);\\n                        urls.push(new URL(src).toString());\\n                    }\\n                }\\n                return urls;\\n            }\\n\\n            function check() {\\n                try {\\n                    let urls = getimgs();\\n                    //fba.log(\\\"getimgs：\\\" + urls.length);\\n                    if (window.checkedUrls == null) {\\n                        window.checkedUrls = [];\\n                    }\\n                    let checkedUrls = window.checkedUrls;\\n                    urls = urls.filter(it => {\\n                        return !checkedUrls.includes(it)\\n                    });\\n\\n                    if (urls.length > 0) {\\n                        let pics = urls.filter(it => it != null && it != \\\"\\\")\\n                            .map(it => {\\n                                let u = fba.getHeaderUrl(it);\\n                                let uu = u.split(\\\";\\\");\\n                                let pic = u;\\n                                if (uu.length > 1) {\\n                                    let u1 = uu[0];\\n                                    let u2 = uu[1].slice(1, -1).split(\\\"&&\\\");\\n                                    let referer = null;\\n                                    let ua = null;\\n                                    let cookie0 = null;\\n                                    for (let ii of u2) {\\n                                        let it2 = ii.split(\\\"@\\\");\\n                                        if (it2[0] == \\\"Referer\\\") {\\n                                            referer = it2[1].replace(/；；/g, \\\";\\\");\\n                                        }\\n                                        if (it2[0] == \\\"User-Agent\\\") {\\n                                            ua = it2[1].replace(/；；/g, \\\";\\\");\\n                                        }\\n                                        if (it2[0] == \\\"Cookie\\\") {\\n                                            cookie0 = it2[1].replace(/；；/g, \\\";\\\");\\n                                        }\\n                                    }\\n                                    pic = u1;\\n                                    if (referer) {\\n                                        pic = pic + \\\"@Referer=\\\" + referer;\\n                                    }\\n                                    if (ua) {\\n                                        pic = pic + \\\"@User-Agent=\\\" + ua;\\n                                    }\\n                                    if (cookie0) {\\n                                        pic = pic + \\\"@Cookie=\\\" + cookie0\\n                                    }\\n\\n                                } else {\\n                                    pic = it;\\n                                }\\n                                return {\\n                                    pic: pic,\\n                                    url: u\\n                                }\\n                            });\\n                        fba.log(pics.length + \\\"\\\");\\n                        fba.parseLazyRuleAsync($$$().lazyRule((urls) => {\\n                            //log(urls);\\n\\n                            let arr = urls.map(it => {\\n                                return {\\n                                    title: \\\"\\\",\\n                                    url: it.pic,\\n                                    pic_url: it.pic,\\n                                    col_type: \\\"card_pic_3\\\",\\n                                    extra: {\\n                                        cls: \\\"pics\\\"\\n                                    }\\n                                }\\n                            });\\n                            addItemBefore(\\\"pic_line\\\", arr);\\n                        }, pics), function() {\\n\\n                        });\\n                        for (let it of urls) {\\n                            window.checkedUrls.push(it);\\n                        }\\n                    }\\n\\n                } catch (e) {\\n                    fba.log(e.toString());\\n                }\\n                setTimeout(check, 300);\\n            }\\n            check();\\n        })\\n    }\\n});\\n\\n\\nd.push({\\n    title: \\\"提取\\\",\\n    url: $.toString(() => {\\n        putMyVar(\\\"i\\\", input);\\n        deleteItemByCls(\\\"pics\\\");\\n        refreshX5WebView(input);\\n    }),\\n    col_type: \\\"input\\\",\\n    desc: \\\"请输入网页地址\\\",\\n    pic_url: \\\"\\\",\\n    extra: {\\n        defaultValue: getMyVar(\\\"i\\\", \\\"\\\")\\n    }\\n});\\nd.push({\\n    title: \\\"显示网页组件：\\\" + x,\\n    url: $(\\\"#noLoading#\\\").lazyRule(() => {\\n        let x = getItem(\\\"x\\\", \\\"否\\\");\\n        let next = x == \\\"否\\\" ? \\\"是\\\" : \\\"否\\\";\\n        setItem(\\\"x\\\", next);\\n        let desc = x == \\\"否\\\" ? \\\"float&&300\\\" : \\\"float&&1\\\";\\n        updateItem(\\\"pic_tip\\\", {\\n            title: \\\"显示网页组件：\\\" + next\\n        });\\n        refreshX5Desc(desc);\\n        return \\\"hiker://empty\\\"\\n    }),\\n    col_type: \\\"text_1\\\",\\n    desc: \\\"\\\",\\n    pic_url: \\\"\\\",\\n    extra: {\\n        id: \\\"pic_tip\\\"\\n    }\\n});\\n\\nd.push({\\n    col_type: \\\"line_blank\\\",\\n    extra: {\\n        id: \\\"pic_line\\\"\\n    }\\n});\\n\\nsetResult(d);\"}]","proxy":"","icon":""},{"last_chapter_rule":"","title":"模板·Q","author":"发粪涂墙","version":10,"type":"tool","url":"hiker://empty##fypage","col_type":"text_center_1","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nif (getItem(\"start\", \"\") == \"\") {\n    setItem(\"start\", \"1\")\n    confirm({\n        title: '温馨提示',\n        content: '请勿删除或改名此模板，以免依赖此模板的小程序无法使用！！\\n并特别感谢 Reborn LoyDgIk大佬的技术支持!!!',\n        confirm: '',\n        cancel: 'refreshPage()'\n    })\n}\naddListener(\"onClose\", $.toString(() => {\n    clearVar(\"template-url\")\n    clearVar(\"template-search-url\")\n    clearVar(\"template-pages-unfold\")\n}))\n\nlet d2 = [{\n    desc: \"输入分类或详情页链接测试匹配\",\n    col_type: \"input\",\n    url: \"input\",\n    title: \"测试\",\n    extra: {\n        onChange: \"putVar('template-url',input)\"\n    }\n},{\n    desc: \"输入搜索链接，**为关键字占位符\",\n    col_type: \"input\",\n    url: \"input\",\n    title: \"测试搜索\",\n    extra: {\n        titleVisible: false,\n        defaultValue: getVar(\"template-search-url\"),\n        onChange: \"putVar('template-search-url',input)\"\n    }\n}, {\n    desc: \"输入搜索关键词测试匹配\",\n    col_type: \"input\",\n    url: $.toString((ruleTitle)=>{\n            return \"hiker://search?s=\" + input +  \"&rule=\"+ ruleTitle;\n    }, MY_RULE.title),\n    title: \"测试搜索\",\n}, {\n    title: \"生成规则\",\n    col_type: \"text_center_1\",\n    url: \"input://////请输入规则名.js:\" + $.toString(() => {\n        var url = getVar('template-url', \"\");\n        if (url.length <= 0 || input.length <= 0) {\n            return \"toast://请先输入链接和规则名\"\n        }\n        var rule = {\n            \"last_chapter_rule\": \"\",\n            \"title\": input,\n            \"author\": \"\",\n            \"url\": url,\n            \"version\": 0,\n            \"col_type\": \"movie_3\",\n            \"class_name\": \"\",\n            \"class_url\": \"\",\n            \"area_name\": \"\",\n            \"area_url\": \"\",\n            \"sort_name\": \"\",\n            \"year_name\": \"\",\n            \"sort_url\": \"\",\n            \"year_url\": \"\",\n            \"find_rule\": \"js:\\nconst {\\n    autoPage\\n} = $.require(\\\"hiker://page/auto?rule=模板·Q\\\");\\nautoPage(getResCode())\",\n            \"search_url\": getVar(\"template-search-url\"),\n            \"titleColor\": \"\",\n            \"group\": \"测试\",\n            \"searchFind\": \"js:\\nconst {\\n    autoPage\\n} = $.require(\\\"hiker://page/auto?rule=模板·Q\\\");\\nautoPage(getResCode())\",\n            \"detail_col_type\": \"movie_1\",\n            \"detail_find_rule\": \"js:\\nvar lazy = $('').lazyRule(() => {\\n    try {\\n        var html = JSON.parse(request(input).match(/r player_.*?=(.*?)</)[1])\\n            var url = html.url\\n            if (html.encrypt == '1') {\\n                url = unescape(url);\\n            } else if (html.encrypt == '2') {\\n                url = unescape(base64Decode(url));\\n            }\\n            if (/m3u8|mp4/.test(url)) {\\n                return url\\n            } else {\\n                return 'video://' + input\\n            }\\n    } catch (e) {\\n        return 'video://' + input\\n    }\\n})\\n\\nconst {\\n    autoPage\\n} = $.require(\\\"hiker://page/auto?rule=模板·Q\\\");\\nautoPage(getResCode())\",\n            \"sdetail_col_type\": \"movie_1\",\n            \"sdetail_find_rule\": \"*\",\n            \"ua\": \"mobile\",\n            \"preRule\": \"if (request('hiker://home@模板·Q') == 'null') {\\n    confirm({\\n        title: '依赖检测',\\n        content: '检测到缺少模板依赖,请导入!',\\n        confirm: () => {\\n            return \\\"海阔视界首页频道规则【模板·Q】￥home_rule_url￥http://hiker.nokia.press/hikerule/rulelist.json?id=3055\\\"\\n        }\\n    })\\n}\",\n            \"pages\": \"[]\"\n        };\n        return \"海阔视界规则分享，当前分享的是：小程序￥home_rule￥\" + JSON.stringify(rule)\n    })\n},{\ntitle: '文字教程',\ncol_type: 'text_2',\nurl: 'hiker://page/detail?rule=视界论坛R',\nextra: {\n    url: 'https://haikuoshijie.cn/topic/8440#fypage#noHistory#',\n}\n},{\ntitle: '视频教程',\ncol_type: 'text_2',\nurl: \"video://https://www.bilibili.com/video/BV1dM4y1g7re?share_source=copy_web\"\n},{\ntitle: getVar('template-pages-unfold', 'false') === 'true'? '点我收缩模板列表': '点我展开模板列表',\ncol_type: 'text_center_1',\nurl: $(\"#noLoading#\").lazyRule((pageUnfold) => {\n     putVar('template-pages-unfold', pageUnfold === 'true' ? 'false' : 'true')\nrefreshPage(false)\nreturn 'toast://' + (getVar('template-pages-unfold', 'false') === 'true'? '展开成功': '收缩成功')\n}, getVar('template-pages-unfold', 'false'))\n},{\ntitle: '测试首页链接需要把页码改成fypage,如果上面的测试通过能显示图片，那么就说明是可以生成规则的，依次填入分类链接与搜索链接，第三个框留空点击生成规则，填好名字即可，详细添加分类词之类的请点击上面的两个教程链接参考！！',\ncol_type: 'rich_text'\n}]\nif(getVar('template-pages-unfold', 'false') === 'true') {\nlet d = []\nd.push({\n    title: '点击模板可查看代码：',\n    col_type: 'rich_text'\n})\nlet pageList = MY_RULE.pageList.filter(page => page.name != '字符串处理工具'\n&& page.name != '#Mapping'\n&& page.name != '#auto')\nfor (let page of pageList) {\n    d.push({\n        title: page.name,\n        col_type: 'text_2',\n        url: $().rule((page) => {\n            const {\n                htmlEscape\n            } = $.require(\"hiker://page/stringtool\");\n            let d = []\n            d.push({\n                title: htmlEscape(page.rule),\n                col_type: 'rich_text'\n            })\n            setResult(d)\n        }, page)\n    })\n}\nd2.push.apply(d2, d)\n}\nsetResult(d2)","searchFind":"js:\nconst {\n    autoPage\n} = $.require(\"hiker://page/auto?rule=模板·Q\");\nautoPage(getResCode())","search_url":"hiker://empty#**#fypage.js: let surl =  getVar(\"template-search-url\")；；let insplits=input.split(\"#\")；；let url = surl.replace(base64Decode(\"Kio=\"), insplits[1]).replace(base64Decode(\"ZnlwYWdl\"), insplits[2])；；url；；","titleColor":"","group":"工具","detail_col_type":"movie_3","detail_find_rule":"js:\nvar lazy = '';\nconst {\n    autoPage\n} = $.require(\"hiker://page/auto?rule=模板·Q\");\nautoPage(getResCode())","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"auto","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"一级stui-vodlist\",\"path\":\"stui-vodlist\",\"rule\":\"var d = [];\\nMY_RULE.url.match(/fypage/)[0]\\nvar list = pdfa(getResCode(), '.stui-vodlist&&li');\\nfor (var j in list) {\\n    d.push({\\n        title: pdfh(list[j], 'a&&title'),\\n        desc: pdfh(list[j], '.pic-text&&Text'),\\n        img: pd(list[j], '.lazyload||a&&data-original')+'@Referer=',\\n        url: pd(list[j], 'a&&href') + '#immersiveTheme#'\\n    });\\n}\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"二级.b\",\"path\":\".b\",\"rule\":\"var d = [];\\nvar html = getResCode();\\n\\nd.push({\\n    title: pdfh(html, '.stui-content__detail--h1&&Text')\\n        .replace('地区', '\\\\n地区')\\n        .replace('主演', '\\\\n主演'),\\n    desc: pdfh(html, '.desc||.detail-content&&Text'),\\n    pic_url: pd(html, '.lazyload&&data-original'),\\n    url: MY_URL,\\n    col_type: 'movie_1_vertical_pic_blur'\\n});\\nvar 线路 = 'body&&.b'\\nvar 选集 = 线路\\nvar 线路名 = 'h3&&Text'\\nvar 选集列表 = 'ul&&li'\\neval(JSON.parse(request('hiker://page/erji?rule=模板·Q')).rule)\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"搜索stui-vodlist__media\",\"path\":\"stui-vodlist__media\",\"rule\":\"var d = [];\\nvar list = pdfa(getResCode(), '.stui-vodlist__media&&li');\\nlog('搜索结果')\\nlog(list)\\nif (list.length == 0) throw \\\"搜索为空，可能匹配错误\\\"\\nfor (var j in list) {\\n    d.push({\\n        title: pdfh(list[j], 'a&&title'),\\n        desc: pdfh(list[j], '.pic-text&&Text'),\\n        img: pd(list[j], 'a&&data-original'),\\n        content: pdfh(list[j], '.detail--h3&&Text'),\\n        url: pd(list[j], 'a&&href')+'#immersiveTheme#'\\n    });\\n}\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"一级myui-vodlist\",\"path\":\"myui-vodlist\",\"rule\":\"var d = []\\nMY_RULE.url.match(/fypage/)[0]\\nvar list = pdfa(getResCode(), '.myui-vodlist&&li')\\nfor (var j in list) {\\n    d.push({\\n        title: pdfh(list[j], 'h4&&Text'),\\n        desc: pdfh(list[j], '.pic-tag||.pic-text&&Text'),\\n        img: pd(list[j], '.lazyload&&data-original'),\\n        url: pd(list[j], 'a&&href').replace('vodplay','voddetail') + '#immersiveTheme#'\\n    })\\n}\\nsetResult(d)\"},{\"col_type\":\"movie_3\",\"name\":\"二级nav-tabs\",\"path\":\"nav-tabs\",\"rule\":\"var d = [];\\nvar html = getResCode();\\n\\nd.push({\\n    title: pdfh(html, '.data&&Text')\\n        .replace('地区：', '  ')\\n        .replace('年份：', '  ') + '\\\\n' +\\n        pdfh(html, '.data,1&&Text')\\n        .substring(0, 15) + '\\\\n' +\\n        pdfh(html, '.data,2&&Text'),\\n    desc: pdfh(html, '.data,3&&Text'),\\n    img: pd(html, '.lazyload&&data-original'),\\n    url: MY_URL,\\n    col_type: 'movie_1_vertical_pic_blur'\\n});\\nvar 线路 = '.nav-tabs&&a'\\nvar 选集 = '.tab-content&&.myui-content__list||.stui-content__playlist'\\nvar 线路名 = 'Text'\\nvar 选集列表 = 'ul&&li'\\neval(JSON.parse(request('hiker://page/erji?rule=模板·Q')).rule)\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"搜索myui-vodlist__media\",\"path\":\"myui-vodlist__media\",\"rule\":\"var d = [];\\nvar list = pdfa(getResCode(), '#searchList&&li');\\nlog('搜索结果')\\nlog(list)\\nif (list.length == 0) throw \\\"搜索为空，可能匹配错误\\\"\\nfor (var j in list) {\\n    d.push({\\n        title: pdfh(list[j], 'a&&title'),\\n        desc: pdfh(list[j], '.pic-text&&Text'),\\n        pic_url: pd(list[j], 'a&&data-original'),\\n        content: pdfh(list[j], '.detail--h4&&Text'),\\n        url: pd(list[j], 'a&&href')+'#immersiveTheme#'\\n    })\\n}\\nsetResult(d)\"},{\"col_type\":\"movie_3\",\"name\":\"一级vodlist\",\"path\":\"vodlist\",\"rule\":\"var d = [];\\nMY_RULE.url.match(/fypage/)[0]\\nvar list = pdfa(getResCode(), '.vodlist&&li');\\nfor (var j in list) {\\n  d.push({\\n       title: pdfh(list[j], 'a&&title'),\\n       desc: pdfh(list[j], 'a&&Text'),\\n       pic_url: pd(list[j], '.lazyload&&data-original')+'@Referer=',\\n       url: pd(list[j],'a&&href') + '#immersiveTheme#'\\n  });\\n}\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"二级mo-play-load\",\"path\":\"mo-play-load\",\"rule\":\"var d = [];\\nvar html = getResCode();\\n\\nd.push({\\n    title: pdfh(html, '.video-info-items,2&&Text')\\n  .replace('分类|', '')\\n  .replace('地区：', '')\\n  .replace('年份：', ' ').substring(0, 18) + '\\\\n' + '\\\\n' + \\n  pdfh(html, '.video-info-items,1&&Text').substring(0, 18),\\n    pic_url: pd(html, '.lazyload&&data-src'),\\n    url: MY_URL,\\n    col_type: 'movie_1_vertical_pic_blur'\\n});\\n\\nvar 线路 = 'body&&.module-tab-content&&.module-tab-item'\\nvar 选集 = 'body&&.sort-item'\\nvar 线路名 = 'span&&Text'\\nvar 选集列表 = 'body&&a'\\neval(JSON.parse(request('hiker://page/erji?rule=模板·Q')).rule)\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"二级nav-tabs1\",\"path\":\"nav-tabs1\",\"rule\":\"var d = [];\\nvar html = getResCode();\\n\\nd.push({\\n    title: pdfh(html, 'p,1&&Text')\\n        .replace('类型：', '')\\n        .replace('地区：', ' ')\\n        .replace('年份：', '')\\n        .replace('语言：', '') +\\n        '\\\\n\\\\n' + pdfh(html, 'p,4&&Text')\\n        .substring(0, 30),\\n    desc: pdfh(html, 'p,2&&Text'),\\n    pic_url: pd(html, '.lazyload&&data-original'),\\n    url: MY_URL,\\n    col_type: 'movie_1_vertical_pic_blur'\\n});\\n\\nvar 线路 = '.nav-tabs&&a'\\nvar 选集 = 'body&&.stui-content__playlist'\\nvar 线路名 = 'a&&Text'\\nvar 选集列表 = 'ul&&li'\\neval(JSON.parse(request('hiker://page/erji?rule=模板·Q')).rule)\\nsetResult(d);\"},{\"col_type\":\"flex_button\",\"name\":\"定位二级\",\"path\":\"erji\",\"rule\":\"var tabs = []\\nvar lists = []\\n\\npdfa(html, 线路).forEach((data, id) => {\\n    data = pdfh(data, 线路名)\\n    if (typeof(排除) != 'undefined' && 排除 != '') {\\n        data = data.replace(new RegExp(排除, \\\"g\\\"), \\\"\\\")\\n    }\\n\\n    tabs.push(data)\\n})\\n\\npdfa(html, 选集).forEach((data, id) => {\\n    lists.push(pdfa(data, 选集列表))\\n})\\naddListener(\\\"onClose\\\", $.toString(() => {\\n    clearMyVar(\\\"lists\\\");\\n}));\\nstorage0.putMyVar(\\\"lists\\\", lists);\\nvar list = lists[getMyVar(MY_URL, '0')];\\nvar 排序 = getMyVar(MY_URL + \\\"章节排序\\\", '#1aad19\\\">正序');\\nvar 提示 = 排序 == '#FF0000\\\">倒序' ? '#1aad19\\\">正序' : '#FF0000\\\">倒序';\\nvar 排序名 = '““””<b><span style=\\\"color:排序</span></b>'\\n\\nd.push({\\n    title: '““””<b><span style=\\\"color: ' + 排序 + '</span></b>',\\n    url: $(\\\"#noLoading#\\\").lazyRule((tabs, 排序名, lazy, d) => {\\n        var lists = storage0.getMyVar(\\\"lists\\\");\\n        var 章节 = lists[getMyVar(MY_URL, '0')];\\n        var 排序 = getMyVar(MY_URL + \\\"章节排序\\\", '#1aad19\\\">正序');\\n        var 提示 = 排序 == '#FF0000\\\">倒序' ? '#1aad19\\\">正序' : '#FF0000\\\">倒序';\\n        updateItem({\\n            extra: {\\n                id: MY_URL + \\\"_排序\\\",\\n                longClick: [{\\n                    title: \\\"TVbox推送\\\",\\n                    js: $.toString((tabs, lists, d) => {\\n                        var 推送 = {\\n                            \\\"name\\\": getPageTitle(),\\n                            \\\"content\\\": d.desc,\\n                            \\\"pic\\\": d.img || d.pic_url,\\n                            \\\"from\\\": tabs.join('$$$'),\\n                            \\\"url\\\": storage0.getMyVar(\\\"lists\\\").map(li => {\\n                                return li.map(li1 => pdfh(li1, 'Text') + '$' + pd(li1, 'a&&href')).join('#')\\n                            }).join('$$$')\\n                        }\\n                        return \\\"hiker://page/push?rule=XYQ推送&pushurl=\\\" + encodeURIComponent(JSON.stringify(推送))\\n                    }, tabs, lists, d)\\n                }]\\n            },\\n            title: 排序名.replace('排序', 提示)\\n        })\\n        if (排序 == '#1aad19\\\">正序') {\\n            章节.reverse()\\n        }\\n        let cp = 章节.map((data, ssid) => {\\n            return {\\n                title: pdfh(data, 'a&&Text'),\\n                url: pd(data, 'a&&href') + lazy,\\n                col_type: 章节.length > 3 ? 'text_4' : 'text_2',\\n                extra: {\\n                    cls: MY_URL + \\\"_选集\\\",\\n                    id: pd(data, 'a&&href')\\n                }\\n            };\\n        });\\n        deleteItemByCls(MY_URL + \\\"_选集\\\");\\n        addItemBefore(MY_URL + \\\"footer\\\", cp);\\n        putMyVar(MY_URL + \\\"章节排序\\\", 提示)\\n        return \\\"hiker://empty\\\"\\n    }, tabs, 排序名, lazy, d[0]),\\n    col_type: 'flex_button',\\n    extra: {\\n        id: MY_URL + \\\"_排序\\\",\\n        longClick: [{\\n            title: \\\"TVbox推送\\\",\\n            js: $.toString((tabs, lists, d) => {\\n                var 推送 = {\\n                    \\\"name\\\": getPageTitle(),\\n                    \\\"content\\\": d.desc,\\n                    \\\"pic\\\": d.img || d.pic_url,\\n                    \\\"from\\\": tabs.join('$$$'),\\n                    \\\"url\\\": storage0.getMyVar(\\\"lists\\\").map(li => {\\n                        return li.map(li1 => pdfh(li1, 'Text') + '$' + pd(li1, 'a&&href')).join('#')\\n                    }).join('$$$')\\n                }\\n                return \\\"hiker://page/push?rule=XYQ推送&pushurl=\\\" + encodeURIComponent(JSON.stringify(推送))\\n            }, tabs, lists, d[0])\\n        }]\\n    }\\n})\\n\\ntabs.forEach((data, id) => {\\n    d.push({\\n        title: getMyVar(MY_URL, '0') == id ? '““' + data + '””' : data,\\n        url: $(\\\"#noLoading#\\\").lazyRule((线路, lazy, id) => {\\n            var lists = storage0.getMyVar(\\\"lists\\\");\\n            var 排序 = getMyVar(MY_URL + \\\"章节排序\\\", '#1aad19\\\">正序');\\n            var 提示 = 排序 == '#FF0000\\\">倒序' ? '#1aad19\\\">正序' : '#FF0000\\\">倒序';\\n            线路.forEach((data, xlid) => {\\n                updateItem({\\n                    title: id == xlid ? '““' + data + '””' : data,\\n                    extra: {\\n                        id: MY_URL + \\\"_线路\\\" + xlid\\n                    }\\n                });\\n            })\\n            putMyVar(MY_URL, id)\\n            var 章节 = lists[getMyVar(MY_URL, '0')];\\n            if (排序 == '#FF0000\\\">倒序') {\\n                章节.reverse()\\n            }\\n            let cp = 章节.map((data, ssid) => {\\n                return {\\n                    title: pdfh(data, 'a&&Text'),\\n                    url: pd(data, 'a&&href') + lazy,\\n                    col_type: 章节.length > 3 ? 'text_4' : 'text_2',\\n                    extra: {\\n                        cls: MY_URL + \\\"_选集\\\",\\n                        id: pd(data, 'a&&href')\\n                    }\\n                };\\n            });\\n            deleteItemByCls(MY_URL + \\\"_选集\\\");\\n            addItemBefore(MY_URL + \\\"footer\\\", cp);\\n            return \\\"hiker://empty\\\"\\n        }, tabs, lazy, id),\\n        col_type: 'flex_button',\\n        extra: {\\n            id: MY_URL + \\\"_线路\\\" + id\\n        }\\n    });\\n})\\n\\nif (排序 == '#FF0000\\\">倒序') {\\n    list.reverse()\\n}\\nlist.forEach((data, id) => {\\n    d.push({\\n        title: pdfh(data, 'a&&Text'),\\n        url: pd(data, 'a&&href') + lazy,\\n        col_type: list.length > 3 ? 'text_4' : 'text_2',\\n        extra: {\\n            cls: MY_URL + \\\"_选集\\\",\\n            id: pd(data, 'a&&href')\\n        }\\n    });\\n})\\nlet newstip = list.length;\\nif (newstip) {\\n    setLastChapterRule('js:' + $.toString((newstip) => {\\n        setResult('更新至: 第' + newstip + \\\"集\\\");\\n    }, newstip));\\n}\\n\\nd.push({\\n    col_type: \\\"big_blank_block\\\",\\n    extra: {\\n        id: MY_URL + \\\"footer\\\"\\n    }\\n});\"},{\"col_type\":\"movie_3\",\"name\":\"二级play_source_tab\",\"path\":\"play_source_tab\",\"rule\":\"var d = [];\\nvar html = getResCode();\\n\\nd.push({\\n    title: pdfh(html, '.remarks&&Text') +\\n        '\\\\n' + pdfh(html, '.s-top-info-detail&&a&&Text') +\\n        pdfh(html, '.s-top-info-detail&&a,1&&Text') +\\n        pdfh(html, '.s-top-info-detail&&a,2&&Text') +\\n        '\\\\n““简介：不能用就删掉吧””',\\n    desc: pdfh(html, '.desc_txt&&Text').substring(0, 20),\\n    img: pd(html, '.img-cover||.vod-detail-bj&&src'),\\n    url: MY_URL,\\n    col_type: 'movie_1_vertical_pic_blur'\\n});\\nvar 线路 = '.play_source_tab&&a'\\nvar 选集 = 'body&&.player_list||#playlistbox||#playsx'\\nvar 线路名 = 'a&&Text'\\nvar 选集列表 = 'ul&&li'\\neval(JSON.parse(request('hiker://page/erji?rule=模板·Q')).rule)\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"二级fed-play-item\",\"path\":\"fed-play-item\",\"rule\":\"var d = [];\\nvar html = getResCode();\\n\\nd.push({\\n    title: pdfh(html, 'dd&&li,3&&Text') +\\n        '\\\\n' + pdfh(html, 'dd&&li,4&&Text')\\n        .substring(0, 15) + '\\\\n' +\\n        pdfh(html, 'dd&&li,5&&Text')\\n        .substring(0, 15),\\n    desc: pdfh(html, 'dd&&li,6&&Text').substring(0, 25),\\n    pic_url: pd(html, '.fed-lazy&&data-original'),\\n    url: MY_URL,\\n    col_type: 'movie_1_vertical_pic'\\n});\\nvar 线路 = 'body&&.fed-drop-btns'\\nvar 选集 = 'body&&.fed-play-item'\\nvar 线路名 = 'a&&Text'\\nvar 选集列表 = 'body&&.fed-btns-info'\\neval(JSON.parse(request('hiker://page/erji?rule=模板·Q')).rule)\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"搜索dl\",\"path\":\"dl\",\"rule\":\"var d = [];\\nvar list = pdfa(getResCode(), 'body&&dl');\\nlog('搜索结果')\\nlog(list)\\nif (list.length == 0) throw \\\"搜索为空，可能匹配错误\\\"\\nfor (var j in list) {\\n  d.push({\\n       title: pdfh(list[j], 'h1&&Text'),\\n       desc: pdfh(list[j], '.fed-list-remarks&&Text'),\\n\\t    content: pdfh(list[j], '.fed-part-esan--span&&Text'),\\n       img: pd(list[j], 'a&&data-original'),\\n       url: pd(list[j], 'a&&href')\\n  });\\n}\\nsetResult(d)\"},{\"col_type\":\"movie_3\",\"name\":\"#Mapping\",\"path\":\"Mapping\",\"rule\":\"js:\\n$.exports = {\\n    \\\"home\\\": [{\\n            keys: [\\\" b \\\"],\\n            url: \\\".b\\\",\\n            //     allKey: true,\\n        },\\n        {\\n            keys: [\\\"nav-tabs\\\"],\\n            url: \\\"nav-tabs\\\",\\n        },\\n        {\\n            keys: [\\\"myui-content__list\\\"],\\n            url: \\\"myui-content__list\\\",\\n        },\\n        {\\n            keys: [\\\"nav-tabs\\\", \\\"stui-content__playlist\\\"],\\n            url: \\\"nav-tabs1\\\",\\n            allKey: true,\\n        },\\n        {\\n            keys: [\\\"h3\\\", \\\"stui-content__playlist\\\"],\\n            url: \\\"h3\\\",\\n            allKey: true,\\n        },\\n        {\\n            keys: [\\\"myui-vodlist \\\"],\\n            url: \\\"myui-vodlist\\\",\\n        },\\n        {\\n            keys: [\\\"mo-movs-item\\\"],\\n            url: \\\"mo-movs-item\\\",\\n        },\\n        {\\n            keys: [\\\"module-tab-item\\\"],\\n            url: \\\"module-tab-item\\\",\\n            //     allKey: true,\\n        },{\\n            keys: [\\\"y-playList\\\"],\\n            url: \\\"y-playList\\\",\\n        },\\n        {\\n            keys: [\\\"stui-vodlist \\\"],\\n            url: \\\"stui-vodlist\\\",\\n            //     allKey: true,\\n        },\\n        {\\n            keys: [\\\"play_source_tab\\\"],\\n            url: \\\"play_source_tab\\\",\\n        },\\n        {\\n            keys: [\\\"fed-play-item\\\"],\\n            url: \\\"fed-play-item\\\",\\n        },\\n        {\\n            keys: [\\\"module-item\\\"],\\n            url: \\\"module-items\\\",\\n        },\\n        {\\n            keys: [\\\"vodlist \\\", \\\"lazyload\\\"],\\n            url: \\\"vodlist\\\",\\n            allKey: true,\\n        },\\n        {\\n            keys: [\\\"mo-play-load\\\"],\\n            url: \\\"mo-play-load\\\",\\n        },\\n        {\\n            keys: [\\\"fed-list-title\\\"],\\n            url: \\\"fed-list-title\\\",\\n            //allKey: true,\\n        },\\n        {\\n            keys: [\\\"pack-ykpack\\\\\\\"\\\"],\\n            url: \\\"pack-ykpack\\\",\\n        },\\n        /*\\n                {\\n                    keys: [\\\"item\\\"],\\n                    url: \\\"item\\\",\\n                },*/\\n        {\\n            keys: [\\\"data_list\\\"],\\n            url: \\\"data_list\\\",\\n        },\\n    ],\\n    \\\"search\\\": [{\\n            keys: [\\\"stui-vodlist__media\\\"],\\n            url: \\\"stui-vodlist__media\\\",\\n        },\\n        {\\n            keys: [\\\"myui-vodlist__media\\\"],\\n            url: \\\"myui-vodlist__media\\\",\\n        },\\n        {\\n            keys: [\\\"module-search-item\\\"],\\n            url: \\\"module-search-item\\\",\\n        },\\n        {\\n            keys: [\\\"stui-vodlist \\\"],\\n            url: \\\"stui-vodlist\\\",\\n            //     allKey: true,\\n        },\\n        {\\n            keys: [\\\"dl \\\"],\\n            url: \\\"dl\\\",\\n            allKey: true,\\n        },\\n        {\\n            keys: [\\\"module-items\\\"],\\n            url: \\\"module-items\\\",\\n        },\\n    ]\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"#auto\",\"path\":\"auto\",\"rule\":\"js:\\nfunction getPageSource(key) {\\n    let src = request(\\\"hiker://page/\\\" + key + \\\"?rule=模板·Q\\\");\\n    src = JSON.parse(src).rule;\\n    return src;\\n}\\nconst sourceMap = $.require(\\\"hiker://page/Mapping?rule=模板·Q\\\");\\n\\nfunction autoPage(htmlsrc, type) {\\n    let pageRules = [],\\n        htmlSource = htmlsrc,\\n        pageType,\\n        mMapping;\\n    if (type !== undefined) {\\n        pageType = type;\\n    } else {\\n        pageType = MY_TYPE;\\n    }\\n    mMapping = sourceMap[pageType];\\n    if (mMapping === undefined || !Array.isArray(mMapping)) {\\n        throw new Error(\\\"不存在\\\" + pageType + \\\"类型的模板\\\");\\n    }\\n    for (let item of mMapping) {\\n        if (item.allKey) {\\n            if (item.keys.every(key => htmlSource.includes(key))) {\\n                pageRules.push(item);\\n            }\\n        } else {\\n            if (item.keys.some(key => htmlSource.includes(key))) {\\n                pageRules.push(item);\\n            }\\n        }\\n    }\\n    if(pageRules.length == 0) {\\n        log(\\\"暂无合适的模板\\\");\\n    }\\n    for (let pageRule of pageRules) {\\n        log(\\\"正在匹配：\\\" + pageRule.url);\\n        try {\\n            eval.call(null, \\\";(function(){\\\" + getPageSource(pageRule.url) + \\\"})()\\\");\\n            log(\\\"匹配模板成功，正在结束匹配进程\\\");\\n            break;\\n        } catch (e) {\\n            log(\\\"匹配模板错误\\\");\\n            log(e.toString())\\n            log(\\\"正在匹配下一个模板......\\\")\\n            if (pageRule.url == pageRules[pageRules.length - 1].url) {\\n                log(\\\"已匹配到最后一个模板，暂无合适的模板\\\");\\n                setResult([]);\\n            }\\n        }\\n    }\\n\\n}\\n$.exports.autoPage = autoPage;\"},{\"col_type\":\"movie_3\",\"name\":\"一级pack-ykpack\",\"path\":\"pack-ykpack\",\"rule\":\"var d =[];\\nMY_RULE.url.match(/fypage/)[0]\\nvar list = pdfa(getResCode(), 'body&&.pack-ykpack');\\nfor (var j in list) {\\n  d.push({\\n       title: pdfh(list[j], 'a&&title'),\\n       desc: pdfh(list[j], 'span,-1&&Text'),\\n       img: pd(list[j], '.eclazy&&data-original')+'@Referer=',\\n       url: pd(list[j],'a&&href')+ '#immersiveTheme#'\\n  });\\n}\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"一级module-items\",\"path\":\"module-items\",\"rule\":\"MY_RULE.url.match(/fypage/)[0]\\nvar d = []\\nvar list = pdfa(getResCode(), 'body&&.module-item');\\nfor (var j in list) {\\n    d.push({\\n        title: pdfh(list[j], 'strong||a&&Text||title'),\\n        desc: pdfh(list[j], '.module-item-text||.module-item-note&&Text'),\\n        pic_url: pd(list[j], 'img||.lazy&&data-src||data-original||src') + '@Referer=',\\n        url: pd(list[j], 'a&&href') + \\\"#immersiveTheme#\\\"\\n    });\\n}\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"二级module-tab-item\",\"path\":\"module-tab-item\",\"rule\":\"var d = [];\\nvar html = getResCode();\\n\\ntry {\\n    var title = pdfa(html, 'body--a&&.tag-link');\\n} catch (e) {\\n    var title = '';\\n}\\nvar T = [];\\nfor (var i in title) {\\n    T.push(pdfh(title[i], 'a&&Text'))\\n}\\n\\nd.push({\\n    title: T.join('  ') + '\\\\n' +\\n        pdfh(html, '.video-info-items,1&&Text')\\n        .split('/').join('  ')\\n        .substring(0, 20) + '\\\\n' +\\n        pdfh(html, '.video-info-items&&Text')\\n        .split('/').join('  ')\\n        .substring(0, 20),\\n    desc: pdfh(html, '.video-info-items,2&&Text'),\\n    img: pd(html, '.lazyload&&data-original||data-src||src'),\\n    url: MY_URL,\\n    col_type: 'movie_1_vertical_pic_blur'\\n});\\nvar 线路 = 'body&&.module-tab-item'\\nvar 选集 = 'body&&.scroll-box-y||.module-list'\\nvar 线路名 = 'span&&Text'\\nvar 选集列表 = 'body&&a'\\neval(JSON.parse(request('hiker://page/erji?rule=模板·Q')).rule)\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"搜索module-search-item\",\"path\":\"module-search-item\",\"rule\":\"var d = [];\\nvar list = pdfa(getResCode(), 'body&&.module-search-item');\\nlog('搜索结果')\\nlog(list)\\nif (list.length == 0) throw \\\"搜索为空，可能匹配错误\\\"\\nfor (var j in list) {\\n    d.push({\\n        title: pdfh(list[j], 'h3&&Text'),\\n        desc: pdfh(list[j], '.video-serial&&Text'),\\n        content: pdfh(list[j], '.video-info-aux&&Text'),\\n        img: pd(list[j], 'img&&data-original||data-src'),\\n        url: pd(list[j], '.video-serial&&href') + '#immersiveTheme#'\\n    });\\n}\\nsetResult(d)\"},{\"col_type\":\"movie_3\",\"name\":\"一级item\",\"path\":\"item\",\"rule\":\"var d = [];\\nMY_RULE.url.match(/fypage/)[0]\\nvar list = pdfa(getResCode(), 'body&&.item');\\nfor (let i in list) {\\n    d.push({\\n        title: pdfh(list[i], 'img&&alt'),\\n        desc: pdfh(list[i], 'p&&Text'),\\n        pic_url: pd(list[i], 'img&&src'),\\n        url: pd(list[i], 'a&&href'),\\n        col_type: 'movie_3'\\n    })\\n}\\nsetResult(d)\"},{\"name\":\"一级data_list\",\"path\":\"data_list\",\"rule\":\"var d = [];\\nMY_RULE.url.match(/fypage/)[0]\\nvar list = pdfa(getResCode(), '#data_list&&li');\\nfor (let i in list) {\\n    d.push({\\n        title: pdfh(list[i], 'a&&title'),\\n        desc: pdfh(list[i], 'em&&Text'),\\n        pic_url: pd(list[i], 'img&&data-src'),\\n        url: pd(list[i], 'a&&href'),\\n        col_type: 'movie_3'\\n    })\\n}\\nsetResult(d)\"},{\"col_type\":\"movie_3\",\"name\":\"二级h3\",\"path\":\"h3\",\"rule\":\"var d = [];\\nvar html = getResCode();\\n\\nd.push({\\n    title: pdfh(html, '.data,2&&Text')\\n        .replace('类型：', '')\\n        .replace('地区：', '')\\n        .replace('年份：', ' ')\\n        .substring(0, 18) + '\\\\n' +\\n        pdfh(html, '.data,1&&Text')\\n        .substring(0, 15) + '\\\\n' +\\n        pdfh(html, '.data&&Text')\\n        .substring(0, 15),\\n    desc: pdfh(html, '.detail-sketch||.data,3||#desc&&Text'),\\n    img: pd(html, '.lazyload&&data-original'),\\n    url: MY_URL,\\n    col_type: 'movie_1_vertical_pic_blur'\\n});\\n\\nvar 线路 = 'body&&.stui-pannel:has(.stui-content__playlist)'\\nvar 选集 = 'body&&.stui-content__playlist'\\nvar 线路名 = 'h3&&Text'\\nvar 选集列表 = 'ul&&li'\\neval(JSON.parse(request('hiker://page/erji?rule=模板·Q')).rule)\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"一级fed-list-title\",\"path\":\"fed-list-title\",\"rule\":\"var d = [];\\nMY_RULE.url.match(/fypage/)[0]\\nvar list = pdfa(getResCode(), '.fed-list-info&&li');\\nfor (var j in list) {\\n  d.push({\\n       title: pdfh(list[j], '.fed-list-title&&Text'),\\n       desc: pdfh(list[j], '.fed-text-center&&Text'),\\n       img: pd(list[j], 'a&&data-original')+'@Referer=',\\n       url: pd(list[j], 'a&&href')\\n  });\\n}\\nsetResult(d)\"},{\"col_type\":\"movie_3\",\"name\":\"二级myui-content__list\",\"path\":\"myui-content__list\",\"rule\":\"var d = [];\\nvar html = getResCode();\\n\\nd.push({\\n    title: pdfh(html, '.data,0&&Text')\\n        .replace('地区：', '  ')\\n        .replace('年份：', '  ') + '\\\\n' +\\n        pdfh(html, '.data,1&&Text')\\n        .substring(0, 15) + '\\\\n' +\\n        pdfh(html, '.data,2&&Text'),\\n    desc: pdfh(html, '.data,3&&Text'),\\n    pic_url: pd(html, '.lazyload&&data-original'),\\n    url: MY_URL,\\n    col_type: 'movie_1_vertical_pic_blur'\\n});\\nvar 线路 = 'body&&.myui-panel-box:has(.myui-content__list)'\\nvar 选集 = 'body&&.myui-content__list'\\nvar 线路名 = 'h3&&Text'\\nvar 选集列表 = 'ul&&li'\\neval(JSON.parse(request('hiker://page/erji?rule=模板·Q')).rule)\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"字符串处理工具\",\"path\":\"stringtool\",\"rule\":\"js:\\nconst matchList  = {\\n  // \\\"<\\\":\\\"&lt;\\\",\\n  // \\\">\\\": \\\"&gt;\\\",\\n  // \\\"&\\\": \\\"&amp;\\\",\\n  // '\\\"': \\\"&quot;\\\",\\n  // \\\"'\\\": \\\"acute;\\\",\\n  \\\" \\\": \\\"&nbsp;\\\",\\n  \\\"\\\\n\\\":\\\"<br>\\\"\\n}\\n// 字符过滤器\\nfunction htmlEscape(text){\\n  let regStr = '(' + Object.keys(matchList).toString() + ')'\\n  regStr = regStr.replace(/,/g, ')|(')  \\n  const regExp = new RegExp(regStr, 'g')\\n  return text.replace(regExp, match => matchList[match])\\n}\\n$.exports.htmlEscape = htmlEscape\"},{\"col_type\":\"movie_3\",\"name\":\"动态分类1\",\"path\":\"dtfl\",\"rule\":\"const empty = \\\"hiker://empty\\\"\\n\\nif (typeof(拼接分类) != 'undefined' && 拼接分类 != '') {\\n    var categories = pdfa(html, 大类定位).concat(pdfa(html, 拼接分类))\\n} else {\\n    var categories = pdfa(html, 大类定位)\\n}\\n\\nlet init_cate = []\\n\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push(\\\"0\\\")\\n}\\n\\nconst fold = getVar(MY_RULE.group, \\\"0\\\")\\nconst cate_temp_json = getVar(MY_RULE.title, JSON.stringify(init_cate))\\nconst cate_temp = JSON.parse(cate_temp_json)\\n\\nif (parseInt(page) === 1) {\\n    d.push({\\n        title: fold === '1' ? '““””<b>' + '∨'.fontcolor(\\\"#FF0000\\\") + '</b>' : '““””<b>' + '∧'.fontcolor(\\\"#1aad19\\\") + '</b>',\\n        url: $().lazyRule((fold) => {\\n            putVar(MY_RULE.group, fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\n    categories.forEach((category, index) => {\\n        let sub_categories = pdfa(category, 小类定位);\\n        if (index === 0) {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                if (typeof(排除) != 'undefined' && 排除 != '') {\\n                    title = title.replace(new RegExp(排除, \\\"g\\\"), \\\"\\\")\\n                }\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? \\\"““””\\\" + title.fontcolor(分类颜色) : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        let new_cate = []\\n                        params.cate_temp.forEach((cate, index) => {\\n                            new_cate.push(index === 0 ? params.key.toString() : \\\"0\\\")\\n                        })\\n                        putVar(MY_RULE.title, JSON.stringify(new_cate))\\n                        putVar(MY_RULE.url, input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        } else if (fold === '1') {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                if (typeof(排除) != 'undefined' && 排除 != '') {\\n                    title = title.replace(new RegExp(排除, \\\"g\\\"), \\\"\\\")\\n                }\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? \\\"““””\\\" + title.fontcolor(分类颜色) : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        params.cate_temp[params.index] = params.key.toString()\\n\\n                        putVar(MY_RULE.title, JSON.stringify(params.cate_temp))\\n                        putVar(MY_RULE.url, input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        index: index,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        }\\n    })\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"一级公共模板\",\"path\":\"yiji\",\"rule\":\"function 一级() {};\\nObject.assign(一级.prototype, {\\n    constructor: 一级,\\n    test() {},\\n    获取源码(url, header) {\\n        return fetch(true_url, {\\n            headers: header || {\\n                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0)'\\n            }\\n        }) // 默认统一使用PC UA\\n    },\\n    获取正确链接(page, regex) {\\n        let true_url = getMyVar('header.url', MY_URL);\\n        let 链接处理工具 = $.require('hiker://page/url-processor?rule=模板·Q')\\n        true_url = 链接处理工具\\n            .链接(true_url)\\n            .页码(page)\\n            .插入新处理规则(regex || [])\\n            .获取处理结果();\\n        return true_url;\\n    },\\n    打造分类(ruleList) {\\n        // '0' 为默认不折叠，'1' 为默认折叠\\n        const 当前折叠状态 = getMyVar('header.fold', '1')\\n\\n        // 引入动态分类依赖\\n        let htmlCategories = $.require('hiker://page/categories-header?rule=模板·Q')\\nvar getRangeColors = function(){\\n        return '#'+('00000'+(Math.random()*0x1000000<<0).toString(16)).substr(-6);\\n      }\\n        htmlCategories.界面(d)\\n            // .分类链接(true_url)\\n            .源码(html)\\n            .页码(page)\\n            .添加分类定位(ruleList)\\n            .开启内置折叠功能() // 必须\\n            .折叠(当前折叠状态) // 必须\\n            .选中的分类颜色(getRangeColors())\\n         //   .选中的分类颜色('#098AC1')\\n            .开始打造分类();\\n    },\\n    生成片单(d, html) {\\n        let list = pdfa(html, 列表);\\n        for (let j in list) {\\n            let img = pd(list[j], 图片);\\n            d.push({\\n                title: pdfh(list[j], 标题),\\n                desc: pdfh(list[j], 描述),\\n                img: img + '@Referer=' + img,\\n                url: pd(list[j], 链接).replace('vodplay','voddetail') + \\\"#immersiveTheme#\\\"\\n            });\\n        }\\n    }\\n})\\n\\n$.exports = new 一级();\\n$.exports\"},{\"col_type\":\"movie_3\",\"name\":\"动态分类2\",\"path\":\"categories-header\",\"rule\":\"const symbolMap = {\\n    // checkParams: Symbol('checkParams'),\\n    mLayout: Symbol('mLayout'),\\n    true_url: Symbol('true_url'),\\n    mPage: Symbol('mPage'),\\n    src: Symbol('src'),\\n    ruleObjList: Symbol('ruleObjList'),\\n    mFold: Symbol('mFold'),\\n    mFoldInnerEnable: Symbol('mFoldInnerEnable'),\\n    mFoldIndex: Symbol('mFoldIndex'),\\n    mFoldLayout: Symbol('mFoldLayout'),\\n    mColor: Symbol('mColor'),\\n    mTag: Symbol('mTag'),\\n}\\n\\nfunction CategoriesHeader(color) {\\n    // 'use strict';\\n    // ...\\n    // this[symbolMap.listRule] = []\\n    // this[symbolMap.subListRule] = []\\n    this[symbolMap.mColor] = color || \\\"#FA7298\\\";\\n    this[symbolMap.ruleObjList] = []\\n    this.VARMAP = {\\n        CATEGORY: \\\"header.category\\\",\\n        URL: \\\"header.url\\\",\\n        FOLD: \\\"header.fold\\\",\\n    }\\n    this[symbolMap.mFoldLayout] = {\\n        injectIndex: 1\\n    }\\n    this[symbolMap.mFoldIndex] = 1\\n}\\n\\nObject.assign(CategoriesHeader.prototype, {\\n    // Override 构造方法，相当于 function.prototype.constructor = (...) => {...}，new function() 的时候会自动执行\\n    constructor: CategoriesHeader,\\n    // 定义私有方法\\n    VERSION: 202112011900,\\n    checkParams() {\\n        if (!this[symbolMap.mLayout]) {\\n            throw new Error(\\\"请调用 layout(d) 传入当前界面\\\")\\n        }\\n        if (!(this[symbolMap.src] || this[symbolMap.true_url])) {\\n            throw new Error(\\\"请调用 trueUrl(url) 传入当前分类的链接或调用 html(mHtml) 传入当前分类页面的源码\\\")\\n        }\\n        if (!this[symbolMap.mPage]) {\\n            throw new Error(\\\"请调用 page(mPage) 传入当前页数\\\")\\n        }\\n        if (this[symbolMap.ruleObjList].length < 1) {\\n            throw new Error(\\\"请调用相关方法传入定位规则\\\")\\n        }\\n        if (!this[symbolMap.mFold]) {\\n            this[symbolMap.mFold] = '0'\\n        }\\n    },\\n    layout(mLayout) {\\n        this[symbolMap.mLayout] = mLayout\\n        return this\\n    },\\n    trueUrl(url) {\\n        this[symbolMap.true_url] = url\\n        return this\\n    },\\n    page(mPage) {\\n        if (typeof (mPage) === 'string') {\\n            mPage = parseInt(mPage)\\n        }\\n        this[symbolMap.mPage] = mPage\\n        return this\\n    },\\n    html(mSrc) {\\n        this[symbolMap.src] = mSrc\\n        return this\\n    },\\n    list(rule) {\\n        if (this[symbolMap.ruleObjList].length > 0) {\\n            throw new Error(\\\"list(rule) add(ruleObj) 只能二选一！\\\")\\n        }\\n        this[symbolMap.ruleObjList] = [{}]\\n        this[symbolMap.ruleObjList][0].listRule = rule\\n        this[symbolMap.ruleObjList][0]['一级分类'] = rule\\n        return this\\n    },\\n    subList(rule) {\\n        if (this[symbolMap.ruleObjList].length > 1) {\\n            throw new Error(\\\"subList(rule) add(ruleObj) 只能二选一！\\\")\\n        }\\n        if (!this[symbolMap.ruleObjList][0] || (!this[symbolMap.ruleObjList][0].listRule && !this[symbolMap.ruleObjList][0]['一级分类'])) {\\n            throw new Error(\\\"请先调用 list(rule) 或 一级分类(rule) 定位一级分类\\\")\\n        }\\n        this[symbolMap.ruleObjList][0].subListRule = rule\\n        this[symbolMap.ruleObjList][0]['子分类'] = rule\\n        return this\\n    },\\n    title(rule) {\\n        if (this[symbolMap.ruleObjList].length > 1) {\\n            throw new Error(\\\"title(rule) add(ruleObj) 只能二选一！\\\")\\n        }\\n        if (!this[symbolMap.ruleObjList][0] || (!this[symbolMap.ruleObjList][0].listRule && !this[symbolMap.ruleObjList][0]['一级分类'])) {\\n            throw new Error(\\\"请先调用 list(rule) 或 一级分类(rule) 定位一级分类\\\")\\n        }\\n        this[symbolMap.ruleObjList][0].titleRule = rule\\n        this[symbolMap.ruleObjList][0]['分类标题'] = this[symbolMap.ruleObjList][0].titleRule\\n        return this\\n    },\\n    url(rule) {\\n        if (this[symbolMap.ruleObjList].length > 1) {\\n            throw new Error(\\\"url(rule) add(ruleObj) 只能二选一！\\\")\\n        }\\n        if (!this[symbolMap.ruleObjList][0] || (!this[symbolMap.ruleObjList][0].listRule && !this[symbolMap.ruleObjList][0]['一级分类'])) {\\n            throw new Error(\\\"请先调用 list(rule) 或 一级分类(rule) 定位一级分类\\\")\\n        }\\n        this[symbolMap.ruleObjList][0].urlRule = rule\\n        this[symbolMap.ruleObjList][0]['分类链接'] = this[symbolMap.ruleObjList][0].urlRule\\n        return this\\n    },\\n    /**\\n     * 是否开启折叠功能\\n     *\\n     * @param enabled true 表示开启，false 表示禁用\\n     * @returns {CategoriesHeader}\\n     */\\n    foldInner(enabled) {\\n        if (!(typeof (enabled) === 'boolean')) {\\n            throw new Error(\\\"请传入 true 或 false 表示开启或关闭折叠功能！\\\")\\n        }\\n        this[symbolMap.mFoldInnerEnable] = enabled\\n        return this\\n    },\\n    /**\\n     * 从第 index 行开始折叠\\n     *\\n     * @param index 开始折叠的行数\\n     * @returns {CategoriesHeader}\\n     */\\n    foldIndex(index) {\\n        if (!(typeof (index) === 'number')) {\\n            throw new Error(\\\"开始折叠行请传入数字！\\\")\\n        }\\n        if (index < 1) {\\n            throw new Error(\\\"开始折叠行请传入大于 0 的整数！\\\")\\n        }\\n        this[symbolMap.mFoldIndex] = index || 1;\\n        return this\\n    },\\n    /**\\n     * 折叠按钮的界面\\n     *\\n     * @param layout 与 d.push 结构一致，\\n     *        例：{ title:\\\"标题1\\\", url:\\\"xxx\\\", col_type:\\\"scroll_button\\\" };\\n     *        参数采用可选覆盖模式，不写的参数则使用默认;\\n     *        比如传入 { col_type:\\\"text_1\\\" }，那最终结果就是 { title:\\\"标题1\\\", url:\\\"xxx\\\", col_type:\\\"text_1\\\" }\\n     * @returns {CategoriesHeader}\\n     */\\n    foldLayout(layout) {\\n        if (typeof layout === 'object') {\\n            let keys = Object.keys(layout)\\n            let injectIndex = layout.injectIndex || layout['折叠按钮插入行']\\n            if (layout.title || layout.url || layout.col_type || injectIndex) {\\n                for (let i = 0; i < keys.length; i++) {\\n                    const key = keys[i]\\n                    this[symbolMap.mFoldLayout][key] = layout[key];\\n                }\\n            } else {\\n                throw new Error(\\\"请传入正确的折叠界面元素！\\\")\\n            }\\n            // injectIndex 折叠按钮插入第 injectIndex 行\\n            if (injectIndex) {\\n                if (!(typeof (injectIndex) === 'number')) {\\n                    throw new Error(\\\"折叠按钮插入行请传入数字！\\\")\\n                }\\n                if (injectIndex < 1) {\\n                    throw new Error(\\\"折叠按钮插入行请传入大于 0 的整数！\\\")\\n                }\\n                if (injectIndex > this[symbolMap.mFoldIndex]) {\\n                    throw new Error(\\\"折叠按钮插入行不得大于显示折叠行数！请调用 .foldIndex(index) 或 .第几行开始折叠(index) 传入正确的显示折叠行数\\\")\\n                }\\n                this[symbolMap.mFoldLayout].injectIndex = injectIndex || 1;\\n            }\\n        } else {\\n            throw new Error(\\\"请传入正确的折叠界面元素！\\\")\\n        }\\n        return this;\\n    },\\n    // 当前是否折叠\\n    fold(isFold) {\\n        if (typeof (isFold) === 'string') {\\n            isFold = isFold === '1'\\n        }\\n        if (isFold) {\\n            this[symbolMap.mFold] = '1';\\n        } else {\\n            this[symbolMap.mFold] = '0';\\n        }\\n        return this\\n    },\\n    color(mColor) {\\n        this[symbolMap.mColor] = mColor\\n        return this\\n    },\\n    tag(mTag) {\\n        this[symbolMap.mTag] = mTag\\n        return this\\n    },\\n    add(ruleObj) {\\n        // log($.stringify(ruleObj))\\n        if (ruleObj.constructor === Array) {\\n            this[symbolMap.ruleObjList] = this[symbolMap.ruleObjList].concat(ruleObj)\\n        } else {\\n            this[symbolMap.ruleObjList].push(ruleObj)\\n        }\\n        return this;\\n    },\\n    evalJSRule(item, jsRule) {\\n        let rule = jsRule.replace(\\\"@js:\\\", \\\"\\\")\\n        rule = rule.trim()\\n        // log($.stringify(rule))\\n        let input = item\\n        if (rule.startsWith(\\\"(\\\")) {\\n            eval('result = ' + rule)\\n        } else {\\n            /**\\n             * 还原成 $.toString(...) 的最终结果，达到最终处理方式跟上面的 if 一致的目的\\n             */\\n            eval('result = ' + '(() => {' + rule + '})()')\\n        }\\n        return (result || '')\\n    },\\n    getTitle(src, category) {\\n        let title = ''\\n        let titleRule = category.titleRule || 'a&&Text'\\n        if (titleRule.startsWith(\\\"@js:\\\")) {\\n            title = this.evalJSRule(src, titleRule)\\n        } else {\\n            title = parseDomForHtml(src, titleRule)\\n        }\\n        return title || \\\"\\\";\\n    },\\n    getUrl(src, category) {\\n        let url = ''\\n        let urlRule = category.urlRule || 'a&&href'\\n        if (typeof urlRule === 'object') {\\n            let mUrlRule = urlRule.rule || urlRule['解析规则'] || 'a&&href';\\n            if (mUrlRule.startsWith(\\\"@js:\\\")) {\\n                url = this.evalJSRule(src, mUrlRule);\\n            } else {\\n                let parse = parseDom;\\n                if (urlRule.parseOption) {\\n                    switch (urlRule.parseOption) {\\n                        case \\\"parseDom\\\":\\n                        case \\\"pd\\\":\\n                            parse = parseDom;\\n                            break;\\n                        case \\\"parseDomForHtml\\\":\\n                        case \\\"pdfh\\\":\\n                            parse = parseDomForHtml;\\n                            break;\\n                        default:\\n                            parse = parseDom;\\n                    }\\n                } else if (urlRule[\\\"解析方法\\\"]) {\\n                    switch (urlRule[\\\"解析方法\\\"]) {\\n                        case \\\"parseDom\\\":\\n                        case \\\"pd\\\":\\n                            parse = parseDom;\\n                            break;\\n                        case \\\"parseDomForHtml\\\":\\n                        case \\\"pdfh\\\":\\n                            parse = parseDomForHtml;\\n                            break;\\n                        default:\\n                            parse = parseDom;\\n                    }\\n                }\\n                url = parse(src, mUrlRule);\\n            }\\n            if (urlRule.dealUrl) {\\n                url = urlRule.dealUrl(url)\\n            } else if (urlRule['二次处理']) {\\n                url = urlRule['二次处理'](url)\\n            }\\n        } else {\\n            if (urlRule.startsWith(\\\"@js:\\\")) {\\n                url = this.evalJSRule(src, urlRule);\\n            } else {\\n                url = parseDom(src, urlRule);\\n            }\\n        }\\n        return url || \\\"\\\";\\n    },\\n    build() {\\n        // 检测是否传入需要的参数\\n        this.checkParams()\\n        // 每一个分类的唯一标识\\n        let mTag = this[symbolMap.mTag] || \\\"\\\"\\n        //翻页 需要根据实际替换\\n        const html = this[symbolMap.src] || request(this[symbolMap.true_url])\\n        const empty = \\\"hiker://empty\\\"\\n        //获取列表\\n        const categories = []\\n        this[symbolMap.ruleObjList].map(ruleObj => {\\n            let list = []\\n            let listRule = ruleObj.listRule || ruleObj[\\\"一级分类\\\"]\\n            if (listRule.startsWith(\\\"@js:\\\")) {\\n                // log($.stringify(listRule))\\n                list = this.evalJSRule(html, listRule)\\n            } else {\\n                list = parseDomForArray(html, listRule)\\n            }\\n            // log(list)\\n            list.map(category => {\\n                categories.push({\\n                    list: category,\\n                    subListRule: ruleObj.subListRule || ruleObj[\\\"子分类\\\"],\\n                    titleRule: ruleObj.titleRule || ruleObj[\\\"分类标题\\\"],\\n                    urlRule: ruleObj.urlRule || ruleObj[\\\"分类链接\\\"],\\n                });\\n            })\\n        })\\n\\n        // log($.stringify(categories))\\n\\n        let init_cate = []\\n        for (let i = 0; i < 20; i++) {\\n            init_cate.push(\\\"0\\\")\\n        }\\n\\n        const cate_temp_json = getMyVar(mTag + this.VARMAP.CATEGORY, JSON.stringify(init_cate))\\n        const cate_temp = JSON.parse(cate_temp_json)\\n\\n        if (this[symbolMap.mPage] === 1) {\\n\\n            categories.forEach((category, index) => {\\n\\n                // 折叠 UI\\n                if (this[symbolMap.mFoldInnerEnable] && this[symbolMap.mFoldLayout].injectIndex === (index+1)) {\\n                    let foldLayout = {\\n                        title: this[symbolMap.mFoldLayout].title || (this[symbolMap.mFold] === '1' ? '““””<b><span style=\\\"color: #FF0000\\\">∨</span></b>' : '““””<b><span style=\\\"color: #1aad19\\\">∧</span></b>'),\\n                        url: this[symbolMap.mFoldLayout].url || $(\\\"hiker://empty#noHistory#\\\").lazyRule((params) => {\\n                            putMyVar(params.mTag + params.VARMAP.FOLD, getMyVar(params.mTag + params.VARMAP.FOLD, params.isFold) === '1' ? '0' : '1')\\n                            refreshPage(false);\\n                            return \\\"hiker://empty\\\"\\n                        }, {\\n                            mTag: mTag,\\n                            isFold: this[symbolMap.mFold],\\n                            VARMAP: this.VARMAP\\n                        }),\\n                        col_type: this[symbolMap.mFoldLayout].col_type || \\\"scroll_button\\\",\\n                    }\\n                    this[symbolMap.mLayout].push(foldLayout)\\n                }\\n\\n                //具体列表下的分类\\n                let sub_categories = [];\\n                if (category.subListRule.startsWith(\\\"@js:\\\")) {\\n                    sub_categories = this.evalJSRule(category.list, category.subListRule)\\n                } else {\\n                    sub_categories = parseDomForArray(category.list, category.subListRule);\\n                }\\n                if (index < (this[symbolMap.mFoldIndex] || 1)) {\\n                    sub_categories.forEach((item, key) => {\\n                        let title = this.getTitle(item, category)\\n                        let url = this.getUrl(item, category)\\n\\n                        this[symbolMap.mLayout].push({\\n                            title: key.toString() === cate_temp[index] ? '““””<b><font color=' + this[symbolMap.mColor] + '>' + title + ' </font></b>' : title,\\n                            url: $(url).lazyRule((params) => {\\n                                let new_cate = []\\n                                if (params.index === 0) {\\n                                    params.cate_temp.forEach((cate, index) => {\\n                                        new_cate.push(index === 0 ? params.key.toString() : \\\"0\\\")\\n                                    });\\n                                } else {\\n                                    params.cate_temp[params.index] = params.key.toString()\\n                                }\\n                                putMyVar(params.tag + params.VARMAP.CATEGORY, JSON.stringify(params.index === 0 ? new_cate : params.cate_temp))\\n                                putMyVar(params.tag + params.VARMAP.URL, input)\\n                                refreshPage(true)\\n                                return \\\"hiker://empty\\\"\\n                            }, {\\n                                cate_temp: cate_temp,\\n                                index: index,\\n                                VARMAP: this.VARMAP,\\n                                tag: mTag,\\n                                key: key,\\n                                page: this[symbolMap.mPage],\\n                            }),\\n                            col_type: 'scroll_button',\\n                        })\\n                    })\\n                    this[symbolMap.mLayout].push({\\n                        col_type: \\\"blank_block\\\"\\n                    });\\n                } else if (this[symbolMap.mFold] === '0') {\\n                    sub_categories.forEach((item, key) => {\\n                        let title = this.getTitle(item, category)\\n                        let url = this.getUrl(item, category)\\n\\n                        this[symbolMap.mLayout].push({\\n                            title: key.toString() === cate_temp[index] ? '““””<b><font color=' + this[symbolMap.mColor] + '>' + title + ' </font></b>' : title,\\n                            url: $(url).lazyRule((params) => {\\n                                params.cate_temp[params.index] = params.key.toString()\\n\\n                                putMyVar(params.tag + params.VARMAP.CATEGORY, JSON.stringify(params.cate_temp))\\n                                putMyVar(params.tag + params.VARMAP.URL, input)\\n                                refreshPage(true)\\n                                return \\\"hiker://empty\\\"\\n                            }, {\\n                                cate_temp: cate_temp,\\n                                index: index,\\n                                VARMAP: this.VARMAP,\\n                                tag: mTag,\\n                                key: key,\\n                                page: this[symbolMap.mPage],\\n                            }),\\n                            col_type: 'scroll_button',\\n                        })\\n                    })\\n                    this[symbolMap.mLayout].push({\\n                        col_type: \\\"blank_block\\\"\\n                    });\\n                }\\n            });\\n        }\\n    },\\n\\n    界面(layout) {\\n        return this.layout(layout)\\n    },\\n    分类链接(trueUrl) {\\n        return this.trueUrl(trueUrl);\\n    },\\n    页码(page) {\\n        return this.page(page);\\n    },\\n    源码(html) {\\n        return this.html(html);\\n    },\\n    定位一级分类(list) {\\n        return this.list(list);\\n    },\\n    定位子分类(subList) {\\n        return this.subList(subList);\\n    },\\n    定位分类标题(title) {\\n        return this.title(title);\\n    },\\n    定位分类链接(url) {\\n        return this.url(url);\\n    },\\n    开启内置折叠功能() {\\n        return this.foldInner(true);\\n    },\\n    关闭内置折叠功能() {\\n        return this.foldInner(false);\\n    },\\n    第几行开始折叠(index) {\\n        return this.foldIndex(index);\\n    },\\n    折叠按钮样式(layout) {\\n        return this.foldLayout(layout)\\n    },\\n    折叠(fold) {\\n        return this.fold(fold);\\n    },\\n    选中的分类颜色(color) {\\n        return this.color(color);\\n    },\\n    唯一标识(mTag) {\\n        return this.tag(mTag)\\n    },\\n    添加分类定位(ruleObj) {\\n        return this.add(ruleObj);\\n    },\\n    开始打造分类() {\\n        return this.build();\\n    },\\n\\n})\\n$.exports = new CategoriesHeader();\\n$.exports\\n\"},{\"col_type\":\"movie_3\",\"name\":\"链接处理工具\",\"path\":\"url-processor\",\"rule\":\"/**\\n * 本地网页插件链接 hiker://files/rules/js/UrlProcessor.js\\n * 子页面链接 hiker://page/url-processor\\n * 道长仓库链接 http://hiker.nokia.press/hikerule/rulelist.json?id=2849\\n * 码云 Gitee 链接 https://gitee.com/reborn0/HikerRules/raw/master/plugins/UrlProcessor.js\\n */\\nfunction UrlProcessor() {\\n    this.params = {}\\n    this.regexMap = [\\n        {\\n            reg: '(vodtype|videot)\\\\\\\\/\\\\\\\\w+',\\n            exec: () => {\\n                return this.params.url\\n                    .replace(/-\\\\d+.html/, '-' + this.params.page + '.html')\\n                    .replace(/((vodtype|videot)\\\\/\\\\w+).html/, '$1-' + this.params.page + '.html')\\n            }\\n        },\\n        {\\n            reg: '\\\\\\\\/?[\\\\\\\\w\\\\\\\\d]+-.*?-.*?-.*?-.*?-.*?-.*?-.*?-\\\\\\\\d*---\\\\\\\\d*.html',\\n            exec: () => {\\n                return this.params.url\\n                    .replace(/\\\\d*(---.html)/, this.params.page + '$1')\\n                    .replace(/(---\\\\d+.html)/, this.params.page + '$1'); // 拼接页码\\n            }\\n        },\\n        {\\n            reg: '((\\\\\\\\/vod\\\\\\\\/show)?(\\\\\\\\/area\\\\\\\\/[\\\\\\\\w\\\\\\\\d%]+)?(\\\\\\\\/by\\\\\\\\/[\\\\\\\\w\\\\\\\\d%]+)?(\\\\\\\\/id\\\\\\\\/\\\\\\\\d+)?(\\\\\\\\/letter\\\\\\\\/[\\\\\\\\w\\\\\\\\d%]+)?)(\\\\\\\\/page\\\\\\\\/\\\\\\\\d+)?(\\\\\\\\/year\\\\\\\\/\\\\\\\\d+)?\\\\\\\\.html',\\n            exec: () => {\\n                let regExp = /((\\\\/vod\\\\/show)?(\\\\/area\\\\/[\\\\w\\\\d%]+)?(\\\\/by\\\\/[\\\\w\\\\d%]+)?(\\\\/id\\\\/\\\\d+)?(\\\\/letter\\\\/[\\\\w\\\\d%]+)?)(\\\\/page\\\\/\\\\d+)?(\\\\/year\\\\/\\\\d+)?\\\\.html/\\n                return this.params.url\\n                    .replace(regExp, '$1' + (\\\"/page/\\\" + this.params.page) + '$8' + \\\".html\\\")\\n            }\\n        }\\n    ]\\n}\\n\\nObject.assign(UrlProcessor.prototype, {\\n    constructor: UrlProcessor,\\n    checkParams() {\\n        if (!this.params.url) {\\n            throw new Error(\\\"请先调用 .baseUrl(url) 传入链接进行初始化!\\\")\\n        }\\n        if (!this.params.page) {\\n            throw new Error(\\\"请先调用 .page(page) 传入页码进行初始化!\\\")\\n        }\\n    },\\n    baseUrl(url){\\n        this.params.url = url\\n        return this\\n    },\\n    page(page){\\n        this.params.page = page\\n        return this\\n    },\\n    addExtra(regExp) {\\n        if (regExp.constructor === Array) {\\n            this.regexMap = this.regexMap.concat(regExp)\\n        } else {\\n            this.regexMap.push(regExp)\\n        }\\n        return this;\\n    },\\n    debug() {\\n        this.params.debug = true\\n        return this;\\n    },\\n    exec() {\\n        this.checkParams()\\n        let true_url = ''\\n        for (let i = 0; i < this.regexMap.length; i++) {\\n            let regObj = this.regexMap[i];\\n            let urlExp = regObj.reg;\\n            if (typeof urlExp === 'string') {\\n                urlExp = new RegExp(urlExp)\\n            }\\n            if (urlExp.test(this.params.url)) {\\n                if (this.params.debug) {\\n                    log(urlExp.toString())\\n                }\\n                true_url = regObj.exec();\\n                break;\\n            }\\n        }\\n        if (true_url) {\\n            return true_url;\\n        } else {\\n            return this.params.url\\n        }\\n    },\\n    获取处理结果() {\\n        return this.exec()\\n    },\\n    链接(url) {\\n        return this.baseUrl(url)\\n    },\\n    页码(page) {\\n        return this.page(page)\\n    },\\n    插入新处理规则(regExp) {\\n        return this.addExtra(regExp)\\n    },\\n    调试模式() {\\n        return this.debug();\\n    }\\n})\\n$.exports=new UrlProcessor()\\n$.exports\\n\"},{\"col_type\":\"movie_3\",\"name\":\"函数\",\"path\":\"jxhs\",\"rule\":\"var fftt = 'Mw8giyH1CqnTz3B7VHj7MTzvcuXIErgr1D/PugFmhOWvF6WTnKV54M1uUckMlxnLIUMbZ7FiqgLuRWcbwGXhb+67fSMBdz5Vsf6zP1dv9f4hQxtnsWKqAu5FZxvAZeFv8ki+AZPvNsd/0JVRBjUHC5QmtCkVhlM/kpn/BFWtRr0H/ZHQQq4l4JDNzXnMXA0myyvLSNZWc/sIn/vWSAHU9kAbjU4qSZsSAu9by0bMwdCPDsU4ppskU39rBSPFNDBzYyvXsJhrztaabnexWz65cpcx/H34lECjupP0oLCkmODO4WZXi1C2GnAA+h1I7YDdyyvLSNZWc/sIn/vWSAHU9kBUv7gd1Qj5oRaCUU7r2I0mmFaoD3Q9RpDhmSenxUEIP7+zUU1QW0/0yvSKOLD/wrZEVUca7lD0mfnmHuCOPLg17QCC6yJ9qIcxo3Rh/YFMPKiB1xoeDNcCD97Cs8QBwhdbux6xz/HtOSlMGtu9/AWnr5tI3aX5+x8VcCVwJ/y+SXu9+l97W7KcATyE/A4fy963XgJY2zS48DLS/kiBU3Q873LlyBK4K9Q/z7oBZoTlepYzd6bnhzKgDBj5/fX1sDKHABIyMs4PqDBy1Epmzu3cXRvPGFj1xmg4sYTw/EpayyvLSNZWc/sIn/vWSAHU9qpRYwPSVaek0SQ+LoPrGP128aEqssiPJrXXIGnYsy3MmwePe41HTI6MhJlAVd+F1UkY7wLTnL4QS7GPJsBvvfYp1xWcgVqDWkR7GoNOOMNwoyRy8bMPTZJ2xeqVCEhXyL4CsuqbinNXddqoloYeAOkqzVkXD/VS903fB2lDun0pjVznHNJQFhgia6QLq2qZg9U+SVOiXOyVg2lNovINWuWfhc7+Ty7jXzR4CXArcUr2ItdtzQvj4A0229ZtBAXj1B2k8ocmCbW1+fJ4+xJTOEennAeM0zBL7Ze+W9MFZr9EoOeoToq7VEqmUEBdpKwQzpsGtGj9OLys264hCIF8Fc4dIeONwhRjuUi1Lfpm2i0swHelD1loEesCyD501H7RYzCFmPvn8znewphfbNGA5JP/fxoRrSNw+JnoOCSgLuJUg//XSvDUWNCk4IGr5YXTOSuOKLeuLncZ50H8JRU7fCY=';\\nvar ssyz = 'TloGnnikThrfs/5fDNlk5CSsbaGtAH7W/uMZjuYoIupB6bCoo9CotLQHfPIdGgbkbynKqL2aUE2Xy558X2QxHYtTU09vD+4oaCDIuSZO7nxDbLfRGfWj7zql+yMbvF+aJoD/m6Psfw/PyYOAp/ZVGdrPzaCByfd0HL5DFVSw+YF2OC40V8SP9RxdFKKdrBuPxCWdxUCFrJ+1lRy/TU3LC84C4xxEBhgud7RtBp0zZArqBE06+Z3JtDP0eFCz/D5X0409qPHK3e1y/LuUgccuxpHnjYLE1GjlP8wYA2hQWe7yPngggQBHw33/gvb3tuCcxEKTWgmah/R32AH9ZF8jF7WemT26lUizVXe/spCdhDgHR/zUhODD4PO6glI8JPhdu+VwfPyRLG2D7CUo1L6SIF+0fYf0oTOWN13UPITo5+uZd/WnQQLU8NYx/WFCThEnkbzln9YGt60fRxsH+8uMDFgaBiC+z2SpcxB9gZ6GXypLSXWaj+qEUbGJKEx+jK/v5fnrkIhCdwNbkp9dRks6dmlYlBifzoWF8RkuC3rqPtoScBkMOMZu7GiVtoHEdHUozmnUIdrU1LGIqq9WnG7X2a3yH8s65mjLuLnd3q0U8v+LMPnHL2/GjQuTQKVh+RKEPqK/JdrChGLNrjcHvLHDbHEshrGZuQOdEphbx/PkhkvaYy4K1MO84R17guRsKs/V6niUPaL+XbQ7c3fqJS4VHJwludJTDe02euffGCm0PJIPlAOgLHnX0izJhA6q738R2UwQcWBQjJt79aF+kyqSdyt1QPVQVjaC3IpRf7PgsDhEJ7bi9nSclyIzgJ9DCJ4T+8dG1xHhKyZasT7L/x9Lfr1Mgs8nBZER2W9ax7iTkNK+X5ACU//p/YoP/uAanDtb3D0iKUUuXFH+Jbb0x1P322S2w6BJ46nuNHBMHTpVuWwhZeZzriGh7qoOywLWiExBMKyxTGLnmKh7r03/yXKYWIJnpBN2MMycVHRZJ7RumHV4CIsVrq7iRP48823RJVt9OtyP7uuc3wBBV3kcZUzbbaYdWBx1+Au+Od2u7lR6joOL810mcJm/f7J5TvGQP6HGph1YHHX4C7453a7uVHqOgyjjh5EBd720MEBY23c+TKq/z9UpWDDOg48ZFnwSIhFqitWdiZiqsaYuN0/SXwiK8EG9eQ29u2XDJoDW4mlwtcRO7vaX5XcFsgf4/mLU07mi'\"},{\"col_type\":\"movie_3\",\"name\":\"二级mo-movs-item\",\"path\":\"mo-movs-item\",\"rule\":\"var d = [];\\nvar html = getResCode();\\nd.push({\\n    title: '分类：' + pdfh(html, '.mo-cols-lays&&li,2--span&&Text') +\\n        ' | ' + pdfh(html, '.mo-cols-lays&&li,3--span&&Text') +\\n        ' | ' + pdfh(html, '.mo-cols-lays&&li,4--span&&Text') +\\n        '\\\\n' + pdfh(html, '.mo-cols-lays&&li&&Text')\\n        .substring(0, 15) +\\n        '\\\\n' + pdfh(html, '.mo-cols-lays&&li,1&&Text')\\n        .substring(0, 15),\\n    desc: '更新时间：' + pdfh(html, '.mo-cols-lays&&li,5&&Text').substring(0, 15),\\n    img: pd(html, '.mo-situ-pics&&data-original'),\\n    url: MY_URL,\\n    col_type: 'movie_1_vertical_pic_blur'\\n});\\n\\nvar 线路 = 'body&&.mo-movs-btns'\\nvar 选集 = 'body&&.mo-movs-item'\\nvar 线路名 = 'Text'\\nvar 选集列表 = 'ul&&li'\\neval(JSON.parse(request('hiker://page/erji?rule=模板·Q')).rule)\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"数字验证码\",\"path\":\"yzm\",\"rule\":\"if (/验证码|系统安全验证/.test(html)) {\\n\\n    let headers = {\\n        \\\"User-Agent\\\": MOBILE_UA,\\n        \\\"Referer\\\": MY_URL\\n    };\\n    eval(JSON.parse(request('hiker://page/jxhs?rule=模板·Q')).rule);\\n    evalPrivateJS(ssyz);\\n\\n    let vcode = getVCode2(MY_HOME + '/index.php/verify/index.html?', JSON.stringify(headers), 'num');\\n    fetch(MY_HOME + html.match(/\\\\/index.php.*?verify=/)[0] + JSON.parse(vcode).ret, {\\n        headers: headers,\\n        method: 'POST'\\n    })\\n    var yz = MY_TYPE=='home' ? true_url : MY_URL\\nlog(yz)\\n    html = fetch(yz, {\\n        headers: headers\\n    });\\n}\\nif (/5秒|频繁/.test(html)&&!MY_TYPE=='home') {\\n    d.push({\\n        title: '搜索间隔5秒，下拉刷新'\\n    })}\"},{\"col_type\":\"movie_3\",\"name\":\"二级y-playList\",\"path\":\"y-playList\",\"rule\":\"js:\\nvar d = [];\\nvar html = getResCode()\\n\\nd.push({\\n    title: pdfh(html, '.module-info-item,3&&Text')\\n        .substring(0, 18) +\\n        '\\\\n' +\\n        pdfh(html, '.module-info-item,1&&Text')\\n        .substring(0, 18) +\\n        '\\\\n' +\\n        pdfh(html, '.module-info-item,4&&Text'),\\n    img: pd(html, '.lazyload&&data-original||src') +\\n        '@Referer=',\\n    url: MY_URL,\\n    desc: pdfh(html, '.module-info-item,5||.module-info-item&&Text'),\\n    col_type: 'movie_1_vertical_pic_blur'\\n});\\n\\nvar 线路 = '#y-playList&&span'\\nvar 选集 = 'body&&.module-play-list'\\nvar 线路名 = 'Text'\\nvar 选集列表 = 'body&&a'\\neval(JSON.parse(request('hiker://page/erji?rule=模板·Q')).rule)\\nsetResult(d);\"}]","proxy":"","icon":"http://q1.qlogo.cn/g?b=qq&nk=569617079&s=640"},{"last_chapter_rule":"","title":"MyFieldᴰⁿ","author":"断念&道长魔改","version":429,"type":"tool","url":"hiker://empty","col_type":"text_center_1","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"工具","year_url":"","find_rule":"js:\n//log(MOBILE_UA);\n    const {demoData,defaultSets,floors} = $.require(\"hiker://page/demoData?rule=MyFieldᴰⁿ\");\nconst {getOne,unique2,duplicates} = $.require(\"hiker://page/utils?rule=MyFieldᴰⁿ\");\nlet sjTest =[];for(let i in demoData){sjTest=sjTest.concat(demoData[i])}\nthis.d = [];\nconst jxItem = $.require(\"hiker://page/jxItem?rule=MyFieldᴰⁿ\");\nvar Route = $.require(\"hiker://page/Route?rule=MyFieldᴰⁿ\");\neval(getItem('myFunction'));\n// mzPopup();\nvar jxOldV = getVar('jxOldV');\nvar jxNewV = getVar('jxNewV');\nvar versionTips = parseFloat(jxNewV) > parseFloat(jxOldV) ? '‘‘有新版本: v' + jxNewV + '\\n先更新小程序然后点击下方按钮拉取至本地’’' : 'v'+jxOldV;\nd.push({\n    title: '‘‘’’<big><span style=\"color:#0C0000\">魔断 2022',\n    desc: versionTips,\n    url: Route.szParse,\n    //url: 'toast://这是标题',\n    col_type: 'text_center_1'\n});\n\nfunction czGuide() {\n    return $().rule((k) => {\n        setResult([{\n            title: eval(JSON.parse(request(\"hiker://page/Guide?rule=MyFieldᴰⁿ\"))).rule,\n            col_type: 'rich_text'\n        }]);\n    })\n}\naddListener('onClose', $.toString(() => {\n    //clearVar(\"parseUrl.url\");\n    clearItem(\"class\");\n}));\nlet jxsRoute = \"hiker://files/cache/MyJiexi.json\";\nlet MyJiexi = {jiexis:[]};\nlet jiexis = {};\ntry {\n    MyJiexi = JSON.parse(request(jxsRoute));\n    jiexis = MyJiexi.jiexis.filter(it=>it.name===MyJiexi.now)[0];\n}catch (e) {}\nlet jx_extra = {\n    jsLoadingInject: true,\n    titleVisible: true,\n    defaultValue: getVar('parseUrl.url', '') || \"\",\n    onChange: 'putVar(\"parseUrl.url\",input)'\n};\nif(!/嗅探优先|顺序优先/.test(MyJiexi.autoMode)){\n    jx_extra.blockRules = ['baidu.*.png', '.jpg','.mp3','.mp4','.m3u8','.flv','.avi','.3gp','.mpeg','.wmv','.mov','.rmvb','.gif','.jpg','.jpeg','.png','.ico','.svg'];\n}\nd.push({\n    title:'开始解析',\n    col_type: 'input',\n    desc: \"请输解析地址\",\n    url:$.toString(()=>{\n        let url = getVar(\"parseUrl.url\", \"\").trim();\n        let sel = getItem(\"selected\", \"\");\n        let jx = getItem(\"selected\", \"\");\n        if(jx&&jx.length>2&&!jx.startsWith('http')){\n            jx = '';//断插高级方法直接清空解析链接后面调用标题名字\n        }\n        let ex=new RegExp('^http|LT|ruifenglb|suoyo|xfy|renrenmi|RongXingVR|xueren|wuduyun|laodi|Naifeimi|daodm|XMMT|v020c');\n        if (!ex.test(url)&&!/http|function/.test(sel)) {\n            log(getItem(\"selected\", \"\"));\n            return \"toast://还没有输入链接哦\";\n        }\n        let playUrl = jx + url;\n        log(playUrl);\n        if(!ex.test(playUrl)&&!/http|function/.test(sel)){\n            return 'toast://看起来播放地址似乎不对劲?\\n'+playUrl\n        }\n        return $().lazyRule((playUrl,url)=>{\n            let title = getItem(\"selected0\", \"&&\").split(\"&&\")[0].replace(/👉/g,'');\n            log('title:'+title);\n            if(getItem('dn.test_mode')==='断插'&&!/^不选$|^魔断$/.test(title)){\n                eval(\"var config =\" + request(\"hiker://files/cache/MyParseSet.json\"));\n                eval(request(config.cj));\n                let title = getItem(\"selected0\", \"&&\").split(\"&&\")[0].replace(/👉/g,'').replace(/不选/g,'');\n                log('开始调用断插测试,myFiled超时为:'+getItem('dn.timeout','5000'));\n                return aytmParse(url,title,parseInt(getItem('dn.timeout','5000')));\n            }else if(getItem('dn.test_mode')==='断插'&&/^魔断$/.test(title)){\n                eval(\"var config =\" + request(\"hiker://files/cache/MyParseSet.json\"));\n                eval(request(config.cj));\n                log('开始调用魔断拟真测试,myFiled超时为:'+getItem('dn.timeout','5000'));\n                return aytmParse(url,'',parseInt(getItem('dn.timeout','5000')));\n            }\n            else{\n                const {lazyParse} = $.require('hiker://page/globalParse?rule=道长仓库Pro');\n                return lazyParse(playUrl,parseInt(getItem('dn.timeout','5000')))||'toast://解析失败,具体看日志'\n            }\n        },playUrl,url)\n    }),\n    extra: jx_extra\n});\nvar test_mode = getItem('dn.test_mode','Q神');\nlet sel_title = ['Q神','断插'].map((it) => {\n    return it===test_mode?'👉'+it:it;\n});\n\nd.push({\n    title:'💫'+test_mode,\n    col_type:'scroll_button',\n    url:$(sel_title,2).select(()=>{\n        input = input.replace(/👉/g,'');\n        setItem('dn.test_mode',input);\n        // setItem(\"selected\", url);\n        setItem(\"selected\", \"\"); // 重置解析头\n        setItem(\"selected0\", \"不选&&\"); //切换模式清空选中的解析\n        refreshPage(true);\n        return 'toast://已切换模式为:'+input\n    })\n});\n\nlet titleArr = [], urlArr = [];\nvar json={title:[],codes:{}};\nif(test_mode==='Q神'){\n    let parseUrlText = request(\"hiker://files/jiexi/jiexi.txt\");\n    let parseUrlArray = parseUrlText.split(/\\n/);\n    parseUrlArray.forEach((it) => {\n        it = it.split(\"&&\");\n        titleArr.push(it[0]);\n        urlArr.push(it[1]);\n    });\n}\nelse if(test_mode==='断插'){\n    let setFile = request('hiker://files/rules/DuanNian/MyParse.json');\n    try {\n        eval('json='+setFile);\n    }catch (e) {\n        log('Json解析发生了错误:'+e.message);\n    }\n    titleArr = json.title;\n    titleArr.forEach((it) => {\n        urlArr.push(json.codes[it]);\n    });\n    //$.stringify(json)\n}\n\nd.push({\n    title:titleArr.length+'',\n    col_type:'scroll_button',\n    url:$(test_mode+'共计解析数量:'+titleArr.length+'个\\n是否随机来个地址进行测试?').confirm((sjTest,getOne)=>{\n        putVar('parseUrl.url', getOne(sjTest));\n        refreshPage(true);\n        return 'toast://地址已给你了'\n    },sjTest,getOne)\n});\n\nlet realTitles = titleArr;\nlet barry = test_mode==='Q神'?['不选']:['不选','魔断'];\ntitleArr = barry.concat(titleArr);\nlet selTitle = getItem(\"selected0\", \"&&\").split(\"&&\")[0];\ntitleArr = titleArr.map((it) => {\n    return it===selTitle?'👉'+it:it;\n});\nd.push({\n    title: '☢️'+selTitle,\n    url: $(titleArr, 3).select((realTitles,urlArr) => {\n        input = input.replace(/👉/g,'');\n        if(input==='不选'){\n            setItem(\"selected\", '');\n            setItem(\"selected0\", input + \"&&\" + '');\n            refreshPage(false);\n            return \"toast://已取消解析口,直接进行直链解析\";\n        }else if(input==='魔断'){\n            setItem(\"selected\", '');\n            setItem(\"selected0\", input + \"&&\" + '');\n            refreshPage(false);\n            return \"toast://已设置为魔断解析，可直接触发备胎模式\";\n        }\n        let i = realTitles.indexOf(input);\n        let url = urlArr[i];\n        log(\"\\n更改接口> \" + url);\n        if(typeof(url)!=='string'){\n            log($.toString(url));\n            setItem(\"selected\", $.toString(url));\n            // return 'toast://暂不支持断插function系列的高级解析测试'\n        }else{\n            setItem(\"selected\", url);\n        }\n        setItem(\"selected0\", input + \"&&\" + url);\n        refreshPage(false);\n        return \"toast://切换解析口为:\"+input;\n    }, realTitles,urlArr),\n    col_type: \"scroll_button\"\n});\nd.push({\n    title:'🍀主题',\n    url: \"hiker://page/Route?rule=MyFieldᴰⁿ&type=主题#noHistory##noRecordHistory#\",\n    col_type: \"scroll_button\"\n});\nd.push({\n    title:'🍀解析',\n    url: \"hiker://page/Route?rule=MyFieldᴰⁿ&type=解析#noHistory##noRecordHistory#\",\n    col_type: \"scroll_button\"\n});\nvar timeout = getItem('dn.timeout','5000');\nd.push({\n    title:'🕒'+timeout,\n    col_type:'scroll_button',\n    url:$(timeout,'请输入解析超时毫秒').input(()=>{\n        if(!parseInt(input)){\n            return 'toast://超时设置错误，拒绝保存'\n        }\n        setItem('dn.timeout',input||'5000');\n        refreshPage(true);\n        return 'toast://已设置解析超时毫秒:'+getItem('dn.timeout','5000');\n    }),\n});\nd.push({\n    title:'📲导出TXT',\n    col_type:'scroll_button',\n    url:$('确认导出本地明文且复制云剪切板?\\n可完美导出名称地址的通用规则,对function类兼容暂时不是很好').confirm((titleArr,urlArr)=>{\n        //urlArr=urlArr.slice(2);\n        titleArr=titleArr.filter(it=>!/不选|魔断/.test(it));\n        let mode = getItem('dn.test_mode','Q神');\n        if(mode==='断插'||mode==='Q神'){\n            let jxCode = [];\n            titleArr.forEach((it) => {\n                let i = titleArr.indexOf(it);\n                let code = urlArr[i]||'';\n                let outCode = (typeof(code)==='string')?code.trim():base64Encode(code.toString().trim());\n                let outTitle = it.replace(/👉/g,'');\n                if(outTitle.startsWith('http')&&(typeof(outCode)==='undefined'||!outCode)){\n                    jxCode.push(outTitle+','+outTitle);\n                }else{\n                    jxCode.push(outTitle+','+outCode||'')\n                }\n            });\n            let outText = jxCode.join('\\n');\n            let outPath = 'hiker://files/rules/DuanNian/MyParseOut_'+mode+'.txt';\n            writeFile(outPath,outText);\n            let pastes = getPastes();\n            let importUrl = sharePaste(base64Encode(outText),pastes[1]);\n            let importCode = '魔断解析导入口令¥¥'+importUrl;\n            copy(importCode);\n            return 'toast://文件已导出到:'+outPath+'\\n请自行通过MT管理器查看'\n        }else{\n            return 'toast://我不清楚你要做什么?\\n'+mode;\n        }\n    },titleArr,urlArr),\n});\nd.push({\n    title:'📥导入TXT',\n    col_type:'scroll_button',\n    url:$().rule(()=>{\n        let d = [];\n        d.push({\n            title:'导入说明',\n            col_type:'text_1',\n            desc:'支持此插件导出格式的文本进行导入。\\n格式1: 名称,地址 一行一个解析\\n格式2:云剪切板 魔断解析导入口令¥¥剪切板地址',\n            url:'hiker://empty'\n        });\n        d.push({\n            desc: \"txt文本解析规则,一行一个\",\n            col_type: 'input',\n            title:'解析文本',\n            extra: {\n                titleVisible: false,\n                defaultValue: getVar('dn.import_text', ''),\n                type: \"textarea\",\n                height:-1,\n                onChange: 'putVar(\"dn.import_text\",input)'\n            }\n        });\n        d.push({\n            title:'📥导入',\n            col_type:'text_center_1',\n            url:$('确定编辑好了吗?此操作将覆盖本地已有的记录，建议备份后用空文件导入').confirm(()=>{\n                const {defaultSets} = $.require(\"hiker://page/demoData?rule=MyFieldᴰⁿ\");\n                let parseRoute = 'hiker://files/rules/DuanNian/MyParse.json';\n                let jsCode = request(parseRoute)||JSON.stringify({title:[],codes:{},settings:defaultSets});\n                try {\n                    eval('var json =' + jsCode);\n                }\n                catch (e) {\n                    return 'toast://发生错误:\\n'+e.message\n                }\n                let toImport = getVar(\"dn.import_text\");\n                if(/魔断解析导入口令¥¥/.test(toImport)&&toImport.split('¥¥').length>1){\n                    let url = toImport.split('¥¥')[1];\n                    if(!/^http/.test(url)){\n                        return 'toast://剪切板地址有误,导入失败'\n                    }\n                    toImport = parsePaste(url);\n                    toImport = base64Decode(toImport);\n                }\n                //log(toImport);\n                let jiexi = toImport.split('\\n').filter(it=>it.trim());\n               // log(jiexi);\n                let parseTitle = [];\n                let parseCode = {};\n                for (let i in jiexi) {\n                    let title=jiexi[i].split(',')[0];\n                    let code=jiexi[i].split(',')[1];\n                    if(!title||!code){\n                        log('错误解析:'+jiexi[i]);\n                        continue;\n                    }\n                    parseTitle.push(title);\n                    //log(title);\n                    if(!(code.replace(/[\\s]/g,'').startsWith('http'))){\n                        // log(title+'为函数解析');\n                        if(code.replace(/[\\s]/g,'').length>20){//视为function\n                            try {\n                                code = eval(base64Decode(code));\n                                // log(code);\n                            }catch (e) {\n                                code = e.message;\n                            }\n                        }\n                    }\n                    parseCode[title]=code;\n                }\n                let scObject = [\"CityIP\", \"pcUA\", \"cacheM3u8\", \"defaultParseWeb\",\"maoss\", \"LLQ\"];\n                parseTitle = parseTitle?parseTitle.filter(it=>!scObject.includes(it)):[];\n                \n                var newParseTitle = json.title.concat(parseTitle);\n                json.title = Array.from(new Set(newParseTitle));\n                Object.assign(json.codes, parseCode);\n                let newFile = $.stringify(json); //JSON.parse会报错\n                writeFile(parseRoute, newFile);\n                refreshPage(false);\n                return 'toast://已成功导入'+jiexi.length+'条解析';\n            }),\n            extra:{\n                lineVisible:true\n            }\n        });\n        setResult(d);\n    }),\n});\nd.push({\n    title:'☯️查重处理',\n    col_type:'scroll_button',\n    url:$().lazyRule((unique2,duplicates,floors)=>{\n        let parseRoute = 'hiker://files/rules/DuanNian/MyParse.json';\n        let jsCode = request(parseRoute);\n        try {\n            eval('var json =' + jsCode);\n        }\n        catch (e) {\n            return 'toast://本地那个MyParse.json文件有问题,这个功能不给你用了!'\n        }\n        let titles = json.title;\n        let codes = json.codes;\n        let keys= Object.keys(codes);\n        let keys_re_ct = keys.length - unique2(keys).length; // 名称重复\n        let normal_list = [];\n        for(let o in codes){\n            if(typeof(codes[o])!=='undefined'&&typeof(codes[o])!=='function'){\n                normal_list.push(codes[o]);\n            }\n        }\n        let reNorList = unique2(normal_list);\n        let value_re_ct = normal_list.length - reNorList.length; //代码重复\n        let values_re = duplicates(normal_list);//重复的值\n        let ftlist = [];\n        let flags = {};\n        let myFloors = floors;\n        for(let j in codes){//遍历所有\n            let one = codes[j];\n            try {\n                if (typeof(one) !== 'function'&&values_re.includes(one)) {\n                    if (typeof (flags[one]) === 'undefined' || !flags[one]) {\n                        //取出第一个标志\n                        flags[one] = myFloors[0];\n                        myFloors.splice(0, 1);//删除标志列表里的第一个元素\n                    }\n                    ftlist.push({key: flags[one] + j, value: one});\n                } else {\n                    ftlist.push({key: j, value: one});\n                }\n            }catch (e) {\n                log(e.message)\n            }\n        }\n        // log(JSON.stringify(flags));\n        let newCodes = {};\n        for(let k in ftlist){\n            newCodes[ftlist[k].key] = ftlist[k].value;\n        }\n        let tips = '检测到名称复用项目数:'+keys_re_ct+',代码重复项目数量:'+value_re_ct+'\\n需要一键打个标识吗?不支持自动删除,打标志自行解决';\n        return $(tips).confirm((value_re_ct,json,newCodes,parseRoute)=>{\n            if(value_re_ct<1){\n                return 'toast://既然都是0个重复项目了，就不需要我做什么了!'\n            }\n            function compare(){\n                return function (a, b){\n                    const {floors} = $.require(\"hiker://page/demoData?rule=MyFieldᴰⁿ\");\n                    let x = a.substring(0,1);\n                    let y = b.substring(0,1);\n                    return floors.indexOf(y)-floors.indexOf(x);\n                }\n            }\n            json.codes = newCodes;\n            let titles = Object.keys(newCodes);\n            titles = titles.sort(compare());\n            json.title = titles;\n            var newFile = $.stringify(json); //JSON.parse会报错\n            writeFile(parseRoute, newFile);\n            refreshPage(false);\n            return 'toast://已一键打上标志';\n        },value_re_ct,json,newCodes,parseRoute)\n    },unique2,duplicates,floors),\n});\nd.push({\n    title:\"🔄重置B站UA\",\n    col_type: \"scroll_button\",\n    url: \"https://www.bilibili.com/\",\n    extra: {\n        ua: PC_UA\n    }\n});\nd.push({\n    title:\"🗑️批量操作\",\n    col_type: \"scroll_button\",\n    url: $('hiker://empty#noRecordHistory#').rule(()=>{\n        let localHtml = getPath('hiker://files/cache/plscParse.html');\n        let testcode = request(localHtml);\n        if(!testcode||/批量删除\\/导出解析/.test(testcode)){\n            // writeFile(localHtml,request('http://hiker.nokia.press/hikerule/zyw_data/10'));\n            writeFile(localHtml,request('https://gitcode.net/qq_32394351/dr/-/raw/master/dp/batch_delete.html'));\n        }\n        let d = [];\n        d.push({title: \"批量操作解析\", desc: \"auto&&float\", url: localHtml, col_type: \"x5_webview_single\"});\n        setResult(d);\n    }),\n});\nlet web_sel = '爱奇艺/优酷/腾讯/芒果/哔哩哔哩/搜狐/西瓜/PPTV/咪咕/乐视/1905/风行/龙腾/人人迷/五毒/多多/融兴/雪人/旋风云/瑞丰资源'.split('/');\nd.push({\n    title:'‘‘’’<span style=\"color:#00d9ff\">来个测试地址',\n    col_type: \"text_3\",\n    url:$(web_sel,4,'选1条正版|切片地址来解析').select((demoData,getOne)=>{\n        let urls = demoData[input];\n        let url = getOne(urls)||'';\n        if(!url){\n            return 'toast://'+input+'这个网站暂时没有播放例子'\n        }\n        putVar('parseUrl.url', url);\n        refreshPage(false);\n        return 'toast://给你找了个'+input+'的播放地址:\\n'+url;\n    },demoData,getOne)\n});\nd.push({\n    title:'🎯解析测试',\n    col_type:'text_3',\n    url:'hiker://page/jxTest?rule=MyFieldᴰⁿ',\n});\nif(test_mode==='Q神'){\n    d.push({\n        //'#ff7000'\n        title:'‘‘’’<span style=\"color:#ff7000\">Q神插件接口设置',\n        // title: '““Q神插件接口设置””',\n        url: \"hiker://page/EditUrl?rule=MyFieldᴰⁿ\",\n        col_type: 'text_3'\n    });\n}else if(test_mode==='断插'){\n    let url = realTitles.length>0?\"hiker://page/Route?rule=MyFieldᴰⁿ&type=编辑#noHistory#\":$('别设置了，先拉代码').confirm()\n    d.push({\n        title:'‘‘’’<span style=\"color:#ff7000\">断插接口设置',\n        url: url,\n        col_type: 'text_3'\n    });\n}\nd.push({\n    title:'‘‘’’<span style=\"color:#ff7000\">小白关怀模式: </span><span style=\"color:grey\"><small>不懂不学啥也不会？拯救傻白甜的你</small></span>',\n    url: $('#noLoading##noRecordHistory#').lazyRule(()=>{\n        return 'hiker://page/smallWhite?rule=MyFieldᴰⁿ'\n    }),\n    col_type: 'text_1',\n});\n\njxItem.lqFile();\nlet extra = d.slice(-7,d.length); //断插添加的元素\nd = d.slice(0,-7); // 自己的函数\nextra[0].title='拉取列表(不推荐)'\nextra[0].col_type='text_2'\nextra[1].title='拉取代码(强烈推荐)'\nextra[1].col_type='text_2'\nextra[4].col_type='text_center_1'\nextra[4].url=czGuide();\nextra.splice(2,1);\nd = d.concat(extra);\n// d.splice(d.length-5,1);\nsetResult(d);","searchFind":"","search_url":"","titleColor":"#AEB404","group":"工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"Parse_Dn-vue.html\",\"path\":\"Parse_Dn.html\",\"rule\":\"<!DOCTYPE html>\\n<html>\\n<head>\\n    <meta charset=\\\"utf-8\\\">\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no\\\" />\\n    <title>Parse_Dn_vue</title>\\n    <script>\\n        const vuePath = 'hiker://files/rules/dzHouse/js/vue.js';\\n        if(typeof(fba)=='undefined'||!fba){\\n            var fba = fy_bridge_app;\\n        }\\n        try {\\n            if(typeof(request)=='undefined'||!request){\\n                eval(fba.getInternalJs());\\n            }\\n            window.request = window.request00 || window.request;\\n            // fba.log(vuePath);\\n            if(!request(vuePath)){\\n                fba.writeFile(vuePath,request('http://hiker.nokia.press/hikerule/rulelist.json?id=1823'));\\n            }\\n            try {\\n                eval(fba.fetch(vuePath));\\n            }catch (e) {\\n                // console.log(e.message);\\n                fba.log(e.message);\\n            }\\n            // fba.log('加载vue组件完毕');\\n        }catch (e) {\\n            alert(e.message);\\n        }\\n    </script>\\n    <!--    <script src=\\\"https://unpkg.com/vue@next\\\"></script>-->\\n    <!--    <script src=\\\"file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/rules/dzHouse/js/vue.js\\\"></script>-->\\n    <style>\\n        body {\\n            margin: 0 5px 0 5px;\\n            padding: 0 0px 0 0px;\\n            /*            background: #F9F0DA;*/\\n            font-weight: 0;\\n            font-family: \\\"Microsoft YaHei\\\",\\\"宋体\\\",\\\"Segoe UI\\\", \\\"Lucida Grande\\\", Helvetica, Arial,sans-serif, FreeSans, Arimo;\\n        }\\n        #app{\\n            margin-top:-10px;\\n        }\\n        #tips{\\n            margin-top:-10px;\\n            margin-bottom:5px;\\n        }\\n        .fung{\\n            text-align:center\\n        }\\n        div.box {\\n            margin-top:-1px;\\n            height: 43px;\\n            line-height: 20px;\\n        }\\n        /*输入框尺寸*/\\n        form {\\n            background: transparent;\\n            position: relative;\\n            width: 100%;\\n        }\\n\\n        input, label, select {\\n            border: none;\\n            outline: none;\\n        }\\n        /*字体位置*/\\n        input {\\n            width: 77%;\\n            height: 32px;\\n            padding-left: 66px;\\n            padding-right: 0px;\\n        }\\n\\n        label {\\n            text-align:center;\\n            line-height: 43px;\\n            height: 40px;\\n            width: 60px;\\n            cursor: pointer;\\n            position: absolute;\\n        }\\n\\n        /*小框*/\\n        .bar label {\\n            /*background: #D06B6C;*/\\n            border-radius: 5px 555px 555px 5px;\\n            width: 60px;\\n            font-size: 13px;\\n            top: 0;\\n            left: 3px;\\n        }\\n\\n        /*输入框样式*/\\n        .bar input {\\n            /*border-radius: 5px 555px 555px 5px;\\n             */\\n            border-radius: 4px;\\n        }\\n\\n        /*列表*/\\n        select {\\n            text-align:center;\\n            line-height:40px;\\n            height: 40px;\\n            width: 20px;\\n            cursor: pointer;\\n            position: absolute;\\n        }\\n\\n        /*列表*/\\n        .lieb select{\\n            /*border-radius: 4px;*/\\n            border-radius: 555px 5px 5px 555px;\\n            width: 80px;\\n            text-align:center;\\n            font-size: 13px;\\n            top: 0;\\n            right: 2px;\\n        }\\n\\n        /*头像*/\\n        .round_icon{\\n            width: 40px;\\n            height: 40px;\\n            display: flex;\\n            border-radius: 50%;\\n            align-items: center;\\n            justify-content: center;\\n            overflow: hidden;\\n        }\\n    </style>\\n</head>\\n<body>\\n<div class=\\\"fung\\\">\\n    <a style=\\\"float:left;\\\">\\n        <button  :style=\\\"'border: none;border-radius:10px;background: '+themes.closeBtn.background+';width: 80px; font-size: 18px;color: '+themes.closeBtn.color\\\" onclick=\\\"cancel();\\\">关 闭</button>\\n    </a>\\n    <a class=\\\"btn btn-primary\\\">\\n        <!--        <button  :style=\\\"'border: none;border-radius:10px;background: '+themes.tipsBtn.background+';width: 120px; font-size: 18px;color: '+themes.tipsBtn.color\\\" @click=\\\"showTips=!showTips\\\">{{showTips?\\\"隐藏提示\\\":\\\"显示提示\\\"}}</button>-->\\n        <button  :style=\\\"'border: none;border-radius:10px;background: '+themes.tipsBtn.background+';width: 120px; font-size: 18px;color: '+themes.tipsBtn.color\\\" @click=\\\"showTips=!showTips\\\" v-text=\\\"showTips?'隐藏提示':'显示提示'\\\"></button>\\n    </a>\\n    <a style=\\\"float:right\\\">\\n        <button :style=\\\"'border: none;border-radius:10px;background: '+themes.saveBtn.background+';width: 80px; font-size: 18px;color: '+themes.saveBtn.color\\\" onclick=\\\"clickme('配 置 已 保 存 ！', 1000, '开');\\\">保 存</button>\\n    </a>\\n\\n</div>\\n<br>\\n<div id=\\\"app\\\">\\n    <h6 id=\\\"tips\\\" v-html=\\\"tips\\\" v-show=\\\"showTips\\\"></h6>\\n    <div class=\\\"box bar\\\" v-for=\\\"option in options\\\">\\n        <form>\\n            <!--            <label type=\\\"submit\\\" :style=\\\"'background:'+themes.barlabel.background+';color:'+themes.barlabel.color\\\">{{ option.name }}</label>-->\\n            <label type=\\\"submit\\\" :style=\\\"'background:'+themes.barlabel.background+';color:'+themes.barlabel.color\\\" v-text=\\\"option.name\\\"></label>\\n            <input :style=\\\"'background:'+themes.barInput.background+';border: 3px solid '+themes.barInput.color\\\" type=\\\"text\\\" onclick=\\\"resetSelect(this.id)\\\" :placeholder=\\\"option.placeholder||placeholder\\\" v-model=\\\"option.value\\\" v-bind:id=\\\"option.id\\\">\\n            <div class=\\\"lieb\\\">\\n                <select :style=\\\"'background:'+themes.select.background+';color:'+themes.select.color\\\" :clearable=\\\"true\\\" size=\\\"2\\\" :id=\\\"option.id+'Select'\\\" :name=\\\"option.id\\\" onchange=\\\"getOption(this.id,this.name)\\\"  v-model=\\\"option.value\\\">\\n                    <!--                    <option v-if=\\\"option.id!=='qju'&&option.id!=='cj'\\\" :value=\\\"sel\\\" :key=\\\"index\\\" v-for=\\\"(sel,index) in mySelect\\\">{{ sel }}</option>-->\\n                    <option v-if=\\\"option.id!=='qju'&&option.id!=='cj'\\\" :value=\\\"sel\\\" :key=\\\"index\\\" v-for=\\\"(sel,index) in mySelect\\\" v-text=\\\"sel\\\"></option>\\n                    <!--                    <option v-else-if=\\\"option.id==='qju'\\\" :value=\\\"sel\\\" :key=\\\"index\\\" v-for=\\\"(sel,index) in ['默认'].concat(mySelect)\\\">{{ sel }}</option>-->\\n                    <option v-else-if=\\\"option.id==='qju'\\\" :value=\\\"sel\\\" :key=\\\"index\\\" v-for=\\\"(sel,index) in ['默认'].concat(mySelect)\\\" v-text=\\\"sel\\\"></option>\\n                    <!--                    <option :value=\\\"sel\\\" :key=\\\"index\\\" v-else v-for=\\\"(sel,index) in cjSel\\\">{{ sel }}</option>-->\\n                    <option :value=\\\"sel\\\" :key=\\\"index\\\" v-else v-for=\\\"(sel,index) in cjSel\\\" v-text=\\\"sel\\\"></option>\\n                </select>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n<div>\\n    <a v-for=\\\"ver in verinfo\\\" style=\\\"float:left;margin-top:1px;margin-right: 20px\\\" v-bind:id='ver.id' onclick=\\\"doOption(this.id)\\\">\\n        <img :src=\\\"ver.avatar\\\" class=\\\"round_icon\\\"  alt=\\\"\\\">\\n        <!--        <span style=\\\"margin-left:10px;line-height:10px;font-size:12px;color: grey;\\\">{{ ver.author }}</span>-->\\n        <span style=\\\"margin-left:10px;line-height:10px;font-size:12px;color: grey;\\\" v-text=\\\"ver.author\\\"></span>\\n    </a>\\n    <a style=\\\"float:right;margin-top:10px;\\\">\\n        <button :style=\\\"'border: none;border-radius:10px;background:'+themes.saveCloseBtn.background+';width: 160px;height:40px; font-size: 18px;color: '+themes.saveCloseBtn.color\\\" onclick=\\\"clickme('配 置 已 保 存 ！', 1000, '关');\\\">保存并关闭界面</button>\\n    </a>\\n</div>\\n<script>\\n    let tips = `提示：<br>①注意插件选项，没有手动导入插件的话不用动它。如设置不当会导致规则无法使用，<br>解决办法：视界打开更多设置→文件管理→点cache→长按MyParseSet.json删除掉；<br>②全局设置如果选择了非默认那么全部的解析会使用这一设置，不想这样的话请填入默认；<br>③绿色保存按钮仅仅保存配置不会关闭设置页面，配置后想保存并关闭设置页面的话请点蓝色按钮；<br>④如果遇到保存按钮点不动或者报错的情况，以下路径挨着删除一遍，然后重新拉取插件，网页再打开此网页[不要先拉代码]。记得备份<br>\\n主插件存放路径: /cache/Parse_Dn.js<br>\\n网页脚本存放路径: /cache/Parse_Dn.html<br>\\n旧断插配置路径:/cache/MyParseSet.json<br>\\n新断插配置路径/rules/DuanNian/MyParse.json<br>\\n主题文件:/cache/MyTheme.json<br>\\n主题文件:/cache/MyTheme.json<br>\\n自动档解析:/cache/MyJiexi.json<br>\\n    ⑤阅读完提示点关闭加载完整设置页面，如出问题无法自行解决点图片进入论坛向我反馈。<br>`;\\n    let placeholder='输入解析名或者URL......';\\n    //#aa96da #fc5185\\n    let themes = {\\n        name:'默认主题',\\n        closeBtn:{color:'#f6f6f6',background:'#aa96da'},\\n        saveBtn:{color:'#F9F0DA',background:'#068006'},\\n        saveCloseBtn:{color:'#F9F0DA',background:'#05BFC5'},\\n        tipsBtn:{color:'#F9F0DA',background:'#05BFC5'},\\n        barlabel:{color:'#F9F0DA',background:'#aa96da'},\\n        barInput:{color:'#aa96da',background:'#ffffd2'},\\n        select:{color:'#F9F0DA',background:'#aa96da'},\\n    };\\n    let themeDef = {\\\"name\\\":\\\"断念原皮\\\",\\\"closeBtn\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#c5464a\\\"},\\\"saveBtn\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#068006\\\"},\\\"saveCloseBtn\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#05BFC5\\\"},\\\"tipsBtn\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#05BFC5\\\"},\\\"barlabel\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#D06B6C\\\"},\\\"barInput\\\":{\\\"color\\\":\\\"#D06B6C\\\",\\\"background\\\":\\\"#F9F0DA\\\"},\\\"select\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#D06B6C\\\"}};\\n    var themeRoute = \\\"hiker://files/cache/MyTheme.json\\\";\\n    if(!fba.fetch(themeRoute)){\\n        fba.writeFile(themeRoute,JSON.stringify({now_theme:'默认主题',themes:[themes,themeDef]}))\\n    }\\n    try {\\n        let myThemes = JSON.parse(fba.fetch(themeRoute));\\n        let nowTheme = myThemes.themes.filter(it=>it.name === myThemes.now_theme);\\n        themes = nowTheme?nowTheme[0]:myThemes.themes[0];\\n    }catch (e) {}\\n\\n    // 断念初始化部分\\n    const allApi=['https://test.rongxingvr.com/test/?url=','http://cache.languang.icu:88/didi.php?url='];\\n    var settings = {\\n        qy: '万能解析Ⓙ',\\n        yk: '万能解析Ⓙ',\\n        tx: '万能解析Ⓙ',\\n        mg: '万能解析Ⓙ',\\n        bl: '万能解析Ⓙ',\\n        sh: '万能解析Ⓙ',\\n        xg: '万能解析Ⓙ',\\n        // al: '万能解析Ⓙ',\\n        pp: '万能解析Ⓙ',\\n        mi: '万能解析Ⓙ',\\n        le: '万能解析Ⓙ',\\n        lt: '万能解析Ⓙ',//龙腾\\n        rr:'万能解析Ⓙ',//人人迷\\n        wd:'万能解析Ⓙ',//五毒云\\n        oth: '道长仓库通免',\\n        one: '1080',\\n        fun: '融兴',\\n        qju: '默认',\\n        cj: 'hiker://files/cache/Parse_Dn.js'\\n    };\\n    var oldRoute = \\\"hiker://files/cache/MyParseSet.json\\\";\\n    var mySet = fba.fetch(oldRoute);\\n    var newRoute = \\\"hiker://files/rules/DuanNian/MyParse.json\\\";\\n    if(!fba.fetch(newRoute)){\\n        fba.writeFile(newRoute,JSON.stringify({settings:settings,title:[\\\"yun1717\\\",\\\"你爹科技\\\",\\\"融兴\\\",\\\"人人迷-优酷\\\"],codes:{\\\"你爹科技\\\":\\\"http://cache.languang.icu:88/didi.php?url=\\\",\\\"融兴\\\":\\\"https://test.rongxingvr.com/test/?url=\\\",\\\"人人迷-优酷\\\":\\\"https://svip.renrenmi.cc:2222/api/?key=nn4j8rukPXSVzR78E9&url=\\\"}}))\\n    }\\n    var newConfig = fba.fetch(newRoute);\\n    var mySelect = [];\\n    function compare(list) {\\n        return function (it) {\\n            return !list.includes(it)\\n        }\\n    }\\n    if(newConfig&&newConfig.length>20){\\n        eval(\\\"newConfig =\\\" + newConfig + \\\";\\\");\\n        let newKeys = Object.keys(newConfig.settings);\\n        let nowKeys = Object.keys(settings);\\n        for(let i in newKeys){//清除多余的节点\\n            if(!nowKeys.includes(newKeys[i])){\\n                delete newConfig.settings[newKeys[i]]\\n            }\\n        }\\n        settings = Object.assign(settings,newConfig.settings);\\n        var ycTitle = ['defaultParse', 'defaultParseWeb','maoss', 'CityIP', 'cacheM3u8', 'pcUA', 'parseLc', 'gparse', 'nparse'];\\n        mySelect = newConfig.title.filter(compare(ycTitle));\\n        // mySelect = mySelect.map((it)=>{\\n        //     let flag = 'Ⓤ';\\n        //     if(typeof(newConfig.codes[it])==='function'){\\n        //         flag = 'Ⓙ';\\n        //     }else if(typeof(newConfig.codes[it])==='undefined'){\\n        //         flag = '';\\n        //     }\\n        //     return flag+it\\n        // });\\n    }\\n    //fba.log(JSON.stringify(mySelect));\\n\\n    let options = [\\n        {\\n            name:'爱奇艺',\\n            id:'qy',\\n            value:settings.qy,\\n            placeholder:'设置爱奇艺'\\n        },\\n        {\\n            name:'优酷',\\n            id:'yk',\\n            value:settings.yk\\n        },\\n        {\\n            name:'腾讯',\\n            id:'tx',\\n            value:settings.tx\\n        },\\n        {\\n            name:'芒果',\\n            id:'mg',\\n            value:settings.mg\\n        },\\n        {\\n            name:'哔哩哔哩',\\n            id:'bl',\\n            value:settings.bl\\n        },\\n        {\\n            name:'搜狐',\\n            id:'sh',\\n            value:settings.sh\\n        },\\n        {\\n            name:'西瓜',\\n            id:'xg',\\n            value:settings.xg\\n        },\\n        {\\n            name:'PPTV',\\n            id:'pp',\\n            value:settings.pp\\n        },\\n        {\\n            name:'咪咕',\\n            id:'mi',\\n            value:settings.mi\\n        },\\n        {\\n            name:'乐视',\\n            id:'le',\\n            value:settings.le\\n        },\\n        {\\n            name:'1905',\\n            id:'one',\\n            value:settings.one\\n        },\\n        {\\n            name:'风行',\\n            id:'fun',\\n            value:settings.fun\\n        },\\n        {\\n            name:'龙腾',\\n            id:'lt',\\n            value:settings.lt\\n        },\\n        {\\n            name:'人人迷',\\n            id:'rr',\\n            value:settings.rr\\n        },\\n        {\\n            name:'五毒',\\n            id:'wd',\\n            value:settings.wd\\n        },\\n        {\\n            name:'其他',\\n            id:'oth',\\n            value:settings.oth\\n        },\\n        {\\n            name:'全局',\\n            id:'qju',\\n            value:settings.qju\\n        },\\n        {\\n            name:'插件',\\n            id:'cj',\\n            value:settings.cj\\n        },\\n    ];\\n\\n    function Did(id){\\n        return document.getElementById(id);\\n    }\\n    function getOption(id,title) {\\n        var obj = Did(id);\\n        Did(title).value = obj.options[obj.selectedIndex].text;\\n        // Did(title).value = obj.options[obj.selectedIndex].text.replace(/Ⓤ|Ⓙ/g,'');\\n    }\\n    function resetSelect(id){\\n        Did(id+\\\"Select\\\").options.selectedIndex = -1;\\n    }\\n\\n    //函数部分\\n\\n    function Toast(msg,duration){\\n        duration=isNaN(duration)?2000:duration;\\n        var m = document.createElement('div');\\n        m.innerHTML = msg;\\n        m.style.cssText=\\\"width:45%; min-width:150px; background:#311; opacity:0.6; height:auto;min-height: 45px; color:#fff; line-height:45px; text-align:center; border-radius:10px; position:fixed; top:60%; left:26%; z-index:999999;\\\";\\n        document.body.appendChild(m);\\n        setTimeout(function() {\\n            var d = 0.5;\\n            m.style.webkitTransition = '-webkit-transform ' + d + 's ease-in, opacity ' + d + 's ease-in';\\n            m.style.opacity = '0';\\n            setTimeout(function() { document.body.removeChild(m) }, d * 1000);\\n        }, duration);\\n    }\\n\\n    function openDnPage(){\\n        fba.open(JSON.stringify({\\n            rule: \\\"=^_^=\\\",\\n            title: \\\"编辑解析\\\",\\n            url: \\\"hiker://page/Route?rule=MyFieldᴰⁿ&type=编辑#noHistory##noRecordHistory#\\\",\\n            group: \\\"\\\",\\n            col_type: \\\"\\\",\\n            //findRule: \\\"js:this.d=[];$.require(\\\\\\\"hiker://page/Parse_Dn.js?rule=MyFieldᴰⁿ\\\\\\\").edit();setResult(d);\\\",\\n            preRule: \\\"\\\",\\n            extra: {}\\n        }));\\n    }\\n    function openTheme(){\\n        fba.open(JSON.stringify({\\n            rule: \\\"=^_^=\\\",\\n            title: \\\"主题管理\\\",\\n            url: \\\"hiker://page/Route?rule=MyFieldᴰⁿ&type=主题#noHistory##noRecordHistory#\\\",\\n            group: \\\"\\\",\\n            col_type: \\\"\\\",\\n            preRule: \\\"\\\",\\n            extra: {}\\n        }));\\n    }\\n    function openJxManage(){\\n        fba.open(JSON.stringify({\\n            rule: \\\"=^_^=\\\",\\n            title: \\\"解析配置管理\\\",\\n            url: \\\"hiker://page/Route?rule=MyFieldᴰⁿ&type=解析#noHistory##noRecordHistory#\\\",\\n            group: \\\"\\\",\\n            col_type: \\\"\\\",\\n            preRule: \\\"\\\",\\n            extra: {}\\n        }));\\n    }\\n    function cancel(){\\n        if(!mySet){\\n            fba.writeFile(oldRoute, JSON.stringify(settings, null, 4));\\n            fba.refreshPage(true);\\n        }else{\\n            fba.back(false);\\n        }\\n    }\\n    function clickme(msg,duration,title){\\n        try{\\n            for(let key in settings){\\n                // fba.log(Did(key)+''+key);\\n                try{\\n                    //settings[key] = Did(key).value.replace(/Ⓤ|Ⓙ/g,'');\\n                    settings[key] = Did(key).value;\\n                }catch(e){\\n                    alert(\\\"未获取到节点:\\\"+key+\\\"\\\\n\\\"+e.message);\\n                }\\n\\n            }\\n            if(mySelect){\\n                Object.assign(newConfig.settings, settings);\\n                fba.writeFile(newRoute, $$$.stringify(newConfig));\\n            }\\n            fba.writeFile(oldRoute, $$$.stringify(settings));\\n            Toast(msg,duration);\\n            if(title===\\\"关\\\"){\\n                fba.back();\\n            }else{\\n                fba.refreshPage(true);\\n            }\\n        }catch(e){\\n            alert(e.message)\\n        }\\n    }\\n\\n    //let width=window.screen.availWidth;\\n    //let widthPx=width-393+52;\\n    //alert(\\\"当前分辨率:\\\"+window.screen.availWidth+\\\"*\\\"+window.screen.height);\\n    var verinfo = [{\\n        id:'dn',\\n        author:'断念',\\n        avatar:'https://s3.ax1x.com/2021/02/22/y7wb9O.jpg',\\n        option:openDnPage,\\n    },\\n        {\\n            id:'dz',\\n            author:'道长',\\n            avatar:'http://q1.qlogo.cn/g?b=qq&nk=434857005&s=640',\\n            option:openTheme\\n        },\\n        {\\n            id:'lm',\\n            author: '蓝莓',\\n            avatar: 'http://q1.qlogo.cn/g?b=qq&nk=2579949378&s=640',\\n            option:openJxManage\\n        }\\n    ];\\n\\n    function doOption(option_id){\\n        let ver = verinfo.filter(it=>it.id===option_id)[0];\\n        ver.option();\\n    }\\n\\n    const RenderHtmlApp = {\\n        data() {\\n            return {\\n                // rawHtml: '<span style=\\\"color: red\\\">这里会显示红色！</span>',\\n                options:options,\\n                verinfo:verinfo,\\n                placeholder:placeholder,\\n                tips:tips,\\n                themes:themes,\\n                mySelect:mySelect,\\n                // cjSel:['请选择插件 (只作用lazyRule)','hiker://files/cache/Parse_Dn.js','hiker://files/rules/dzHouse/js/srcauto.js','hiker://files/rules/js/Parse-V2_Dn.js'],\\n                cjSel:['请选择插件 (只作用lazyRule)','hiker://files/cache/Parse_Dn.js','hiker://files/rules/dzHouse/js/srcauto.js'],\\n                settings:settings,\\n                showTips:false,\\n                //widthPx:widthPx\\n            }\\n        },\\n        methods:{\\n            // changeVal:function(event){\\n            //     getOption(this.id,this.name);\\n            //     this.selOption = event.target.value;\\n            //     alert(\\\"你选中了\\\"+event.target.value);\\n            // }\\n            doOption:doOption\\n        }\\n    }\\n    try {\\n        const app=Vue.createApp(RenderHtmlApp);\\n        app.mount('body');\\n    }catch (e) {\\n        console.log(e.message)\\n    }\\n\\n</script>\\n\\n</body>\\n</html>\"},{\"col_type\":\"movie_3\",\"name\":\"Parse_Dn.js\",\"path\":\"Parse_Dn.js\",\"rule\":\"//============免嗅调用============\\n//－－－=^_^=\\n\\nvar version = \\\"3.49221205\\\";//1205\\n\\nvar updateDate = '2022/12/05/ 13:18';\\nvar _mySet = {\\n    qju: '默认',\\n    oth:'道长仓库通免',\\n    cjcache: 'hiker://files/cache/Parse_Dn.js',\\n    themecache: 'hiker://files/cache/MyTheme.json',\\n    jiexicache: 'hiker://files/cache/MyJiexi.json',\\n    x5cache: 'hiker://files/cache/Parse_Dn.html',\\n    dmCache: 'hiker://files/cache/diaomao.txt',\\n    oldConfig: 'hiker://files/cache/MyParseSet.json',\\n    ckLink: 'https://code.aliyun.com/AI957/Hiker/raw/master/v/',\\n    // cj: 'https://code.aliyun.com/AI957/Hiker/raw/master/v/CloudParse-V2_Dn.js',\\n    cj: 'https://gitcode.net/qq_32394351/dr/-/raw/master/dp/Parse_Dn.js',\\n    // x5Url: 'https://code.aliyun.com/AI957/Hiker/raw/master/v/Parse_Dn.html',\\n    x5Url: 'http://dr.nokia.press/html/Parse_Dn-vue.html',\\n    parseRoute: 'hiker://files/rules/DuanNian/MyParse.json',\\n    // x5Route: 'file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/cache/Parse_Dn.html'\\n    x5Route: getPath('hiker://files/cache/Parse_Dn.html'),\\n    batchRoute:getPath('hiker://files/cache/plscParse.html')\\n};\\nvar MyParseS = {};\\nvar mySet = _mySet;\\nif (fileExist(_mySet.parseRoute)) {\\n    eval('var parseFile =' + fetch(_mySet.parseRoute));\\n    MyParseS = parseFile.codes;\\n    mySet = parseFile.settings;\\n}\\nvar parseTitle = [\\n    \\\"yun1717\\\",\\n    \\\"PanGu\\\",\\n    \\\"FuXing\\\",\\n    \\\"isVideo\\\",\\n    \\\"defaultParse\\\",\\n    \\\"道长仓库通免\\\",\\n    \\\"timeOut\\\",\\n    \\\"源码匹配\\\",\\n    \\\"defaultParseWeb\\\",\\n    \\\"OK解析\\\",\\n    \\\"M3U8TV\\\",\\n];\\n//－－－=^_^=\\n\\n//接口设置.\\n\\nvar setUrl = \\\"hiker://page/Route?rule=MyFieldᴰⁿ&type=设置#noRecordHistory#\\\";\\nvar set_switch = setUrl;\\nvar lazy = `eval('var config_dp =' + fetch(getVar('oldConfig')));eval(fetch(config_dp.cj));aytmParse(input)`;\\n\\n//var parwix = `var yurl='https://daili.mayixiongdi.cn/?url=';Referer': 'https://www.mayixiongdi.cn/ys?id=';'https://daili.mayixiongdi.cn/api.php', 'Referer':'https://daili.mayixiongdi.cn';\\n// 全民https://pcvideoaliyun.tianshangrenjian.mgtv.com.88wuma.com/?url=\\n\\n//－－－备 用－－－\\n/*\\n * 影视工场： https://ysgc.cc/\\n * 江湖: 555电影 https://www.555dy2.com/phone.html ｜ 17看 http://17kanyy.cn/ http://jhjiexi.30vr.cn/?url= ｜ http://api.maizimall.com/index.php?url=\\n * 江湖: http://www.tianshuyun.net/index.php/vod/play/id/448377/sid/1/nid/1.html\\n * 江湖2: http://98hyk.cn/index.php/vod/play/id/72841/sid/1/nid/1.html\\n * 人人迷: https://vip.susou.tv/player/?url= ｜ https://www.momdm.cc/\\n *\\n * wuigen: https://www.5igen.com/dmplayer/player/?url=\\n * 干饭(人人迷): https://jx.zui.cm/?url=\\n * https://2.66movie.top/player/?url=\\n *\\n */\\n\\n\\nvar tools = {\\n    MD5: function(data) {\\n        eval(getCryptoJS());\\n        return CryptoJS.MD5(data).toString(CryptoJS.enc.Hex);\\n    },\\n    AES: function(text, key, iv, isEncrypt) {\\n        eval(getCryptoJS());\\n        var key = CryptoJS.enc.Utf8.parse(key);\\n        var iv = CryptoJS.enc.Utf8.parse(iv);\\n        if (isEncrypt) {\\n            return CryptoJS.AES.encrypt(text, key, {\\n                iv: iv,\\n                mode: CryptoJS.mode.CBC,\\n                padding: CryptoJS.pad.Pkcs7\\n            }).toString();\\n        };\\n        return CryptoJS.AES.decrypt(text, key, {\\n            iv: iv,\\n            padding: CryptoJS.pad.Pkcs7\\n        }).toString(CryptoJS.enc.Utf8);\\n    },\\n    //ascii\\n    nextCharacter: function(asciiValue, k) {\\n        var s = asciiValue;\\n        return String.fromCharCode(s + k);\\n    },\\n    //凯撒\\n    caesarCipher: function(stringValue, k) {\\n        var newString = \\\"\\\";\\n        for (var i = 0; i < stringValue.length; i++) {\\n            newString += this.nextCharacter(stringValue[i].charCodeAt(), k);\\n        }\\n        return newString;\\n    },\\n    nowDate: function() {\\n        var date1 = new Date();\\n        var dateStr = \\\"\\\";\\n        if (date1) {\\n            dateStr = date1.getFullYear();\\n            var month = date1.getMonth() + 1;\\n            var day = date1.getDate();\\n            if (month < 10) {\\n                dateStr += \\\"-0\\\" + month;\\n            } else {\\n                dateStr += \\\"-\\\" + month;\\n            }\\n            if (day < 10) {\\n                dateStr += \\\"-0\\\" + day;\\n            } else {\\n                dateStr += \\\"-\\\" + day;\\n            }\\n        }\\n        return dateStr;\\n    },\\n    nowDateStr:function (){ // 利用$工具获取格式化后的当前时间\\n        return  $.dateFormat(new Date(),\\\"yyyy-MM-dd HH:mm:ss\\\");\\n    },\\n    toJSON: function(json) {\\n        return JSON.stringify(json, (key, value) => {\\n            if (typeof value == 'function') {\\n                return value.toString();\\n            } else {\\n                return value;\\n            }\\n        }, 4);\\n    },\\n    toVNum: function(a) {\\n        var a = a.toString();\\n        var c = a.split('.');\\n        var num_place = [\\\"\\\", \\\"0\\\", \\\"00\\\", \\\"000\\\", \\\"0000\\\"],\\n            r = num_place.reverse();\\n        for (var i = 0; i < c.length; i++) {\\n            var len = c[i].length;\\n            c[i] = r[len] + c[i];\\n        }\\n        var res = c.join('');\\n        return res;\\n    },\\n    cprVersion: function(a, b) {\\n        var _a = parseInt(this.toVNum(a)),\\n            _b = parseInt(this.toVNum(b));\\n        b = isNaN(_b) ? version : b;\\n        if (_a > _b) {\\n            putVar('jxNewV', '有新版本: ' + a);\\n        } else {\\n            clearVar('jxNewV');\\n        }\\n        putVar('jxOldV', b);\\n    },\\n    atob:function (str){\\n        require('https://cdn.jsdelivr.net/npm/js-base64@3.7.2/base64.min.js');\\n        return Base64.atob(str);\\n    },\\n    btoa:function (str){\\n        require('https://cdn.jsdelivr.net/npm/js-base64@3.7.2/base64.min.js');\\n        return Base64.btoa(str);\\n    },\\n    江湖:function (config_url, tem, token) {\\n        require('https://cdn.jsdelivr.net/npm/js-base64@3.7.2/base64.min.js');\\n        var atob=Base64.atob;\\n        var btoa=Base64.btoa;\\n        var config_a = tem || \\\"ffsirllq\\\";\\n        var video = '';\\n        var tem = [];\\n        var config_arry = [];\\n        var config_b = config_a.length;\\n        if (token == 0x1) {\\n            var config_url = atob(config_url);\\n        } else {\\n            var config_url = encodeURIComponent(config_url);\\n        }\\n        var config_c = config_url.length;\\n        for (i = 0x0; i < 0x100; i++) {\\n            tem[i] = config_a[i % config_b].charCodeAt();\\n            config_arry[i] = i;\\n        }\\n        for (j = i = 0x0; i < 0x100; i++) {\\n            j = (j + config_arry[i] + tem[i]) % 0x100;\\n            tmp = config_arry[i];\\n            config_arry[i] = config_arry[j];\\n            config_arry[j] = tmp;\\n        }\\n        for (a = j = i = 0x0; i < config_c; i++) {\\n            a = (a + 0x1) % 0x100;\\n            j = (j + config_arry[a]) % 0x100;\\n            tmp = config_arry[a];\\n            config_arry[a] = config_arry[j];\\n            config_arry[j] = tmp;\\n            k = config_arry[(config_arry[a] + config_arry[j]) % 0x100];\\n            video += String.fromCharCode(config_url[i].charCodeAt() ^ k);\\n        }\\n        log(decodeURIComponent(video));\\n        if (token == 0x1) {\\n            return decodeURIComponent(video);\\n        } else {\\n            return btoa(video);\\n        }\\n    }\\n};\\nif (getVar(\\\"jxOldV\\\", \\\"0\\\") != version) {\\n    putVar('cjCache', _mySet.cjcache);\\n    putVar('x5Cache', _mySet.x5Cache);\\n    putVar('oldConfig', _mySet.oldConfig);\\n    putVar('parseRoute', _mySet.parseRoute);\\n    // let jxNewV = fetch('https://gitee.com/Duan-Nian/Dn/raw/master/hikerview/ParseVersion.txt');\\n    let jxNewV = fetch('https://gitcode.net/qq_32394351/dr/-/raw/master/dp/ParseVersion.txt');\\n    let jxOldV = (fetch(_mySet.cjcache).split('version = \\\"')[1] + '').split('\\\"')[0];\\n    tools.cprVersion(jxNewV, jxOldV);\\n}\\n\\nvar ParseS = {};\\nvar originalParseS = {\\n    // updateDate: updateDate,\\n    parseLc:'https://code.aliyun.com/AI957/Hiker/raw/master/p/parseLc.js',\\n    CityIP: 'http://pv.sohu.com/cityjson',\\n    pcUA: 'User-Agent@Mozilla/5.0 (Windows NT 10.0\\\\；\\\\； WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.87 Safari/537.36',\\n    cacheM3u8: function(vUrl, ref) {\\n        let paramas = ref?{headers:{Referer:ref}}:{};\\n        return cacheM3u8(url, paramas)\\n    },\\n    isVideo:function(playUrl){\\n        const {isVideo} = $.require('hiker://page/globalParse?rule=道长仓库Pro');\\n        return isVideo(playUrl)\\n    },\\n    timeOut:function () {\\n        const lsg=$.require(\\\"hiker://page/localStorage?rule=道长仓库Pro\\\");\\n        return parseInt(lsg.getItem('timeout', '5000'));  //超时\\n    },\\n    源码匹配:function (vipUrl,regex,pos,headers){\\n        if(!regex||!vipUrl){\\n            return 'toast://解析播放链接和正则匹配字符串必填!'\\n        }\\n        if((!pos&&pos!==0)||(pos&&typeof(pos)!=\\\"number\\\")){//match匹配位置\\n            pos = 1\\n        }\\n        headers = headers||{};\\n        headers['User-Agent'] = headers['User-Agent']||MOBILE_UA;\\n        let html = fetch(vipUrl, {headers:headers,timeout:this.timeOut()});\\n        try {\\n            let realUrl = html.match(new RegExp(regex))[pos];\\n            return this.isVideo(realUrl);\\n        } catch (e) {\\n            log(e.message);\\n            return vipUrl;\\n        }\\n    },\\n    defaultParse: function(url,timeout) {\\n        return ParseS.defaultParseWeb(url,timeout);\\n    },\\n    defaultParseWeb: function(playUrl,timeout,extra) {\\n        // log('传入defaultParseWeb的超时:'+timeout);\\n        timeout = parseInt(timeout)||parseInt(getVar('dp.jxTimeout','5000'))||5000;\\n        extra = extra||{};\\n        let playUrlList = extra.playUrlList||[];\\n        if(typeof(playUrlList)==='object'&&playUrlList.length>0){\\n            playUrlList.unshift(playUrl);\\n            let playUrls=playUrlList.slice(0,4);\\n            let names=extra.nameList.slice(0,4);\\n            // log('开始批量解析(已去重,只取前3个备胎，加道长群:486722328获取最新魔断动态):'+names);\\n            playUrls=playUrls.map((it,id)=>it+\\\";\\\"+names[id]);\\n            //log(playUrls);\\n            const {LazyParseFast} = $.require('hiker://page/globalParse?rule=道长仓库Pro');\\n            let ret = LazyParseFast(playUrls,timeout,timeout);\\n            if(typeof(ret)==='object'&&ret.length>0){\\n                //return ret[0]\\n                //log(ret);\\n                let v = getAppVersion();\\n                if(parseInt(v)>=2194&&ret.length>1){\\n                    let urls = Array.from(new Set(ret));\\n                    names=urls.map((it,id)=>it.split(\\\"★\\\").length>1?it.split(\\\"★\\\")[1]:\\\"线路:\\\"+parseInt(id+1));\\n                    urls=urls.map(it=>it.split(\\\"★\\\")[0]);\\n                    let headers = urls.map((it)=>{\\n                        if(!/;/.test(it)||it.split(';').length<2){\\n                            return {}\\n                        }else{\\n                            let head = it.split(';')[1];\\n                            if(!/@/.test(head)||!/{|}/.test(head)){\\n                                return {}\\n                            }\\n                            head=head.split(\\\"{\\\")[1].split(\\\"}\\\")[0];\\n                            //head = head.replace(/{|}/g,'');\\n                            head = head.split('&&');\\n                            let obj = {};\\n                            for(let i in head){\\n                                let key = head[i].split('@')[0];\\n                                let value = head[i].split('@')[1].replace(/;/,'；；');\\n                                obj[key] = value;\\n                            }\\n                            return obj\\n                        }\\n                    });\\n                    urls = urls.map((it)=>{\\n                        let turl=it.split(';')[0];\\n                        if(it.includes(\\\"#isVideo=true#\\\")&&!turl.includes(\\\"#isVideo=true#\\\")){\\n                            turl+=\\\"#isVideo=true#\\\";\\n                        }\\n                        return turl\\n                    });\\n                    return JSON.stringify({urls:urls,headers:headers,names:names});\\n                }else{\\n                    return ret[0].split(\\\"★\\\")[0]\\n                }\\n            }else{\\n                return ret\\n            }\\n        }else{\\n            const {lazyParse} = $.require('hiker://page/globalParse?rule=道长仓库Pro');\\n            let x5Play=lazyParse(playUrl,timeout);\\n            if(typeof(x5Play)==\\\"undefined\\\"||!x5Play){\\n                return \\\"toast://道长仓库解析失败\\\"\\n            }\\n            let tips=/x5Rule|webRule/.test(x5Play)?\\\"x5/web免嗅开始\\\":\\\"极速免嗅探完毕，地址:\\\"+(/^http/.test(x5Play)?x5Play:'非正常链接');\\n            log(tips);\\n            return x5Play;\\n        }\\n    },\\n    \\\"maoss\\\":\\n        function (jxurl, ref, key) {\\n            return this.猫(jxurl, ref, key)\\n        },\\n    免嗅:function(vipUrl,k){\\n        k=k||[\\\"url\\\",\\\"data.url\\\"];\\n        try{\\n            let rjson=JSON.parse(fetch(vipUrl));\\n            //log(rjson);\\n            let realUrl='';\\n            if(typeof(k)=='string'){\\n                realUrl=eval(`rjson.${k}`);\\n            }else if(Array.isArray(k)){\\n                for(let i of k){\\n                    //log(i);\\n                    realUrl=eval(`rjson.${i}`);\\n                    if(realUrl){\\n                        break;\\n                    }\\n                }\\n            }\\n            if(realUrl.startsWith('/')){\\n                realUrl = 'https://'+realUrl;\\n            }\\n            return this.isVideo(realUrl)||\\\"\\\";\\n        }catch(e){\\n            log(e.message);\\n            return \\\"\\\"\\n        }\\n    },\\n    X5:function(vipUrl,ref){// https://api.52wyb.com/webcloud/?v=http://vip.1905.com/play/691940.shtml http://www.cdcer.net/\\n        let _x5 = $.toString((vipUrl) => {\\n            if(!location.href.includes(vipUrl)){\\n                location.href = vipUrl;\\n            }\\n            if(window.count == null){\\n                window.count=1;\\n            }\\n            window.count++;\\n            if( window.count >= 20){\\n                fba.log(\\\"未获取到资源地址，跳到解析页\\\");\\n                return vipUrl\\n            }\\n            var urls = _getUrls();\\n            for (var i in urls) {\\n                if (!/playm3u8|m3u8\\\\.tv/.test(urls[i]) && urls[i].match(/\\\\.mp3|\\\\.mp4|\\\\.m3u8|\\\\.flv/)) {\\n                    fba.log(urls[i]);\\n                    return urls[i]\\n                }\\n            }\\n        },vipUrl);\\n        let playUrl = ref?ref:vipUrl;\\n        let x5Url = 'webRule://'+playUrl+ '@' +_x5;\\n        showLoading('魔断.js嗅探中...');\\n        return x5Url\\n    },\\n    '道长':function (vipUrl){\\n        evalPrivateJS('zSWve+eeA6iL+f2fGTI+1pR8jnLd0SiyV6yvgcPMWwBMP5aYpqhTFbISxnvhb0bd5VgizyUMHe4dmsnGhWLBkqfb5HfNbIW4MBMxzLpP/9TjNT8SIQAfjdTj4P8oX35ekKNvGVxDolyfcYrpoKwNoQ==');\\n        return this.免嗅(vipUrl+'&secret='+secret)\\n    },\\n    '猫':function (jxurl, ref, key) {\\n        try {\\n            var getVideoInfo = function (text) {\\n                return tools.AES(text, key, iv);\\n            };\\n            let headers = {headers: {\\\"Referer\\\": ref||''}};\\n            key = key == undefined ? \\\"dvyYRQlnPRCMdQSe\\\" : key;\\n            var html = ref?request(jxurl, headers):request(jxurl);\\n            if (/&btwaf=/.test(html)) {\\n                html = request(jxurl + \\\"&btwaf\\\" + html.match(/&btwaf(.*?)\\\"/)[1], headers);\\n            }\\n            var iv = html.split(\\\"_token = \\\\\\\"\\\")[1].split(\\\"\\\\\\\"\\\")[0];\\n            eval(html.match(/var config = {[\\\\s\\\\S]*?}/)[0] + \\\"\\\");\\n            if (!/^http/.test(config.url)) {\\n                config.url = decodeURIComponent(tools.AES(config.url, key, iv));\\n            }\\n            return config.url;\\n        }\\n        catch (e) {\\n            // return \\\"\\\";\\n            return jxurl;\\n        }\\n    },\\n    LLQ: function(jxurl) {\\n        try {\\n            var api = jxurl.split('?url=')[0] + \\\"api.php\\\";\\n            var b64id = base64Encode(jxurl.split('url=')[1]);\\n            var parseid = tools.caesarCipher(b64id, -1);\\n            var json = JSON.parse(request(api, {\\n                headers: {\\n                    'Referer': jxurl\\n                },\\n                method: 'POST',\\n                body: 'url=' + parseid\\n            }));\\n            url = (json.code == 200 ? base64Decode(tools.caesarCipher(json.url, -1)) : '');\\n            return url;\\n        } catch (e) {\\n            return '';\\n        }\\n    },\\n    PanGu: function(vipUrl, data) {\\n        try {\\n            /*var ref = 'https://www.pangujiexi.com/';\\n            var parse = 'https://panguapi.ntryjd.net/jiexi/?url=' + vipUrl;\\n            var api = 'https://panguapi.ntryjd.net/jiexi/api.php';\\n            */\\n            //var ref = 'https://xmystv.com/';\\n            //var parse = 'https://www.99kpw.com/pangu/index.php?url=' + tailUrl;\\n            //var api = 'https://www.99kpw.com/pangu/api.php';\\n            var parse = 'https://www.pangujiexi.com/pangu/?url=' + vipUrl;\\n            var api = 'https://panguapi.ntryjd.net/pangu2021/api.php';\\n            if (data) {\\n                ref = data[0];\\n                parse = data[1];\\n                api = data[2];\\n            }\\n            var Time = (Math.floor(new Date().getTime() / 1000) * 1).toString();\\n            var url = JSON.parse(request(api, {\\n                headers: {\\n                    'Referer': parse\\n                },\\n                body: 'url=' + vipUrl + '&referer=' + base64Encode(parse) + '&ref=1&time=' + Time + '&type=&other=' + base64Encode(vipUrl) + '&ios=0',\\n                method: 'POST'\\n            })).url;\\n            return url;\\n        } catch (e) {\\n            return '';\\n        }\\n    },\\n    yun1717: function (vipUrl) {\\n        var isyk = vipUrl.indexOf('youku');\\n        var ref = \\\"https://www.1717yun.com/jx/ty.php?url=\\\" + vipUrl;\\n        var parse = \\\"https://1717yun.com.zh188.net/0828/?url=\\\" + vipUrl;\\n        var api = \\\"https://1717yun.com.zh188.net/1004/..index..php\\\";\\n        return isyk == -1 ? this.PanGu(vipUrl, [ref, parse, api]) : this.PanGu(vipUrl, [ref + ',vip:', parse + ',vip:', api]);\\n    },\\n    OK解析:'https://okjx.cc/?url=',\\n    M3U8TV:'https://jx.m3u8.tv/jiexi/?url=',\\n    道长仓库通免:function (url,timeout){\\n        return ParseS.defaultParseWeb(url,timeout);\\n    },\\n    FuXing: function(vipUrl) {\\n        try {\\n            //if(vipUrl.indexOf('v.youku')!=-1){\\n            //    vipUrl = (JSON.parse(request(vipUrl, {redirect:false, withHeaders:true})).headers.location + '').replace(/\\\\?.*/,'');\\n            //}\\n            var ref = 'https://jx.xuetuiguang.cn/jiexi/?url=' + vipUrl;\\n            var parse = ref;\\n            var api = 'https://jx.xuetuiguang.cn/jiexi/apiu_fx.php';\\n            return this.PanGu(vipUrl, [ref, parse, api]);\\n        } catch (e) {\\n            return '';\\n        }\\n    },\\n};\\n\\nObject.assign(ParseS, originalParseS, MyParseS);\\n//覆盖顺序，第三个覆盖第二个然后覆盖第一个\\n\\n\\nfunction aytmParse(vipUrl,strTitle,timeout,playUrl) {\\n    // 参数1:正版网址地址 参数2 定向解析接口名称 参数3 x5解析超时 参数4 完整的播放链接\\n    strTitle = strTitle||'';\\n    vipUrl = decodeURIComponent(vipUrl);\\n    if(!/miguvideo/.test(vipUrl)){\\n        vipUrl=vipUrl.split('#')[0].split('?')[0];\\n    }\\n    playUrl=decodeURIComponent(playUrl)||vipUrl||'';\\n    // log('传入aytmParse的超时:'+timeout);\\n    timeout = parseInt(timeout)||parseInt(getVar('dp.jxTimeout','5000'))||5000;\\n\\n    //-------------------------------------------------\\n    let jxsRoute = \\\"hiker://files/cache/MyJiexi.json\\\";\\n    let MyJiexi = {};\\n    let jiexis = {};\\n    try {\\n        MyJiexi = JSON.parse(fetch(jxsRoute));\\n        jiexis = MyJiexi.jiexis.filter(it=>it.name===MyJiexi.now)[0];\\n    }catch (e) {}\\n    function getPlayJx(key){\\n        let playUrlList = [];//批量播放地址列表\\n        let nameList = [];\\n        let jxs = jiexis[key]; // 适用于这个网站的解析列表\\n        if(jxs){\\n            for(let i in jxs){\\n                if(typeof ParseS[jxs[i]] == 'string'&&ParseS[jxs[i]].match(/http.*?=/)){\\n                    playUrlList.push(ParseS[jxs[i]]+vipUrl);\\n                    nameList.push(jxs[i]);\\n                }\\n            }\\n        }\\n        // return playUrlList\\n        return {playUrlList:playUrlList,nameList:nameList}\\n    }\\n    function getLazyList(key){//只获取备胎列表的免嗅探解析列表\\n        let parses = [];\\n        let jxs = jiexis[key]||[]; // 适用于这个网站的解析列表\\n        // log(jxs);\\n        if(jxs){\\n            for(let i in jxs){\\n                if(typeof ParseS[jxs[i]] == 'function'&&!/通免/.test(ParseS[jxs[i]].toString())){\\n                    parses.push({\\n                        name:jxs[i],\\n                        // rule:ParseS[jxs[i]]\\n                    })\\n                }\\n            }\\n        }\\n        return parses\\n    }\\n    var extra = {};\\n    var parses = []; //免嗅探列表\\n    //-------------------------------------------------------\\n    if(!strTitle){\\n        if(/LT/.test(vipUrl)){\\n            str = mySet.lt;\\n            extra = getPlayJx('lt');\\n            parses = getLazyList('lt',str);\\n        } else if(/renrenmi/.test(vipUrl)){\\n            str = mySet.rr;\\n            extra = getPlayJx('rr');\\n            parses = getLazyList('rr',str);\\n        }else if(/wuduyun/.test(vipUrl)){\\n            str = mySet.wd;\\n            extra = getPlayJx('wd');\\n            parses = getLazyList('wd',str);\\n        }else if(/yanaifei|xinluan|LT|ruifenglb|suoyo|xfy|renrenmi|RongXingVR|xueren|wuduyun|laodi|Naifeimi|daodm|XMMT|v020c/.test(vipUrl)){\\n            str = mySet.oth;\\n            extra = getPlayJx('oth');\\n            parses = getLazyList('oth',str);\\n        }else{\\n            var host;\\n            try{\\n                host = vipUrl.match(/\\\\.(.*?)\\\\//)[1];\\n            }catch(e){\\n                if(!/^http/.test(playUrl)){\\n                    return \\\"断插调用失败！\\\\n非正常的vip正版地址且未识别原站解析播放地址\\\";\\n                }else{\\n                    return ParseS.道长仓库通免(playUrl,timeout)\\n                }\\n            }\\n            //host = decodeURIComponent(host);\\n            switch (mySet.qju) {\\n                case \\\"默认\\\":\\n                    switch (host) {\\n                        case \\\"qq.com\\\":\\n                            str = mySet.tx;\\n                            extra = getPlayJx('tx');\\n                            parses = getLazyList('tx');\\n                            break;\\n                        case \\\"iqiyi.com\\\":\\n                            str = mySet.qy;\\n                            extra = getPlayJx('qy');\\n                            parses = getLazyList('qy');\\n                            break;\\n                        case \\\"youku.com\\\":\\n                            str = mySet.yk;\\n                            extra = getPlayJx('yk');\\n                            parses = getLazyList('yk');\\n                            break;\\n                        case \\\"alizy\\\":\\n                            str = mySet.al;\\n                            extra = getPlayJx('al');\\n                            parses = getLazyList('alizy');\\n                            break;\\n                        case \\\"mgtv.com\\\":\\n                            str = mySet.mg;\\n                            extra = getPlayJx('mg');\\n                            parses = getLazyList('mg');\\n                            break;\\n                        case \\\"bilibili.com\\\":\\n                            str = mySet.bl;\\n                            extra = getPlayJx('bl');\\n                            parses = getLazyList('bl');\\n                            break;\\n                        case \\\"sohu.com\\\":\\n                            str = mySet.sh;\\n                            extra = getPlayJx('sh');\\n                            parses = getLazyList('sh');\\n                            break;\\n                        case \\\"tv.sohu.com\\\":\\n                            str = mySet.sh;\\n                            extra = getPlayJx('sh');\\n                            parses = getLazyList('sh');\\n                            break;\\n                        case \\\"ixigua.com\\\":\\n                            str = mySet.xg;\\n                            extra = getPlayJx('xg');\\n                            parses = getLazyList('xg');\\n                            break;\\n                        case \\\"pptv.com\\\":\\n                            str = mySet.pp;\\n                            extra = getPlayJx('pp');\\n                            parses = getLazyList('pp');\\n                            break;\\n                        case \\\"miguvideo.com\\\":\\n                            str = mySet.mi;\\n                            extra = getPlayJx('mi');\\n                            parses = getLazyList('mi');\\n                            break;\\n                        case \\\"le.com\\\":\\n                            str = mySet.le;\\n                            extra = getPlayJx('le');\\n                            parses = getLazyList('le');\\n                            break;\\n                        case \\\"1905.com\\\":\\n                            str = mySet.one;\\n                            extra = getPlayJx('one');\\n                            parses = getLazyList('one');\\n                            break;\\n                        case \\\"fun.tv\\\":\\n                            str = mySet.fun;\\n                            extra = getPlayJx('fun');\\n                            parses = getLazyList('fun');\\n                            break;\\n                        default:\\n                            str = mySet.oth;\\n                            extra = getPlayJx('oth');\\n                            parses = getLazyList('oth');\\n                            break;\\n                    }\\n                    break;\\n                default:\\n                    str = mySet.qju;\\n                    break;\\n            }\\n        }\\n    }else{\\n        log('魔断执行定向解析线路头:'+strTitle);\\n        str = strTitle;\\n    }\\n    let withBatch = !!(MyJiexi.isAuto && MyJiexi.autoMode === '速度优先');\\n    let withBatchOrder = !!(MyJiexi.isAuto && /顺序优先|嗅探优先/.test(MyJiexi.autoMode));\\n    let singleBack = MyJiexi.singleBack||false; //吊毛模式。单个结果直接返回，停止后面的\\n    let ignore_mx = MyJiexi.ignore_mx||false; //忽略免嗅,嗅探优先模式使用\\n    let use_mx = !(MyJiexi.autoMode === '嗅探优先' && MyJiexi.ignore_mx); // 只要不是免嗅优先模式下的忽略免嗅,都使用免嗅\\n    let dmPath = 'hiker://files/cache/diaomao.txt';//吊毛模式过滤文件路径\\n    let dmUrls;\\n    try {\\n        dmUrls = fetch(dmPath).trim().split('\\\\n').filter(it=>it&&!it.startsWith('//'));\\n    }catch (e) {\\n        dmUrls = [];\\n    }\\n    function hasDm(videoUrl,dmUrls){//播放地址是否为吊毛视频\\n        if(dmUrls.length<1){\\n            return false\\n        }\\n        for(let dmUrl of dmUrls){\\n            if((new RegExp(dmUrl)).test(videoUrl)){//播放地址包含吊毛标志的地址\\n                return true\\n            }\\n        }\\n        return false\\n    }\\n\\n    function unique2(array){//去重函数\\n        return Array.from(new Set(array));\\n    }\\n    function ArrSet(Arr, id) {//对象数组去重\\n        var obj = {};\\n        const arrays = Arr.reduce((setArr, item) => {\\n            obj[item[id]] ? '' : obj[item[id]] = true && setArr.push(item);\\n            return setArr;\\n        }, []);\\n        return arrays;\\n    }\\n    function sortByKey(array, key, order) {//对象数组按某个键值排序\\n        return array.sort(function(a, b) {\\n            var x = parseInt(a[key].match(/(\\\\d+)/)[1]);//修复大于10出问题\\n            var y = parseInt(b[key].match(/(\\\\d+)/)[1]);\\n            // log('x:'+x+\\\",y:\\\"+y);\\n            if (order) {\\n                return ((x < y) ? -1 : ((x > y) ? 1 : 0))\\n            } else {\\n                return ((x < y) ? ((x > y) ? 1 : 0) : -1)\\n            }\\n        })\\n    }\\n    if (typeof ParseS[str] == 'function') { // 主配置放免嗅才会触发(不太友好,躺平不想优化)\\n        if(/通免/.test(str)){\\n            return ParseS[str](vipUrl,timeout);\\n        }\\n        var url;\\n        var task = function(obj) {\\n            eval('var config_dp =' + fetch(getVar('oldConfig')));\\n            eval(fetch(config_dp.cj));\\n            return aytmParse(obj.vipUrl,obj.name,obj.timeout);\\n        };\\n        let t = (new Date()).getTime();\\n        if (Array.isArray(extra.playUrlList) && extra.playUrlList.length > 0) {\\n            extra.nameList = unique2(extra.nameList);\\n            extra.playUrlList = unique2(extra.playUrlList);\\n        }else{\\n            extra.nameList = [];\\n            extra.playUrlList = [];\\n        }\\n        function getMyUrls(urls){\\n            return urls.map((it) => {\\n                let turl = it.split(';')[0];\\n                if (it.includes(\\\"#isVideo=true#\\\") && !turl.includes(\\\"#isVideo=true#\\\")) {\\n                    turl += \\\"#isVideo=true#\\\";\\n                }\\n                return turl\\n            });\\n        }\\n\\n        function getMyHeaders(urls){\\n            return urls.map((it) => {\\n                if (!/;/.test(it) || it.split(';').length < 2) {\\n                    return {}\\n                } else {\\n                    let head = it.split(';')[1];\\n                    if (!/@/.test(head) || !/{|}/.test(head)) {\\n                        return {}\\n                    }\\n                    head = head.split(\\\"{\\\")[1].split(\\\"}\\\")[0];\\n                    //head = head.replace(/{|}/g,'');\\n                    head = head.split('&&');\\n                    let obj = {};\\n                    for (let i in head) {\\n                        let key = head[i].split('@')[0];\\n                        let value = head[i].split('@')[1].replace(/;/, '；；');\\n                        obj[key] = value;\\n                    }\\n                    return obj\\n                }\\n            });\\n        }\\n\\n        function getMyPlayUrlList(){\\n            if(Array.isArray(extra.playUrlList)){\\n                // return extra.playUrlList.map(it=>'video://'+it.replace('?url=','?id='+t+'&url=').replace('?v=','?id='+t+'&v='));\\n                return extra.playUrlList.map(it=>'video://'+it);\\n            }\\n            return []\\n        }\\n\\n\\n        if(!withBatchOrder||strTitle) {//不开多线路顺序优先或者指定了解析\\n            url = ParseS[str](vipUrl,timeout);\\n        }\\n        else{//开了多线路顺序优先执行免嗅多任务\\n            if(typeof ParseS[str] == 'function'&&!/通免/.test(ParseS[str].toString())){\\n                parses.unshift({name:str}); //把主配置的免嗅探加入到多任务列表\\n            }\\n            parses = ArrSet(parses,'name'); //去重\\n            if(use_mx) { // 如果使用免嗅,先多任务跑免嗅\\n                var count = parses.length; //设置任务数量\\n                log('魔断开启多任务解析,任务数量:' + count);\\n                log('解析列表:' + JSON.stringify(parses));\\n                var parseRet = []; //解析结果列表\\n                let tasks = parses.map((it, idex) => {\\n                    return {\\n                        func: task,\\n                        param: {\\n                            name: it.name,\\n                            // rule:it.rule,\\n                            vipUrl: vipUrl,\\n                            timeout: timeout\\n                        },\\n                        id: \\\"task\\\" + idex\\n                    }\\n                });\\n                showLoading(\\\"魔断并发解析中，剩余解析:\\\" + count);\\n\\n                function isDm(ret) {\\n                    if (!ret) {\\n                        return true\\n                    }\\n                    return hasDm(ret.split('#')[0].split(';')[0], dmUrls)\\n                }\\n\\n                be(tasks, {\\n                    func: function (obj, id, error, ret) {\\n                        log(\\\"监听到任务\\\" + id + '已结束,error:' + error + ',ret:' + ret);\\n                        ret = ret || '';\\n                        parseRet.push({\\n                            task: id,\\n                            ret: ret,\\n                            name: tasks.filter(it => it.id === id)[0].param.name\\n                        });\\n\\n                        if (singleBack) {//吊毛模式开始的话,判断ret有效性\\n                            log('任务' + id + '结果是吊毛?' + isDm(ret));\\n                            if (!isDm(ret) && ParseS.isVideo(ret.split('#')[0].split(';')[0])) {\\n                                hideLoading();\\n                                log('吊毛模式中断解析并返回视频' + ret);\\n                                return 'break'\\n                            }\\n                        }\\n                        count -= 1; //完成了任务，任务数量-1\\n                        //log(obj);\\n                        if (count > 0) {\\n                            showLoading(\\\"魔断并发解析中，剩余解析:\\\" + count)\\n                        } else {\\n                            hideLoading();\\n                        }\\n                    },\\n                    param: {//传到监听函数的obj参数里\\n                        hi: \\\"ccc\\\",\\n                    }\\n                });//执行多任务\\n                // let valuable = parseRet.filter(it=>/m3u8|mp4/.test(it.ret));\\n                log(\\\"多任务执行结果数:\\\" + parseRet.length);\\n                let valuable = [];\\n                parseRet.forEach((it)=>{\\n                    if(it.ret){\\n                        if(/names/.test(it.ret)&&/urls/.test(it.ret)){\\n                            log('尝试聚合解析解包:'+it.ret);\\n                            try {\\n                                let rets = JSON.parse(it.ret.replace(/#isVideo=true#/g,''));\\n                                rets.names.forEach((name,idex)=>{\\n                                    valuable.push({\\n                                        name:name,\\n                                        ret:rets.urls[idex],\\n                                        task:it.task,\\n                                    });\\n                                });\\n                            }catch (e) {\\n                                log('解包发生错误:'+e.message);\\n                            }\\n                        }else if(ParseS.isVideo(it.ret.split('#')[0].split(';')[0])){\\n                            valuable.push(it);\\n                        }else if(it.ret.startsWith('video://')){\\n                            valuable.push(it);\\n                        }\\n                    }\\n                });\\n                // let valuable = parseRet.filter(it => it.ret && ParseS.isVideo(it.ret.split('#')[0].split(';')[0]));\\n                valuable = valuable.filter(it => !isDm(it.ret));//过滤吊毛视频\\n                log('多任务顺序执行有效结果:' + JSON.stringify(valuable));\\n                if (valuable.length > 1) {//多线路\\n                    valuable = sortByKey(valuable, 'task', true);//升序排列\\n                    let urls = valuable.map(it => it.ret);//取出链接,缓存前的\\n                    if (getVar('dp.cacheVideo', 'true') === 'true' && parseInt(getAppVersion()) >= 2255) {//开始缓存\\n                        log(\\\"尊敬的魔断用户，视频缓存已启用，请尽情享受看剧时光\\\");\\n                        let videosCache = urls.map((it) => {\\n                            let headers = {};\\n                            if (it.split(\\\";\\\").length > 1) {\\n                                let head = it.split(';')[1];\\n                                if (/@/.test(head) && /{|}/.test(head)) {\\n                                    //head = head.replace(/{|}/g,'');\\n                                    head = head.split(\\\"{\\\")[1].split(\\\"}\\\")[0];\\n                                    head = head.split('&&');\\n                                    for (let i in head) {\\n                                        let key = head[i].split('@')[0];\\n                                        let value = head[i].split('@')[1].replace(/;/, '；；');\\n                                        headers[key] = value;\\n                                    }\\n                                }\\n                            }\\n                            return {\\n                                url: it.split(\\\";\\\")[0].split(\\\"#\\\")[0],\\n                                options: {\\n                                    headers: headers\\n                                }\\n                            }\\n                        });\\n                        var data = batchCacheM3u8(videosCache);\\n                        data = data.map((it, id) => {\\n                            let extra = \\\"\\\";\\n                            if (urls[id].split(\\\";\\\").length > 1) {\\n                                extra = \\\";\\\" + urls[id].split(\\\";\\\")[1];\\n                            } else if (urls[id].split(\\\"★\\\").length > 1) {\\n                                extra = \\\"★\\\" + urls[id].split(\\\"★\\\")[1];\\n                            }\\n                            if (it + \\\"\\\" !== \\\"null\\\") {\\n                                return it + extra\\n                            } else {\\n                                return urls[id]\\n                            }\\n                        });\\n                        urls = data\\n                    }\\n                    // log('排序完毕后结果:'+JSON.stringify(valuable));\\n                    let names = valuable.map(it => it.name);\\n                    let headers = getMyHeaders(urls);\\n                    urls = getMyUrls(urls);\\n                    if(MyJiexi.autoMode === '嗅探优先'){\\n                        urls = urls.concat(getMyPlayUrlList());\\n                        names = names.concat(extra.nameList);\\n                        // headers = headers.concat(extra.nameList.map((it)=>{return {}}));\\n                    }\\n                    return JSON.stringify({urls: urls, headers: headers, names: names});\\n\\n                } else if (valuable.length === 0) {\\n                    if (extra.nameList.length < 1) {\\n                        hideLoading();\\n                        return 'toast://芭比Q了,多任务免嗅解析全军覆没并且没有可用的json|x5解析了'\\n                    }\\n                    showLoading(\\\"魔断多任务免嗅失败,尝试json|x5\\\");\\n                    //排除第一个\\n                    let extra2 = {\\n                        nameList: extra.nameList,\\n                        playUrlList: extra.playUrlList.slice(1),\\n                    }\\n                    if(MyJiexi.autoMode === '嗅探优先'){\\n                        return JSON.stringify({\\n                            urls: getMyPlayUrlList(),\\n                            names: extra.nameList\\n                        });\\n                    }else{\\n                        return ParseS.defaultParseWeb ? ParseS.defaultParseWeb(extra.playUrlList[0], timeout, extra2) : extra.playUrlList[0];\\n                    }\\n                    // log(extra.playUrlList[0]);\\n                    // log(extra2);\\n\\n                } else {\\n                    // 免嗅后只有一个结果,嗅探优先自动拼x5和json, 顺序优先自动返回一个播放链接\\n                    if(MyJiexi.autoMode === '嗅探优先') {\\n                        let urls = valuable.map(it => it.ret);//取出链接,缓存前的\\n                        let names = valuable.map(it => it.name);\\n                        let headers = getMyHeaders(urls);\\n                        urls = getMyUrls(urls);\\n                        names = names.concat(extra.nameList);\\n                        urls = urls.concat(getMyPlayUrlList());\\n                        // headers = headers.concat(extra.nameList.map((it)=>{return {}}));\\n                        return JSON.stringify({\\n                            urls: urls,\\n                            names: names,\\n                            headers:headers\\n                        });\\n                    }else{\\n                        return valuable[0].ret\\n                    }\\n                }\\n            }else{ // 纯video://分支\\n                if (extra.nameList.length < 1) {\\n                    hideLoading();\\n                    return 'toast://芭比Q了,多任务免嗅解析全军覆没并且没有可用的json|x5解析了'\\n                }\\n                log(\\\"魔断多任务免嗅失败,尝试json|x5\\\");\\n                return JSON.stringify({\\n                    urls: getMyPlayUrlList(),\\n                    names: extra.nameList\\n                });\\n            }\\n        }\\n        if(/^hiker:|^toast:|^rule:|^x5Rule:|^webRule:|^select/.test(url)){\\n            return url;\\n        }\\n        if(!url&&!/^http/.test(vipUrl)){\\n            return 'toast://魔断解析失败>'+vipUrl\\n        }\\n        // log(vipUrl+'免嗅探结果:'+url);\\n        if (/^\\\\//.test(url)) {\\n            url = 'https:' + url\\n        }\\n        // 魔断免嗅截取\\n        // if (/=http/.test(url)) {\\n        //     url = /&url=/.test(url) ? url : 'http' + decodeURIComponent(url.split('=http')[1]);\\n        // }\\n        /*if(url.match(/mgtv.com/g)=='mgtv.com'){\\n            url = url + ';{Referer@https://www.mgtv.com}';\\n        } else */\\n        if (/\\\\.flv/.test(url)&&!/User-Agent/.test(url)) {\\n            url = url + ';{User-Agent@app&&Referer@' + vipUrl + '}';\\n        }\\n        if (url === '' || url === vipUrl) {\\n            return vipUrl;\\n        } else if(!/#isVideo=true#/.test(url)){\\n            return url + '#isVideo=true#';\\n        }else{\\n            return url\\n        }\\n    } else if (typeof ParseS[str] == 'string'&&ParseS[str].match(/http.*?=/)) {\\n        // log(\\\"断插开始通用执行免嗅 defaultParseWeb:\\\"+timeout);\\n        //log(\\\"默认x5\\\"+ParseS.defaultParseWeb);\\n        if(withBatch){ // 速度优先\\n            if(Array.isArray(extra.playUrlList)&&extra.playUrlList.length>0){\\n                extra.playUrlList = extra.playUrlList.filter(it=>it!==(ParseS[str]||str) + vipUrl);\\n                let nameList = extra.nameList;\\n                nameList.unshift(str);\\n                extra.nameList=unique2(nameList);\\n                extra.playUrlList = unique2(extra.playUrlList);\\n            }\\n        }else{\\n            extra = {}\\n        }\\n        return ParseS.defaultParseWeb?ParseS.defaultParseWeb((ParseS[str]||str) + vipUrl,timeout,extra):(ParseS[str]||str) + vipUrl;\\n    } else if(typeof(str)==='string'&&str.length>1&&(typeof ParseS[str]=='undefined'||!ParseS[str])&&!/^http/.test(str)){\\n        return 'toast://请先进行断插配置确保该解析存在!\\\\n检测到无效的解析配置:'+str;\\n    }else {\\n        return ParseS.defaultParse(str + vipUrl,timeout);\\n    }\\n}\\n\\nvar playParse = {\\n    player_xx: function(jurl, Label) {\\n        return $(jurl).lazyRule((k) => {\\n            var jsUrl = JSON.parse(fetch(getVar('oldConfig'))).cj;\\n            var Label = k;\\n            var fa = ['letv', 'pptv', 'qq', 'youku', 'qiyi', 'iqiyi', 'mgtv', 'bilibili', 'sohu', 'migu', 'm1905', 'vip'];\\n            var html = parseDom(request(input), Label);\\n            eval(html.replace(/player_.*?={/, 'pdata={'));\\n            eval(fetch(jsUrl));\\n            if (pdata.url.substr(0, 8).match(/JT..JT../)) {\\n                pdata.url = base64Decode(pdata.url);\\n            }\\n            if (pdata.url.substr(0, 8).match(/%..%../)) {\\n                pdata.url = unescape(pdata.url);\\n            }\\n            if (fa.includes(pdata.from)) {\\n                return aytmParse(pdata.url);\\n            } else {\\n                return pdata.url + '#isVideo=true#';\\n            }\\n        }, Label)\\n    }\\n};\\nfunction mzPopup() {\\n    /*\\n    if (getVar(\\\"ijk-tx\\\", \\\"\\\") == \\\"1\\\") {\\n        setItem(\\\"tixing\\\", \\\"1\\\")\\n        clearVar(\\\"ijk-tx\\\")\\n    }\\n    if (getItem(\\\"tixing\\\", \\\"\\\") == \\\"\\\") {\\n        confirm({\\n            title: '免责声明',\\n            content: '本程序不提供视频解析服务\\\\n所有内容均从用户分享中收集\\\\n仅供测试和学习交流\\\\n\\\\n确定即认可，不再提醒',\\n            confirm: $.toString(() => {\\n                putVar(\\\"ijk-tx\\\", \\\"1\\\");\\n                refreshPage(false);\\n                return \\\"toast://点击了确认\\\"\\n\\n            })\\n        })\\n    }\\n     */\\n}\\n/*\\nif (!getVar(\\\"tixing\\\")) {\\n    mzPopup();\\n    putVar('tixing','ok');\\n}\\n*/\\nfunction saveButton(content,name) {\\n    name = name||'';\\n    var data = content.split('★★★');\\n    if (data.length === 2) {\\n        var _dt = parsePaste(data[0]);\\n        content = _dt.substr(0, 6) !== 'error:' ? _dt : '';\\n    }\\n    data = content.split('★');\\n    var type = data[0];\\n    var arrList = [];\\n    var objCode = {};\\n    if (data.length > 2 && data[0] !== '直链') {\\n        var objKey = data[1];\\n        var objValue = data[2];\\n        if (type === 'MyParseS') {\\n            objValue = base64Decode(objValue);\\n        }\\n        if (objValue.split('function').length > 1) {\\n            eval('objValue=' + objValue);\\n        }\\n        arrList.splice(0, 0, objKey); //添加项目非删除\\n        objCode[objKey] = objValue;\\n\\n    } else if (type === '直链') {\\n        arrList = data;\\n        arrList.splice(0, 1);\\n    } else {\\n        arrList = null;\\n    }\\n    if (arrList != null) {\\n        var parseRoute = getVar('parseRoute');\\n        eval('var json =' + fetch(parseRoute));\\n        Array.prototype.remove = function(val) {\\n            let index = this.indexOf(val);\\n            if (index > -1) {\\n                this.splice(index, 1);\\n            }\\n        };\\n        if(name){//删除名称列表和代码\\n            json.title.remove(name);\\n            delete json.codes[name];\\n        }\\n        arrList = arrList.concat(json.title);\\n        json.title = Array.from(new Set(arrList));\\n        Object.assign(json.codes, objCode);\\n        if (type === '测试') {\\n            eval('var config =' + fetch(getVar('oldConfig')));\\n            eval(fetch(config.cj));\\n            if (typeof ParseS[data[1]] == \\\"function\\\") {\\n                return ParseS[data[1]](data[2]);\\n            } else {\\n                return ParseS.defaultParseWeb(ParseS[data[1]] + data[2]);\\n            }\\n        } else {\\n            writeFile(parseRoute, $.stringify(json));\\n            return \\\"toast://已保存内容\\\";\\n        }\\n    } else {\\n        return \\\"toast://无法识别这个内容呢\\\"\\n    }\\n}\\n// 以下代码千万不要放出来否则报错\\nif (getItem('updateDate') != updateDate) {\\n// if (true) {\\n    // 把function变成string\\n    let functionCode = saveButton + ';'+mzPopup;\\n    // writeFile('hiker://files/cache/plscParse.html', fetch(_mySet.ckLink + 'plscParse.html'));\\n    setItem('myFunction', functionCode);\\n    setItem('updateDate', updateDate);\\n}\\nvar bjItem = {\\n    hfPlugin: function(parseRoute) {\\n        return $('#noLoading#').lazyRule((k) => {\\n            if (fileExist(k)) {\\n                var cjcache = getVar('cjCache');\\n                eval('var json =' + fetch(k));\\n                json.settings.cj = cjcache;\\n                writeFile(k, $.stringify(json));\\n                var oldRoute = getVar('oldConfig');\\n                var oldConfig = json.settings;\\n                oldConfig.cj = cjcache;\\n                writeFile(oldRoute, $.stringify(oldConfig));\\n                refreshPage(false);\\n                return 'toast://恢复成功';\\n            } else {\\n                return 'toast://需要先拉取列表'\\n            }\\n        }, parseRoute)\\n    },\\n    pullCode: function(k) {\\n        return $('#noLoading#').lazyRule((k) => {\\n            var pullMode = k[0];\\n            var parseRoute = k[1];\\n            var parseFile = fetch(parseRoute);\\n            if (!parseFile) {\\n                var settings = fetch(getVar('oldConfig'));\\n                settings = !settings ? {} : JSON.parse(settings);\\n                var json = {};\\n                json.settings = settings;\\n                json.title = [];\\n                json.codes = {};\\n            } else {\\n                eval('var json =' + parseFile);\\n            }\\n            var parseTitle = [];\\n            var parseCode={};\\n            var cjLink = getVar('pluginLink');\\n            try {\\n                if(/@base64:\\\\/\\\\//.test(cjLink)){\\n                    eval(base64Decode(cjLink.split('@base64://')[1]));\\n                }else if(/插件名/.test(cjLink)){\\n                    let realLink = cjLink.split('插件名')[0].replace(/[\\\\s]/g,'');\\n                    log('解析云剪切板:'+realLink);\\n                    let yPaste = parsePaste(realLink);\\n                    if(/@base64:\\\\/\\\\//.test(yPaste)){\\n                        try {\\n                            eval(base64Decode(yPaste.split('@base64://')[1]));\\n                            if(typeof ParseS==='undefined'){\\n                                return 'toast://拉取个鸡毛插件,里面连ParseS对象都没有!'\\n                            }\\n                        }catch (e) {\\n                            return 'toast://鸡毛插件执行报错:\\\\n'+e.message;\\n                        }\\n                    }else{\\n                        return 'toast://未能识别云剪切板中的内容:\\\\n'+yPaste.substring(0,100);\\n                    }\\n                } else if (cjLink === 'Q神') {\\n                    let jiexi = fetch('hiker://files/jiexi/jiexi.txt').split('\\\\n');\\n                    for (i in jiexi) {\\n                        let title=jiexi[i].split('&&')[0];\\n                        let code=jiexi[i].split('&&')[1];\\n                        parseTitle.push(title);\\n                        parseCode[title]=code;\\n                    }\\n                }\\n                // }else if(/^#[a-zA-Z0-9]{2,10}$/.test(cjLink)){//福利口令2到10位\\n                else if(/^#[\\\\S]{2,10}$/.test(cjLink)){//福利口令2到10位任意非空字符串\\n                    const {taskCall, taskRun,taskReq} = $.require(\\\"hiker://page/taskCall?rule=道长仓库Pro\\\");\\n                    // log('开始执行任务仓库获取断念插件福利口令');\\n                    let result = taskCall(17,'DnFuli',[cjLink]);\\n                    if (result.status === 0) {\\n                        let ret = JSON.parse(result.result);\\n                        // log(ret);\\n                        if(ret.opt==='error'){\\n                            return 'toast://'+ret.msg;\\n                        }else if(ret.opt==='url'){\\n                            let html = fetch(ret.ret);\\n                            let arr = html.includes('http')? html:base64Decode(html);\\n                            let jiexi = arr.match(/[\\\\S]*?,.*?[\\\\s]/g);\\n                            for (let i in jiexi) {\\n                                let title=jiexi[i].split(',')[0];\\n                                let code=jiexi[i].split(',')[1].split(\\\"\\\\n\\\")[0];\\n                                if(!/^http|function/.test(code)&&code.length>20){//base64编码的函数\\n                                    code = base64Decode(code);\\n                                }\\n                                parseTitle.push(title);\\n                                parseCode[title]=/function/.test(code)?eval(code):code;\\n                            }\\n                        }else if(ret.opt==='jx'){\\n                            if(/[\\\\S]*?,http[\\\\S]/.test(ret.ret)){\\n                                let title = ret.ret.split(',')[0];\\n                                let code = ret.ret.split(',')[1].split('\\\\n')[0];\\n                                parseTitle.push(title);\\n                                parseCode[title]=code;\\n                            }else if(/^http/.test(ret.ret)){\\n                                let title = cjLink.split('#')[1];\\n                                let code = ret.ret.split('\\\\n')[0];\\n                                parseTitle.push(title);\\n                                parseCode[title]=code;\\n                            }else{\\n                                return 'toast://未知的福利:\\\\n'+ret.ret;\\n                            }\\n                        }else if(ret.opt==='vipJx'){\\n                            let title = cjLink.split('#')[1];\\n                            let code = ret.ret;\\n                            // log(code);\\n                            parseTitle.push(title);\\n                            parseCode[title]=/function/.test(code)?eval(code):code;\\n                        }\\n                    }else{\\n                        return 'toast://仓库非最新版或者福利社功能开发中'\\n                    }\\n                }else if(cjLink==='断插'){\\n                    eval(fetch(\\\"hiker://files/cache/Parse_Dn.js\\\"));\\n                    parseTitle=Object.keys(ParseS);\\n                }else if(/^hiker:\\\\/\\\\/|^file:\\\\/\\\\/|^http|^\\\\/storage\\\\/|^\\\\/sdcard\\\\//.test(cjLink)){\\n                    if(/^\\\\/storage\\\\/|^\\\\/sdcard\\\\//.test(cjLink)){\\n                        cjLink = 'file://'+cjLink;\\n                    }\\n                    eval(fetch(cjLink));\\n                    parseTitle=Object.keys(ParseS);\\n                }else{\\n                    return 'toast://拉取口令有误'\\n                }\\n            } catch (e) {\\n                log(e.message);\\n            }\\n            var jxJudge = typeof ParseS == 'object';\\n            var lbJudge = typeof(parseTitle) == 'object';\\n            if (jxJudge || lbJudge) {\\n                // if (pullMode === '列表') {\\n                //     if (!lbJudge) {\\n                //         parseTitle = Object.keys(ParseS);\\n                //     }\\n                //     var newParseTitle = json.title.concat(parseTitle);\\n                //     json.title = Array.from(new Set(newParseTitle));\\n                // }\\n                // 不管拉取代码还是列表都要把列表拉了\\n                if (!lbJudge) {\\n                    parseTitle = Object.keys(ParseS);\\n                    log(parseTitle);\\n                }\\n                var scObject = [\\\"CityIP\\\", \\\"pcUA\\\", \\\"cacheM3u8\\\",\\\"isVideo\\\",\\\"timeOut\\\",\\\"源码匹配\\\", \\\"defaultParse\\\",\\\"defaultParseWeb\\\",\\\"maoss\\\", \\\"LLQ\\\",\\\"parseLc\\\"];\\n                parseTitle = parseTitle?parseTitle.filter(it=>!scObject.includes(it)):[];\\n                var newParseTitle = json.title.concat(parseTitle);\\n                json.title = Array.from(new Set(newParseTitle));\\n\\n                if (pullMode === '代码') {\\n                    if (typeof originalParseS == 'object') {\\n                        for (let i in scObject) {\\n                            delete originalParseS[scObject[i]];\\n                        }\\n                        // originalParseS =originalParseS.filter(it=>!scObject.includes(Object.getOwnPropertyNames(it)[0]));\\n                        Object.assign(json.codes, originalParseS);\\n                    } else {\\n                        if(typeof(ParseS)==\\\"undefined\\\"){\\n                            Object.assign(json.codes, parseCode);\\n                            //return \\\"toast://没有代码，不可拉取\\\"\\n                        }else{\\n                            Object.assign(json.codes, ParseS);\\n                        }\\n                    }\\n                }\\n                //var newFile = tools.toJSON(json);//自定义stringify函数，带有转义字符\\n                var newFile = $.stringify(json); //JSON.parse会报错\\n                writeFile(parseRoute, newFile);\\n                refreshPage(false);\\n                return 'toast://拉取' + pullMode + '成功';\\n            } else {\\n                return 'toast://未获取到对象';\\n            }\\n        }, [k, _mySet.parseRoute])\\n    },\\n    pullScript: function(cj, x5) {\\n        return $('#noLoading#').lazyRule((k) => {\\n            var cjFrom = 'hiker://page/Parse_Dn.js?rule=MyFieldᴰⁿ';\\n            var x5From = 'hiker://page/Parse_Dn.html?rule=MyFieldᴰⁿ';\\n            try {\\n                var cjFile = JSON.parse(fetch(cjFrom)).rule;\\n                var x5File = JSON.parse(fetch(x5From)).rule;\\n                writeFile(k[0], cjFile);\\n                writeFile(k[1], x5File);\\n                clearVar('jxOldV');\\n                clearVar('jxNewV');\\n                refreshPage(false);\\n                return 'toast://拉取成功';\\n            } catch (e) {\\n                return 'toast://未成功获取内容';\\n            }\\n        }, [cj, x5])\\n    },\\n    xlSelect: function(bianji, lbLength) {\\n        return \\\"select://\\\" + JSON.stringify({\\n            options: ['‘‘’’<span style=\\\"color:red\\\" title=\\\"删除||' + bianji + '\\\">删 除', '‘‘’’<span style=\\\"color:#F57474\\\" title=\\\"隐藏||' + bianji + '\\\">隐 藏', '‘‘’’<span style=\\\"color:#FF8000\\\" title=\\\"修改||' + bianji + '\\\">修 改', '‘‘’’<span style=\\\"color:#098AC1\\\" title=\\\"置顶||' + bianji + '0' + '\\\">置 顶', '‘‘’’<span style=\\\"color:#098AC1\\\" title=\\\"移动||' + bianji + '\\\">移 动', '‘‘’’<span style=\\\"color:#098AC1\\\" title=\\\"置底||' + bianji + lbLength + '\\\">置 底', '‘‘’’<span style=\\\"color:#04B431\\\" title=\\\"分享||' + bianji + '\\\">地板分享', '‘‘’’<span style=\\\"color:#04B431\\\" title=\\\"云分享||' + bianji + '\\\">云板分享'],\\n            col: '2',\\n            js: $.toString(() => {\\n                var parseRoute = getVar('parseRoute');\\n                eval('var json =' + fetch(parseRoute));\\n                var newInput = parseDomForHtml(input, 'span&&title').split('||');\\n                // 修改,迪迪,0   操作类型,名称,索引\\n                var type = newInput[0];\\n                var name = newInput[1];\\n                var num = newInput[2];\\n                var num2 = newInput[3];\\n                switch (type) {\\n                    case \\\"删除\\\":\\n                        let k = [name, num];\\n                        // 总感觉筛选或者搜索后，由于num的位置不对可能会删除错,事实如此,已修?\\n                        return $(\\\"即将删除: \\\" + name).confirm((k) => {\\n                            var name = k[0];\\n                            var num = k[1];\\n                            var parseRoute = getVar('parseRoute');\\n                            eval('var json =' + fetch(parseRoute));\\n                            if (json.codes.hasOwnProperty(name)) {\\n                                delete json.codes[name];\\n                            }\\n                            num = json.title.indexOf(name); //这样才会得到正确的索引\\n                            json.title.splice(num, 1);\\n                            writeFile(parseRoute, $.stringify(json));\\n                            refreshPage(false);\\n                            return \\\"toast://已将〖\\\" + name + \\\"〗删除\\\";\\n                        }, k);\\n                    case \\\"隐藏\\\":\\n                        return $(\\\"hiker://empty#noLoading#\\\").lazyRule((k) => {\\n                            var name = k[0];\\n                            var num = k[1];\\n                            var parseRoute = getVar('parseRoute');\\n                            eval('var json =' + fetch(parseRoute));\\n                            if (json.codes.hasOwnProperty(name)) {\\n                                num = json.title.indexOf(name); //这样才会得到正确的索引\\n                                json.title.splice(num, 1);\\n                                writeFile(parseRoute, $.stringify(json));\\n                                refreshPage(false);\\n                                return \\\"toast://已将〖\\\" + name + \\\"〗隐藏\\\";\\n                            } else {\\n                                return \\\"toast://可能是个网址, 您可选择删除\\\";\\n                            }\\n                        }, [name, num]);\\n                    case \\\"修改\\\":\\n                        //if (json.codes[name]) {\\n                        var nCode = name;\\n                        var titles = json.title;\\n                        var nName = \\\"这是名称\\\";\\n                        if (json.codes[name]) {\\n                            nCode = json.codes[name].toString();\\n                            nName = name;\\n                        }\\n                        return $(\\\"hiker://empty#noRecordHistory#\\\").rule((k,titles) => {\\n                            var d = [];\\n                            eval(getItem('myFunction'));\\n                            var name = k[0];\\n                            var code = k[1];\\n                            d.push({\\n                                title: '保 存',\\n                                url: saveButton + \\\"saveButton(getVar('input_edit'),name);back();\\\",\\n                                col_type: \\\"input\\\",\\n                                desc: \\\"建议按默认的代码格式修改哦\\\",\\n                                extra: {\\n                                    onChange: \\\"putVar('input_edit', input)\\\",\\n                                    type: \\\"textarea\\\",\\n                                    height: \\\"-1\\\",\\n                                    highlight: true,\\n                                    titleVisible: false,\\n                                    defaultValue: '修改★' + name + '★' + code,\\n                                }\\n                            });\\n                            d.push({\\n                                title: '‘‘’’<small><span style=\\\"color:#6EB897\\\">格式为：操作类型★标题★function(){自定义内容}<br>请勿填入其他格式',\\n                                url: $('#noLoading#').lazyRule((saveButton,name,titles) => {\\n                                    let tmpAr = getVar('input_edit').split('★');\\n                                    if(tmpAr.length<2){\\n                                        return 'toast://修改格式有误，访问被拒绝'\\n                                    }\\n                                    let newName = tmpAr[1];\\n                                    if(newName!==name&&titles.includes(newName)){\\n                                        return $('检测到同名接口:'+newName+',是否覆盖?').confirm((saveButton,name)=>{\\n                                            let code = saveButton(getVar('input_edit'),name);\\n                                            back();\\n                                            return 'toast://已保存修改\\\\n请自行检测覆盖后的内容';\\n                                        },saveButton,name);\\n                                    }else{\\n                                        let code = saveButton(getVar('input_edit'),name);\\n                                        back();\\n                                        return 'toast://已保存修改';\\n                                    }\\n                                    // if(typeof(code)==='string'&&code.length>2){\\n                                    //     return code\\n                                    // }else{\\n                                    //     return 'toast://已保存修改';\\n                                    // }\\n                                }, saveButton,name,titles),\\n                                desc: '‘‘’’<big><big><span style=\\\"color:#298A08\\\">保 存',\\n                                col_type: 'text_center_1'\\n                            });\\n                            setResult(d);\\n                        }, [nName, nCode],titles) //[name, json.codes[name].toString()])\\n                    /*} else {\\n                        return \\\"toast://只有网址或者标题, 不支持修改\\\"\\n                    }*/\\n                    case \\\"置顶\\\":\\n                    case \\\"置底\\\":\\n                        eval('var json =' + fetch(parseRoute));\\n                        num = json.title.indexOf(name); //这样才会得到正确的索引\\n                        if(num>-1){\\n                            var item = json.title.splice(num, 1);\\n                            json.title.splice(num2, 0, item[0]);\\n                            writeFile(parseRoute, $.stringify(json));\\n                            refreshPage(false);\\n                        }else{\\n                            return 'toast://没找到:'+name;\\n                        }\\n                        break;\\n                    case \\\"移动\\\":\\n                        return $('hiker://empty#noLoading#').lazyRule((k) => {\\n                            putVar('bianji', '移动#' + k);\\n                            refreshPage(false);\\n                            return input;\\n                        }, num);\\n                    case \\\"分享\\\":\\n                    case \\\"云分享\\\":\\n                        if (json.codes[name]) {\\n                            var parseText = typeof json.codes[name] == 'function' ? $.stringify(json.codes[name]) : json.codes[name];\\n                            parseText = 'MyParseS★' + name + '★' + base64Encode(parseText);\\n                        } else {\\n                            var parseText = '直链★' + json.title[num];\\n                        }\\n                        if (type == '云分享' && parseText.substr(0, 8) == 'MyParseS') {\\n                            parseText = sharePaste(parseText);\\n                            return parseText.substr(0, 6) != 'error:' ? 'copy://' + parseText + '\\\\n★★★\\\\n' + 'MyParseS：' + name : 'toast://分享失败!!云剪贴板可能挂了';\\n                        } else {\\n                            return 'copy://' + parseText;\\n                        }\\n                    default:\\n                        return 'toast://暂不支持';\\n                } //switch的\\n            }) //String的\\n        }) //stringify的\\n    },\\n    xjParse: function() {\\n        return $(\\\"hiker://empty#noHistory#\\\").rule(() => {\\n            var d = [];\\n            eval(getItem('myFunction'));\\n            d.push({\\n                title: '保 存',\\n                url: saveButton + \\\"saveButton(input);back();clearVar('input_add')\\\",\\n                col_type: \\\"input\\\",\\n                desc: \\\"输入正确格式内容\\\",\\n                extra: {\\n                    onChange: 'putVar(\\\"input_add\\\", input)',\\n                    type: \\\"textarea\\\",\\n                    height: \\\"-1\\\",\\n                    highlight: true,\\n                    titleVisible: false,\\n                    defaultValue: getVar('input_add'),\\n                }\\n            });\\n            d.push({\\n                title: '‘‘’’<small><span style=\\\"color:#6EB897\\\">按描述诉格式输入, 请勿填入其他格式<br>本地口令: 操作类型★名称★代码<br>云口令: 链接★★★名称; 纯网址: 直链★url1★url2',\\n                desc: '‘‘’’<big><big><span style=\\\"color:#298A08\\\">保 存',\\n                url: $('noLoading').lazyRule((saveButton) => {\\n                    return saveButton(getVar('input_add'));\\n                }, saveButton),\\n                col_type: 'text_center_1'\\n            });\\n            setResult(d);\\n        })\\n    },\\n    ydParse: function(BJmode, i) {\\n        return $('#noLoading#').lazyRule((k) => {\\n            var A = k[0].split('#')[1];\\n            var B = k[1];\\n            var parseRoute = getVar('parseRoute');\\n            eval('var json =' + fetch(parseRoute));\\n            var item = json.title.splice(A, 1); // 1: 标记开始位置，2: 删除到哪个位置\\n            json.title.splice(B, 0, item[0]); // 1: 同上，2: 0表示不删除，3: 添加对象\\n            writeFile(parseRoute, $.stringify(json));\\n            clearVar('bianji');\\n            refreshPage(false);\\n            return 'hiker://empty';\\n        }, [BJmode, i])\\n    },\\n    plscParse: function() {\\n        return $('hiker://empty#noRecordHistory#').rule(() => {\\n            var d = [];\\n            d.push({\\n                title: '批量修改/删除解析',\\n                desc: 'auto&&float',\\n                // url: 'file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/cache/plscParse.html',\\n                url: _mySet.batchRoute,\\n                col_type: 'x5_webview_single'\\n            })\\n            setResult(d);\\n        })\\n    }\\n};\\n\\nfunction setParse() {\\n    $.require(\\\"hiker://page/Route?rule=MyFieldᴰⁿ\\\").setParse();\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"调用路由\",\"path\":\"Route\",\"rule\":\"js:\\nconst d = [];\\nconst data = {};\\n\\ndata.oldConfig = \\\"hiker://files/cache/MyParseSet.json\\\";\\ndata.cjRoute = \\\"hiker://files/cache/Parse_Dn.js\\\";\\ndata.x5Route =\\ngetPath('hiker://files/cache/Parse_Dn.html');\\n\\ndata.jxLazy = \\\"eval('var config =' + fetch('\\\" + data.oldConfig + \\\"'));eval(fetch(config.cj));aytmParse(input)\\\";\\n\\ndata.szParse = \\\"hiker://page/Route?rule=MyFieldᴰⁿ&type=设置#noHistory##noRecordHistory#\\\";\\n\\ndata.setParse = function() {\\n    d.push({\\n        desc: '795',\\n        url: this.x5Route,\\n        col_type: 'x5_webview_single'\\n    });\\n    var oldV = getVar('jxOldV');\\n    var newV = getVar('jxNewV');\\n    var versionTips = parseFloat(newV) > parseFloat(oldV) ? '‘‘有新版本: v' + newV : '‘‘';\\n    var pics = [\\n        'https://cdn.seovx.com/img/seovx-20-10%20(92).jpg',\\n        'https://cdn.seovx.com/img/mom2018%20(207).jpg',\\n        'https://tva4.sinaimg.cn/large/9bd9b167gy1fwrh5xoltdj21hc0u0tax.jpg',\\n        'https://tva1.sinaimg.cn/large/005BYqpggy1fwreyu4nl6j31hc0u0ahr.jpg',\\n        'https://s3.bmp.ovh/imgs/2021/10/d7e60b990742093d.jpeg',\\n        'https://s3.bmp.ovh/imgs/2021/10/91ad6d6538bf8689.jpg',\\n        'https://tva1.sinaimg.cn/large/005BYqpggy1fwresl5pmlj31hc0xcwka.jpg',\\n        'https://tva3.sinaimg.cn/large/005BYqpggy1fwrgjdk74oj31hc0u0dqn.jpg',\\n        'https://cdn.seovx.com/img/mom2018%20(320).jpg',\\n        'https://cdn.seovx.com/img/mom2018%20(803).jpg'\\n    ];\\n    d.push({\\n        img: pics[Math.floor(Math.random() * 10)],\\n        title: versionTips + '’’<small><span style=\\\"color:#6EB897\\\"><br>　　点击上方头像进入编辑<br>点此进入论坛帖子列表',\\n        desc: '当前版本: v' + oldV,\\n        url: 'https://haikuoshijie.cn/user/1958',\\n        col_type: 'movie_1'\\n    });\\n  setResult(d);\\n}\\n\\nswitch (getParam(\\\"type\\\")) {\\n    case \\\"设置\\\":\\n        data.setParse();\\n        //setResult(d);\\n        break;\\n    case \\\"编辑\\\":\\n        $.require(\\\"hiker://page/jxItem?rule=MyFieldᴰⁿ\\\").jxList();\\n        setResult(d);\\n        break;\\n\\tcase \\\"主题\\\":\\n\\t     $.require(\\\"hiker://page/theme?rule=MyFieldᴰⁿ\\\").themeInit();\\n        break;\\n\\tcase \\\"解析\\\":\\n\\t     $.require(\\\"hiker://page/jxManage?rule=MyFieldᴰⁿ\\\").jxManage();\\n        break;\\n    default:\\n        $.exports = data;\\n        break;\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"解析项主界面\",\"path\":\"jxItem\",\"rule\":\"eval(JSON.parse(fetch('hiker://page/Parse_Dn.js?rule=MyFieldᴰⁿ')).rule);\\nvar isLogin = function (){return true}\\nfunction bbsYZ() {\\n    var _0x47a9b4 = {\\n        'JxSMn': function(_0x249952, _0x4abc15) {\\n            return _0x249952 + _0x4abc15;\\n        },\\n        'LGwmC': '移动#',\\n        'GvDVY': function(_0x461f2d, _0x540571) {\\n            return _0x461f2d + _0x540571;\\n        },\\n        'WfeHD': '‘‘’’<small><span style=\\\"color:#FE9A2E\\\">',\\n        'EqIls': '移动: ',\\n        'Effbn': 'text_2',\\n        'RxkxA': function(_0x32a7d0, _0x1a932c) {\\n            return _0x32a7d0(_0x1a932c);\\n        },\\n        'VBGJH': 'jdRoute',\\n        'BZgRt': function(_0x26984e, _0x5cc926) {\\n            return _0x26984e === _0x5cc926;\\n        },\\n        'rgGCC': 'wDVEb',\\n        'MczOW': function(_0x2880bf, _0x2d9306, _0x97787a) {\\n            return _0x2880bf(_0x2d9306, _0x97787a);\\n        },\\n        'FUjdm': 'bbsYZ',\\n        'lqFhb': function(_0x43bbe6) {\\n            return _0x43bbe6();\\n        },\\n        'FURpy': function(_0x2265c2, _0xa1d568, _0x29de01) {\\n            return _0x2265c2(_0xa1d568, _0x29de01);\\n        },\\n        'XIObB': 'var xdRoute=\\\\\\\"\\\\\\\";'\\n    };\\n    if (!_0x47a9b4['RxkxA'](getVar, _0x47a9b4['VBGJH'])) {\\n        if (_0x47a9b4['BZgRt'](_0x47a9b4['rgGCC'], 'JVkAZ')) {\\n            d['push']({\\n                'title': _0x47a9b4['JxSMn'](_0x47a9b4['LGwmC'], i) == BJmode ? _0x47a9b4['JxSMn'](_0x47a9b4['GvDVY'](_0x47a9b4['WfeHD'], _0x47a9b4['EqIls']), xsList) : '‘‘’’<span style=\\\"color:#298A08\\\">' + xsList,\\n                'url': bjItem['ydParse'](BJmode, i),\\n                'col_type': _0x47a9b4['Effbn']\\n            });\\n        } else {\\n            _0x47a9b4['MczOW'](putVar, _0x47a9b4['FUjdm'], _0x47a9b4['lqFhb'](isLogin||function (){return true}));\\n            _0x47a9b4['FURpy'](putVar, 'jdRoute', _0x47a9b4['XIObB']);\\n        }\\n    }\\n    return getVar(_0x47a9b4['FUjdm']);\\n}\\nvar jxItem = {\\n    'jxList': function() {\\n        var _0x4c0427 = {\\n            'UVWoF': function(_0x26bb07, _0x221b4d) {\\n                return _0x26bb07 + _0x221b4d;\\n            },\\n            'color':function(text, color) {\\n                text += \\\"\\\";\\n                if (text.indexOf(\\\"““””\\\") === 0) {\\n                    text.replace(\\\"““””\\\", \\\"\\\");\\n                }\\n                return \\\"““””<font color='\\\" + color + \\\"'>\\\" + text + \\\"</font>\\\";\\n            },\\n            'kzWDK': function(_0x4854a9, _0x3e98c5) {\\n                return _0x4854a9 + _0x3e98c5;\\n            },\\n            'XXyQr': '移动#',\\n            'gtUnj': function(_0x59aaf7, _0x22c66b) {\\n                return _0x59aaf7 + _0x22c66b;\\n            },\\n            'UtfWf': '‘‘’’<small><span style=\\\\\\\"color:#FE9A2E\\\\\\\">',\\n            'QOvJV': '移动: ',\\n            'ABEwB': '‘‘’’<span style=\\\\\\\"color:#298A08\\\\\\\">',\\n            'ozzWG': 'text_2',\\n            'nWfVR': function(_0x480f3a, _0x4c84fc) {\\n                return _0x480f3a + _0x4c84fc;\\n            },\\n            'JCcNY': 'parseRoute',\\n            'rgDIp': 'bianji',\\n            'hoIdJ': '‘‘’’<big><span style=\\\\\\\"color:#6EB897\\\\\\\">新 建 解 析',\\n            'FrGOH': function(_0x12d6db, _0x2a068d) {\\n                return _0x12d6db < _0x2a068d;\\n            },\\n            'oCCSj': function(_0x19b178, _0x4ef8f6) {\\n                return _0x19b178 === _0x4ef8f6;\\n            },\\n            'HZhlc': function(_0x5cae03, _0x26e242) {\\n                return _0x5cae03 == _0x26e242;\\n            },\\n            'cgIeA': function(_0x25e368, _0x8bc8e9) {\\n                return _0x25e368 + _0x8bc8e9;\\n            },\\n            'xdrFv': function(_0x4ab5d8, _0x21242f) {\\n                return _0x4ab5d8 + _0x21242f;\\n            },\\n            'ywjux': function(_0x5e3051, _0x4e0230) {\\n                return _0x5e3051(_0x4e0230);\\n            }\\n        };\\n        var _0x1d8bb1 = getVar(_0x4c0427['JCcNY']);\\n        var _0x3b89ab = parseFile['title'];\\n        var _0x49da96 = getVar(_0x4c0427['rgDIp']);\\n        d.push({\\n            title: _0x4c0427['hoIdJ'],\\n            desc:'注意:位置操作功能只在分类筛选为全部时生效\\\\n下方搜索按名称或地址,重置请留空或点解析数量按钮',\\n            url: bjItem['xjParse'](),\\n            col_type: 'text_center_1',\\n            extra: {\\n                lineVisible:false\\n            }\\n        });\\n        d.push({\\n            title:'搜索',\\n            desc:'mengx',\\n            col_type:'input',\\n            extra: {\\n                onChange: \\\"putVar('dp.searchJx',input)\\\",\\n                titleVisible: true,\\n                textSize: 11,\\n                defaultValue:getVar('dp.searchJx',''),\\n            },\\n            url:$.toString(()=>{\\n                refreshPage(true);\\n                return 'hiker://empty'\\n            })\\n        });\\n        let filters = ['全部','链接','json','免嗅'];\\n        for(let o in filters){\\n            d.push({\\n                title:getVar('dn.jx_filter','全部')===filters[o]?'““””<span style=\\\"color:#298A08\\\">'+filters[o]:filters[o],\\n                col_type:'scroll_button',\\n                url:$('#noLoading#').lazyRule((it)=>{\\n                    putVar('dn.jx_filter',it);\\n                    refreshPage(true);\\n                    return 'hiker://empty'\\n                },filters[o]),\\n            });\\n        }\\n        var _0x2ecbe5 = _0x3b89ab['length'];\\n        var json={title:[],codes:{}};\\n        let setFile = request('hiker://files/rules/DuanNian/MyParse.json');\\n        try {\\n            eval('json='+setFile);\\n        }catch (e) {\\n            log('Json解析发生了错误:'+e.message);\\n        }\\n        if(getVar('dn.jx_filter','全部')==='链接'){\\n            _0x3b89ab = _0x3b89ab.filter(it=>(!/©$/.test(it))&&typeof(json.codes[_0x4c0427['nWfVR'](it, '')['replace'](/http.*\\\\/\\\\//g, '')])==='string');\\n        }else if(getVar('dn.jx_filter','全部')==='免嗅'){\\n            _0x3b89ab = _0x3b89ab.filter(it=>typeof(json.codes[_0x4c0427['nWfVR'](it, '')['replace'](/http.*\\\\/\\\\//g, '')])==='function');\\n        }else if(getVar('dn.jx_filter','全部')==='json'){\\n            _0x3b89ab = _0x3b89ab.filter(it=>(/©$/.test(it))&&typeof(json.codes[_0x4c0427['nWfVR'](it, '')['replace'](/http.*\\\\/\\\\//g, '')])==='string');\\n        }\\n        if(getVar('dp.searchJx','')){\\n            _0x3b89ab = _0x3b89ab.filter(it=>(json.codes[_0x4c0427['nWfVR'](it, '')]+'').includes(getVar('dp.searchJx'))||it.includes(getVar('dp.searchJx','')));\\n        }\\n        d.push({\\n            title:\\\"解析数:\\\"+_0x4c0427.color(_0x3b89ab.length,'#ff7000'),\\n            col_type:\\\"scroll_button\\\",\\n            url:$('#noLoading#').lazyRule(()=>{\\n                clearVar('dp.searchJx');\\n                refreshPage(true);\\n                return 'toast://已重置'\\n            })\\n        });\\n        // 下面是解析列表排列\\n        // for (var _0xe2c3d8 = 0x0; _0x4c0427['FrGOH'](_0xe2c3d8, _0x2ecbe5); _0xe2c3d8++) {\\n        for (let _0xe2c3d8 in _0x3b89ab) {\\n            var _0x33788c = _0x3b89ab[_0xe2c3d8];\\n            var _0x37871e = _0x4c0427['nWfVR'](_0x33788c, '')['replace'](/http.*\\\\/\\\\//g, '');\\n            if (/移动/ ['test'](_0x49da96)) {\\n                if (_0x4c0427['oCCSj']('uKLxF', 'uKLxF')) {\\n                    d['push']({\\n                        'title': _0x4c0427['HZhlc'](_0x4c0427['XXyQr'] + _0xe2c3d8, _0x49da96) ? _0x4c0427['nWfVR'](_0x4c0427['cgIeA'](_0x4c0427['UtfWf'], _0x4c0427['QOvJV']), _0x37871e) : _0x4c0427['cgIeA'](_0x4c0427['ABEwB'], _0x37871e),\\n                        'url': bjItem['ydParse'](_0x49da96, _0xe2c3d8),\\n                        'col_type': 'text_2'\\n                    });\\n                } else {\\n                    var _0x2bc618 = _0x3b89ab[_0xe2c3d8];\\n                    var _0x5cf417 = _0x4c0427['UVWoF'](_0x2bc618, '')['replace'](/http.*\\\\/\\\\//g, '');\\n                    if (/移动/ ['test'](_0x49da96)) {\\n                        d['push']({\\n                            'title': _0x4c0427['kzWDK'](_0x4c0427['XXyQr'], _0xe2c3d8) == _0x49da96 ? _0x4c0427['gtUnj'](_0x4c0427['gtUnj'](_0x4c0427['UtfWf'], _0x4c0427['QOvJV']), _0x5cf417) : _0x4c0427['ABEwB'] + _0x5cf417,\\n                            'url': bjItem['ydParse'](_0x49da96, _0xe2c3d8),\\n                            'col_type': _0x4c0427['ozzWG']\\n                        });\\n                    } else {\\n                        var _0x119365 = [_0x2bc618, _0x4c0427['gtUnj'](_0xe2c3d8, '||')]['join']('||');\\n                        d['push']({\\n                            'title': _0x4c0427['nWfVR'](_0x4c0427['ABEwB'], _0x5cf417),\\n                            'col_type': _0x4c0427['ozzWG'],\\n                            'url': bjItem['xlSelect'](_0x119365, _0x2ecbe5['toString']())\\n                        });\\n                    }\\n                }\\n            } else {\\n                var _0xb70192 = [_0x33788c, _0xe2c3d8 + '||']['join']('||');\\n                // 迪迪影院||0||  名称||索引 的数组\\n                // ABEwB 是绿色 _0x37871e 是标题名称  xdrFv是字符串连接函数\\n                // let flag = '‘‘Ⓤ’’';\\n                let flag = _0x4c0427.color('Ⓤ','#0051ff');\\n                if(typeof(json.codes[_0x37871e])==='function'){\\n                    // flag = '““Ⓙ””';\\n                    flag = _0x4c0427.color('Ⓙ','#ff7000');\\n                }else if(typeof(json.codes[_0x37871e])==='undefined'){\\n                    flag = '';\\n                }\\n                // let cls = '<span style=\\\"color:#298A08\\\">';\\n                // let title = _0x4c0427['xdrFv'](_0x4c0427['ABEwB'], flag+_0x37871e);\\n                // let title = flag+cls+_0x37871e;\\n                let title = flag+_0x4c0427.color(_0x37871e,'#298A08');\\n                d['push']({\\n                    'title': title,\\n                    // 'title': _0x37871e,\\n                    'col_type': _0x4c0427['ozzWG'],\\n                    'url': bjItem['xlSelect'](_0xb70192, _0x2ecbe5['toString']())\\n                });\\n            }\\n        }\\n        _0x4c0427['ywjux'](clearVar, _0x4c0427['rgDIp']);\\n    },\\n    'lqFile': function() {\\n        var _0x541d76 = {\\n            'aWiRs': function(_0x48d77b, _0x19161f, _0x21cb85) {\\n                return _0x48d77b(_0x19161f, _0x21cb85);\\n            },\\n            'wSfnz': function(_0x4850ea) {\\n                return _0x4850ea();\\n            },\\n            'qRQdA': 'jdRoute',\\n            'WQiqk': 'var xdRoute=\\\"\\\";',\\n            'psGdt': function(_0x170780, _0x3b512a) {\\n                return _0x170780 == _0x3b512a;\\n            },\\n            'imxri': 'true',\\n            'nSkjx': function(_0x95bf38, _0x313f25) {\\n                return _0x95bf38 !== _0x313f25;\\n            },\\n            'iVNeM': 'eeLJm',\\n            'IwMTl': '0|1|5|9|11|3|6|7|10|4|2|8',\\n            'xfdHk': '拉取主插件和网页脚本',\\n            'rGLuA': '主插件存放路径: /cache/Parse_Dn.js\\\\x0a网页脚本存放路径: /cache/Parse_Dn.html',\\n            'zQSLE': 'text_center_1',\\n            'hviDl': function(_0x26db62, _0x312f1c) {\\n                return _0x26db62(_0x312f1c);\\n            },\\n            'ZxUgt': '操作指引',\\n            'sWFoc': function(_0x2a044b, _0x149a3f) {\\n                return _0x2a044b + _0x149a3f;\\n            },\\n            'OEhat': '拉取代码',\\n            'ZvtSu': '编辑解析',\\n            'gXKMb': 'toast://请先拉取列表',\\n            'WCODC': function(_0x4ad3d5, _0x31fa1e) {\\n                return _0x4ad3d5 < _0x31fa1e;\\n            },\\n            'rAkAh': 'text_3',\\n            'yWaOI': '恢复插件路径为默认',\\n            'yjyjK': '当前设置为: ',\\n            'tHXeE': '拉取解析列表或者解析代码',\\n            'GMUYu': '存放路径: /rules/DuanNian/MyParse.json',\\n            'mpZBZ': 'line_blank',\\n            'xvqgF': '输入有效插件地址',\\n            'heuKx': 'putVar(\\\"pluginLink\\\",input)',\\n            'Iifia': '‘‘’’<strong><big>登录提示',\\n            'PFRHA': '使用相关功能需登录视界论坛账号\\\\n如有问题前往论坛了解详情',\\n            'ULwkT': 'https://haikuoshijie.cn/user/signin'\\n        };\\n        if (_0x541d76['psGdt'](_0x541d76['wSfnz'](bbsYZ), _0x541d76['imxri'])||true) {\\n            if (_0x541d76['nSkjx'](_0x541d76['iVNeM'], _0x541d76['iVNeM'])) {\\n                _0x541d76['aWiRs'](putVar, 'bbsYZ', _0x541d76['wSfnz'](isLogin||function (){return true}));\\n                _0x541d76['aWiRs'](putVar, _0x541d76['qRQdA'], _0x541d76['WQiqk']);\\n            } else {\\n                var _0x4d25ff = _0x541d76['IwMTl']['split']('|'),\\n                    _0x4a97c9 = 0x0;\\n                while (!![]) {\\n                    switch (_0x4d25ff[_0x4a97c9++]) {\\n                        case '0':\\n                            d['push']({\\n                                'title': _0x541d76['xfdHk'],\\n                                'url': bjItem['pullScript'](_mySet['cjcache'], _mySet['x5cache']),\\n                                'desc': _0x541d76['rGLuA'],\\n                                'col_type': _0x541d76['zQSLE']\\n                            });\\n                            continue;\\n                        case '1':\\n                            _0x541d76['hviDl'](eval, _0x541d76['hviDl'](getVar, _0x541d76['qRQdA']));\\n                            continue;\\n                        case '2':\\n                            d['push']({\\n                                'col_type': 'line_blank'\\n                            });\\n                            continue;\\n                        case '3':\\n                            var _0x2ab399 = 'hiker://empty#noHistory#@rule=js:this.d=[];$.require(\\\"hiker://page/jxItem?rule=MyFieldᴰⁿ\\\").jxList();setResult(d);';\\n                            continue;\\n                        case '4':\\n                            d['push']({\\n                                'title': _0x541d76['ZxUgt'],\\n                                'url': typeof czGuide == 'function' ? czGuide() : '',\\n                                'col_type': _0x541d76['zQSLE']\\n                            });\\n                            continue;\\n                        case '5':\\n                            xdRoute = _0x541d76['sWFoc'](xdRoute, _mySet['parseRoute']);\\n                            continue;\\n                        case '6':\\n                            var _0x3a9afe = [{\\n                                'title': '拉取列表',\\n                                'url': bjItem['pullCode']('列表')\\n                            }, {\\n                                'title': _0x541d76['OEhat'],\\n                                'url': bjItem['pullCode']('代码')\\n                            }, {\\n                                'title': _0x541d76['ZvtSu'],\\n                                'url': _0x541d76['hviDl'](fileExist, _0x541d76['hviDl'](getVar, 'parseRoute')) == !![] ? _0x2ab399 : _0x541d76['gXKMb']\\n                            }];\\n                            continue;\\n                        case '7':\\n                            for (var _0x1a2cdb = 0x0; _0x541d76['WCODC'](_0x1a2cdb, _0x3a9afe['length']); _0x1a2cdb++) {\\n                                d['push']({\\n                                    'title': _0x3a9afe[_0x1a2cdb]['title'],\\n                                    'url': _0x3a9afe[_0x1a2cdb]['url'],\\n                                    'col_type': _0x541d76['rAkAh']\\n                                });\\n                            }\\n                            continue;\\n                        case '8':\\n                            d['push']({\\n                                'title': _0x541d76['yWaOI'],\\n                                'url': bjItem['hfPlugin'](_mySet['parseRoute']),\\n                                'desc': _0x541d76['sWFoc'](_0x541d76['yjyjK'] + mySet['cj'], '\\\\n存放路径: /rules/DuanNian/MyParse.json'),\\n                                'col_type': _0x541d76['zQSLE']\\n                            });\\n                            continue;\\n                        case '9':\\n                            d['push']({\\n                                'title': _0x541d76['tHXeE'],\\n                                'url': 'toast://请在下方选项操作',\\n                                'desc': _0x541d76['GMUYu'],\\n                                'col_type': _0x541d76['zQSLE']\\n                            });\\n                            continue;\\n                        case '10':\\n                            d['push']({\\n                                'col_type': _0x541d76['mpZBZ']\\n                            });\\n                            continue;\\n                        case '11':\\n                            d['push']({\\n                                'desc': _0x541d76['xvqgF'],\\n                                'col_type': 'input',\\n                                'extra': {\\n                                    'titleVisible': ![],\\n                                    'defaultValue': _0x541d76['hviDl'](getVar, 'pluginLink'),\\n                                    'onChange': _0x541d76['heuKx']\\n                                }\\n                            });\\n                            continue;\\n                    }\\n                    break;\\n                }\\n            }\\n        } else {\\n            d['push']({\\n                'title': _0x541d76['Iifia'],\\n                'desc': _0x541d76['PFRHA'],\\n                'url': _0x541d76['ULwkT'],\\n                'col_type': _0x541d76['zQSLE']\\n            });\\n        }\\n    }\\n};\\n$.exports = jxItem;\"},{\"col_type\":\"movie_3\",\"name\":\"解析Url编辑\",\"path\":\"EditUrl\",\"rule\":\"js:\\nsetPageTitle(\\\"插件接口设置\\\");\\nlet d = [];\\nlet parseUrlText = request(\\\"hiker://files/jiexi/jiexi.txt\\\");\\nlet parseUrlArray = parseUrlText.split(/\\\\n/);\\nlet selected = getItem(\\\"selected\\\", \\\"\\\");\\nlet classTab = [\\n    [\\\"选择\\\", \\\"0\\\"],\\n    [\\\"修改\\\", \\\"1\\\"],\\n    [\\\"删除\\\", \\\"2\\\"]\\n];\\nlet classA = getVar(\\\"class\\\", \\\"0\\\");\\naddListener('onClose', $.toString(() => {\\n    clearVar(\\\"class\\\");\\n}));\\nd.push({\\n    title: \\\"添加新的解析\\\",\\n    url: $(\\\"\\\",\\\"解析名&&解析URL\\\").input(() => {\\n        let parseUrlText = request(\\\"hiker://files/jiexi/jiexi.txt\\\");\\n        let parseUrlArray = parseUrlText.split(/\\\\n/);\\n        if(input.split(\\\"&&\\\").length!==2){\\n            return \\\"toast://格式不正确\\\";\\n        }\\n        parseUrlArray.push(input);\\n        parseUrlText = parseUrlArray.join(\\\"\\\\n\\\");\\n        writeFile(\\\"hiker://files/jiexi/jiexi.txt\\\", parseUrlText);\\n        \\n        refreshPage(false);\\n        return \\\"toast://修改成功\\\";\\n    }),\\n    col_type: \\\"scroll_button\\\"\\n});\\nfor (let item of classTab) {\\n    d.push({\\n        title: item[1] === classA ? \\\"““\\\" + item[0] + \\\"””\\\" : item[0],\\n        url: $(\\\"#noLoading#\\\").lazyRule((key) => {\\n            putVar(\\\"class\\\", key);\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\";\\n        }, item[1]),\\n        col_type: \\\"scroll_button\\\"\\n    });\\n}\\nlet func;\\nswitch (classA) {\\n    case \\\"0\\\":\\n        func = function(url, title) {\\n            return $(url + \\\"#noLoading#\\\").lazyRule((title) => {\\n                log(\\\"\\\\n更改接口> \\\" + input);\\n                setItem(\\\"selected\\\", input);\\n                setItem(\\\"selected0\\\", title + \\\"&&\\\" + input);\\n                refreshPage(false);\\n                return \\\"toast://修改成功\\\";\\n            }, title);\\n        };\\n        break;\\n    case \\\"1\\\":\\n        func = function(url, title, index) {\\n            return $(url, \\\"请输入「\\\" + title + \\\"」的新接口\\\").input((title, index) => {\\n                let parseUrlText = request(\\\"hiker://files/jiexi/jiexi.txt\\\");\\n                let parseUrlArray = parseUrlText.split(/\\\\n/);\\n                let selected1 = parseUrlArray[index];\\n                parseUrlArray[index] = title + \\\"&&\\\" + input;\\n                parseUrlText = parseUrlArray.join(\\\"\\\\n\\\");\\n                writeFile(\\\"hiker://files/jiexi/jiexi.txt\\\", parseUrlText);\\n                if (selected1 == getItem(\\\"selected0\\\")) {\\n                    setItem(\\\"selected\\\", input);\\n                    setItem(\\\"selected0\\\", title + \\\"&&\\\" + input);\\n                }\\n                refreshPage(false);\\n                return \\\"toast://修改成功\\\";\\n            }, title, index);\\n        };\\n        break;\\n    case \\\"2\\\":\\n        func = function(url, title, index) {\\n            return $(\\\"确认删除「\\\" + title + \\\"」？\\\").confirm((title, index) => {\\n                let parseUrlText = request(\\\"hiker://files/jiexi/jiexi.txt\\\");\\n                let parseUrlArray = parseUrlText.split(/\\\\n/);\\n                let selected1 = parseUrlArray[index];\\n                parseUrlArray.splice(index, 1);\\n                parseUrlText = parseUrlArray.join(\\\"\\\\n\\\");\\n                writeFile(\\\"hiker://files/jiexi/jiexi.txt\\\", parseUrlText);\\n                if (selected1 == getItem(\\\"selected0\\\")) {\\n                    if (parseUrlArray[0]) {\\n                        setItem(\\\"selected\\\", parseUrlArray[0].split(\\\"&&\\\")[1] || \\\"\\\");\\n                        setItem(\\\"selected0\\\", parseUrlArray[0]);\\n                    } else {\\n                        setItem(\\\"selected\\\", \\\"\\\");\\n                        setItem(\\\"selected0\\\", \\\"\\\");\\n                    }\\n                }\\n                refreshPage(false);\\n                return \\\"toast://修改成功\\\";\\n            }, title, index);\\n        };\\n        break;\\n\\n}\\nfor (let i in parseUrlArray) {\\n    let item = parseUrlArray[i].split(\\\"&&\\\");\\n    d.push({\\n        title: selected == item[1] ? \\\"‘‘\\\" + item[0] + \\\"’’\\\" : item[0],\\n        url: func(item[1], item[0], i),\\n        col_type: \\\"text_3\\\"\\n    });\\n}\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"主题管理\",\"path\":\"theme\",\"rule\":\"js:\\n    function themeInit(){\\n        const {color,small} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\n        let d = [];\\n        let options = ['选择','修改','删除','导出'];\\n\\n        for(var i in options){\\n            let option = options[i];\\n            let flag = getVar('theme.dn_option','新增')===option?'👉':'';\\n            d.push({\\n                title:flag+option,\\n                col_type:'scroll_button',\\n                url:$(option).lazyRule(()=>{\\n                    putVar('theme.dn_option', input);\\n                    refreshPage(true);\\n                    return 'toast://已设置操作类型为:'+input;\\n                }),\\n            });\\n        }\\n\\n        let themeRoute = \\\"hiker://files/cache/MyTheme.json\\\";\\n        let myThemes = {};\\n        let themes = {};\\n        try {\\n            myThemes = JSON.parse(fetch(themeRoute));\\n            themes = myThemes.themes[myThemes.now_theme];\\n        }catch (e) {}\\n\\n\\n        d.push({\\n            title:'导入',\\n            col_type:'scroll_button',\\n            url:$('','请输入导入口令').input((myThemes,themeRoute)=>{\\n                if(/^断插主题@.*?@http/.test(input)){\\n                    let name = input.split('@')[1];\\n                    let url = input.split('@')[2];\\n                    return $('确定要导入断插主题-'+name+' 吗?').confirm((name,url,myThemes,themeRoute)=>{\\n                        let content = parsePaste(url);\\n                        let hasTheme = myThemes.themes.filter(it=>it.name===name);\\n                        if(hasTheme&&hasTheme.length>0){\\n                            let id = null;\\n                            for(let j in myThemes.themes){\\n                                if(myThemes.themes[j].name === name){\\n                                    id = j;\\n                                    break;\\n                                }\\n                            }\\n                            if(!id){\\n                                return 'toast://索引错误无法覆盖导入:\\\\n'+id\\n                            }\\n                            // log('覆盖导入主题id:'+id);\\n                            myThemes.themes[id] = Object.assign(JSON.parse(base64Decode(content)),{'name':name});\\n                        }else{\\n                            myThemes.themes.push(Object.assign(JSON.parse(base64Decode(content)),{'name':name}));\\n                        }\\n                        // log(myThemes);\\n                        writeFile(themeRoute,JSON.stringify(myThemes));\\n                        refreshPage(true);\\n                        return 'toast://已成功导入主题:\\\\n'+name\\n                    },name,url,myThemes,themeRoute);\\n                }else{\\n                    return 'toast://无法识别的导入口令:\\\\n'+input;\\n                }\\n            },myThemes,themeRoute),\\n        });\\n        d.push({\\n            title:'新增',\\n            col_type:'scroll_button',\\n            url:$().rule((myThemes,themeRoute)=>{\\n                let d=[];\\n                addListener('onClose', $.toString(()=>{\\n                    refreshPage(true);\\n                }));\\n                d.push({\\n                    title: '主题名称',\\n                    desc: \\\"断插-蓝莓主题\\\",\\n                    extra: {\\n                        onChange: \\\"putVar('theme.new_add_name',input)\\\",\\n                        titleVisible: true,\\n                        defaultValue: getVar('theme.new_add_name', '')\\n                    },\\n                    url:$.toString(() => {\\n                        let new_add_name = getVar('theme.new_add_name', '');\\n                        return 'toast://你输入的是:'+new_add_name;\\n                    }),\\n                    col_type: \\\"input\\\"\\n                });\\n                d.push({\\n                    desc: \\\"代码\\\",\\n                    col_type: 'input',\\n                    extra: {\\n                        titleVisible: false,\\n                        defaultValue: getVar('theme.new_add_code', ''),\\n                        type: \\\"textarea\\\",\\n                        height:-1,\\n                        onChange: 'putVar(\\\"theme.new_add_code\\\",input)'\\n                    }\\n                });\\n                d.push({\\n                    title:'保存',\\n                    col_type:'text_center_1',\\n                    url:$().lazyRule((myThemes,themeRoute)=>{\\n                        let code = getVar('theme.new_add_code', '');\\n                        let name = getVar('theme.new_add_name', '');\\n                        if(!name){\\n                            return 'toast://你还没填写主题名称呢'\\n                        }\\n                        let newTheme = {};\\n                        try {\\n                            newTheme = JSON.parse(code);\\n                        }catch (e) {\\n                            return 'toast://错误的主题json格式:\\\\n'+e.message;\\n                        }\\n                        Object.assign(newTheme,{'name':name});\\n                        myThemes.themes.push(newTheme);\\n                        writeFile(themeRoute,JSON.stringify(myThemes));\\n                        refreshPage(true);\\n                        return 'toast://已新增断插主题:'+name\\n                    },myThemes,themeRoute)\\n                });\\n                setResult(d);\\n            },myThemes,themeRoute),\\n        });\\n        d.push({\\n            title:myThemes.themes?'主题列表:共计:'+color(myThemes.themes.length,'#ff7000')+'个主题':\\\"第一次加载，点此进去初始化主题列表\\\",\\n            col_type:'text_1',\\n            url:'hiker://page/Route?rule=MyFieldᴰⁿ&type=设置#noHistory#'\\n        });\\n        d.push({\\n            title:\\\"恢复出厂设置\\\",\\n            col_type:'text_center_1',\\n            url:$(\\\"如果你的主题没法正常用了，此方法可以救砖，确认恢复?\\\").confirm(()=>{\\n                let themes = {name:'默认主题',closeBtn:{color:'#f6f6f6',background:'#aa96da'},saveBtn:{color:'#F9F0DA',background:'#068006'},saveCloseBtn:{color:'#F9F0DA',background:'#05BFC5'},tipsBtn:{color:'#F9F0DA',background:'#05BFC5'},barlabel:{color:'#F9F0DA',background:'#aa96da'},barInput:{color:'#aa96da',background:'#ffffd2'},select:{color:'#F9F0DA',background:'#aa96da'},};\\n                let themeDef = {\\\"name\\\":\\\"断念原皮\\\",\\\"closeBtn\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#c5464a\\\"},\\\"saveBtn\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#068006\\\"},\\\"saveCloseBtn\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#05BFC5\\\"},\\\"tipsBtn\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#05BFC5\\\"},\\\"barlabel\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#D06B6C\\\"},\\\"barInput\\\":{\\\"color\\\":\\\"#D06B6C\\\",\\\"background\\\":\\\"#F9F0DA\\\"},\\\"select\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#D06B6C\\\"}};\\n                let themeRoute = \\\"hiker://files/cache/MyTheme.json\\\";\\n                writeFile(themeRoute,JSON.stringify({now_theme:'默认主题',themes:[themes,themeDef]}));\\n                refreshPage(true);\\n                return 'toast://断插主题已重置为出厂设置'\\n            })\\n        });\\n        for(var i in myThemes.themes){\\n            let nowThem = myThemes.themes[i];\\n            d.push({\\n                title:myThemes.now_theme===nowThem.name?'👉'+nowThem.name:nowThem.name,\\n                col_type:'flex_button',\\n                url:$().lazyRule((mytheme,myThemes,i,themeRoute)=>{\\n                    let option = getVar('theme.dn_option','新增');\\n                    switch (option){\\n                        case '导出':\\n                            let mythemeCode = base64Encode(JSON.stringify(mytheme));\\n                            let url = sharePaste(mythemeCode);\\n                            let code = '断插主题@'+mytheme.name+'@'+url;\\n                            copy(code);\\n                            return 'toast://已导出为云口令并复制到剪切板'\\n                        case '修改':\\n                            return $(JSON.stringify(mytheme)).input((mytheme,myThemes,i,themeRoute)=>{\\n                                if(mytheme.name===myThemes.now_theme){\\n                                    return 'toast://此主题当前正在使用中，不允许修改!'\\n                                }\\n                                myThemes.themes[i]=JSON.parse(input);\\n                                writeFile(themeRoute,JSON.stringify(myThemes));\\n                                refreshPage(true);\\n                                return 'toast://已修改'\\n                            },mytheme,myThemes,i,themeRoute)\\n                        case '删除':\\n                            return $('确认删除主题:'+mytheme.name+'?').confirm((mytheme,myThemes,i,themeRoute)=>{\\n                                if(mytheme.name===myThemes.now_theme){\\n                                    return 'toast://此主题当前正在使用中，不允许删除!'\\n                                }\\n                                myThemes.themes.splice(i,1);\\n                                writeFile(themeRoute,JSON.stringify(myThemes));\\n                                refreshPage(true);\\n                                return 'toast://已删除'\\n                            },mytheme,myThemes,i,themeRoute)\\n                        default:\\n                            myThemes.now_theme=mytheme.name;\\n                            writeFile(themeRoute,JSON.stringify(myThemes));\\n                            refreshPage(true);\\n                            return 'toast://你选择了'+mytheme.name+'作为默认主题';\\n                    }\\n                },nowThem,myThemes,i,themeRoute),\\n            });\\n        }\\n        setResult(d);\\n    }\\n$.exports.themeInit=themeInit;\"},{\"name\":\"操作指引\",\"path\":\"Guide\",\"rule\":\"<html>\\n<head>\\n    <meta charset=\\\"UTF-8\\\">\\n</head>\\n<body>\\n<strong> <big>拉取篇</big> </strong>\\n<br /> 操作顺序：\\n<br /> 1.更新道长仓库Pro到76版本\\n<br /> 2.拉取主插件和网页脚本\\n<br /> 3.推荐直接拉取代码<s>拉取列表→拉取代码</s>\\n<br />\\n<br />\\n<strong><big>口令篇</big></strong>\\n<br />首页输入框支持：\\n<br />1.分享出来的同系列插件云剪贴板口令\\n<br />2.未加密的同系列插件地址,支持本地文件如以下格式开头的:file://,hiker://,/storage\\n<br />3.Q神\\n<br />4.断插\\n<br />5.#道长精选\\n<br />6.#b站\\n<br />7.#倍陆\\n<br />\\n<br />\\n<strong><big>编辑篇</big></strong>\\n<br />隐藏功能需知：\\n<br />隐藏功能是从列表上删除标题，故无复现功能\\n<br />看准了，不用的才点隐藏\\n<br />要复现的话去修改新的MyParse.json，在title的数组那按格式添加标题\\n<br />\\n<br />\\n<strong><big>完结</big><br /></strong>\\n<p>v3.49,小白最后的倔强,小白关怀模式</p>\\n<p>一键实现配置完毕即可通过支持魔断的小程序看视频，回归白嫖视频这个需求本身</p>\\n<p>推荐使用青豆,app影视.dp</p>\\n<p>魔断(断插道长魔改版)已弃坑跑路，感谢原作者断念的插件解析及本小程序核心代码</p>\\n</body>\\n</html>\"},{\"name\":\"测试数据\",\"path\":\"demoData\",\"rule\":\"js:\\n    let demoData = {\\n        爱奇艺:['https://www.iqiyi.com/v_1zp7qgh23kg.html','https://www.iqiyi.com/v_2bc8tk8r6ug.html'],\\n        优酷:['https://v.youku.com/v_show/id_XNTE4NTgxMTY2MA==.html','https://v.youku.com/v_show/id_XNTE5ODYxMjAzNg==.html'],\\n        腾讯:['https://v.qq.com/x/cover/m441e3rjq9kwpsc/p0040gim4fz.html','https://v.qq.com/x/cover/mzc00200xh9313v/z0039tbho7q.html'],\\n        芒果:['https://www.mgtv.com/b/372061/12193558.html','https://www.mgtv.com/b/363286/14295823.html'],\\n        哔哩哔哩:['https://www.bilibili.com/bangumi/play/ep381217','https://www.bilibili.com/bangumi/play/ep408123','https://www.bilibili.com/bangumi/play/ss33434','https://www.bilibili.com/video/av336348663'],\\n        搜狐:['https://film.sohu.com/album/9457584.html','https://film.sohu.com/album/9182646.html'],\\n        西瓜:['https://www.ixigua.com/6551332125654647310','https://www.ixigua.com/6699356792905794055'],\\n        PPTV:['http://v.pptv.com/show/TIndWsIomNY5tx8.html','http://v.pptv.com/show/SCQ5th6E9DKVE3s.html'],\\n        咪咕:['https://www.miguvideo.com/mgs/website/prd/detail.html?cid=633511743','https://www.miguvideo.com/mgs/website/prd/detail.html?cid=716270319'],\\n        乐视:['http://www.le.com/ptv/vplay/75843059.html','http://www.le.com/ptv/vplay/24220901.html#vid=24220901'],\\n        1905:['https://vip.1905.com/play/875740.shtml','https://www.1905.com/vod/play/880641.shtml'],\\n        风行:['http://www.fun.tv/vplay/g-304143','http://www.fun.tv/vplay/g-1008963/'],\\n        龙腾:['LT-1ec3f6754f68586ed7f92c3e995cfca6','LT-fff47abf7ff22ffa3def904c6c91e192','LT-7ccda68683329780bd7264c8f9edd90e'],\\n        人人迷:['renrenmi-ab924e11d2d69397','renrenmi-92640e8dc4cad83a'],\\n        五毒:['wuduyun-1649431307021'],\\n        多多:['https://m3u8.cache.suoyo.cc/m3u8/202203/8/aaabd92da26774c68850a023153c80f1ae6fa9be.m3u8'],\\n        融兴:['RongXingVR-4215645581932','RongXingVR-4215645587000'],\\n        雪人:['xueren-1646823072','xueren-1649402753','xueren-1649175252','xueren-1649307780','xueren-1648781475'],\\n        旋风云:['xfy-529e6457953d545f','xfy-b65615dac4377ee3'],\\n        瑞丰资源:['https://1.ruifenglb.com/play/1644914595.m3u8','https://1.ruifenglb.com/play/1642389907.m3u8'],\\n    }\\n\\nlet defaultSets =  {\\n    qy: '万能解析Ⓙ',\\n    yk: '万能解析Ⓙ',\\n    tx: '万能解析Ⓙ',\\n    mg: '万能解析Ⓙ',\\n    bl: '万能解析Ⓙ',\\n    sh: '万能解析Ⓙ',\\n    xg: '万能解析Ⓙ',\\n    al: '万能解析Ⓙ',\\n    pp: '万能解析Ⓙ',\\n    mi: '万能解析Ⓙ',\\n    le: '万能解析Ⓙ',\\n    oth: '道长仓库通免',\\n    fun: '万能解析Ⓙ',\\n    one:'万能解析Ⓙ',\\n    lt:'万能解析Ⓙ',\\n    rr:'万能解析Ⓙ',\\n    wd:'万能解析Ⓙ',\\n    qju: '默认',\\n    cj: 'hiker://files/cache/Parse_Dn.js'\\n};\\n\\nlet floors = '①②③④⑤⑥⑦⑧⑨⑩１２３４５６７８９０⒈⒉⒊⒋⒌⒍⒎⒏⒐'.split('');\\nlet emojis = '#️⃣|*️⃣|0️⃣|1️⃣|2️⃣|3️⃣|4️⃣|5️⃣|6️⃣|7️⃣|8️⃣|9️⃣|🅰️|🅱️|🍇|🍈|🍉|🍊|🍋|🍌|🍍|🍎|🍏|🍐|🍑|🍒|🍓|🍅|🍆|🌽|🍄|🌰|🍞|🍖|🍗|🍔|🍟|🍕|🍳|🍲|🍱|🍘|🍙|🍚|🍛|🍜|🍝|🍠|🍢|🍣|🍤|🍥|🍡|🍦|🍧|🍨|🍩|🍪|🎂|🍰|🍫|🍬|🍭|🍮|🍯|🍼|☕|🍵|🍶|🍷|🍸|🍹|🍺|🍻|🍴'.split('|');\\nfloors = floors.concat(emojis);\\n$.exports.demoData = demoData;\\n$.exports.defaultSets = defaultSets;\\n$.exports.floors = floors;\"},{\"name\":\"工具类\",\"path\":\"utils\",\"rule\":\"js:\\n//随机从列表抽取一个元素\\nfunction getOne(its) {return  its[Math.floor(Math.random()*its.length)];}\\n//去重（ES6 Set）\\nfunction unique2(array){\\n    return Array.from(new Set(array));\\n}\\n//获取列表中重复都值\\nfunction duplicates(arr) {\\n    let res=arr.filter((x,k)=>{\\n        let a=k*1+1;\\n        let index=arr.indexOf(x,a);\\n        if(index>-1){\\n            return x;\\n        }\\n    })\\n    let re=new Set(res);\\n    return Array.from(re);\\n}\\n$.exports.getOne = getOne;\\n$.exports.unique2 = unique2;\\n$.exports.duplicates = duplicates;\"},{\"name\":\"解析管理\",\"path\":\"jxManage\",\"rule\":\"js:\\n    function jxManage(){\\n        const {color,small} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\n        let d = [];\\n        let options = ['选择','修改','删除','导出'];\\n\\n        for(let i in options){\\n            let option = options[i];\\n            let flag = getVar('dn.jxm_option','选择')===option?'👉':'';\\n            d.push({\\n                title:flag+option,\\n                col_type:'scroll_button',\\n                url:$('#noLoading#').lazyRule((option)=>{\\n                    putVar('dn.jxm_option', option);\\n                    refreshPage(true);\\n                    return 'hiker://empty';\\n                },option),\\n            });\\n        }\\n        let jxsRoute = \\\"hiker://files/cache/MyJiexi.json\\\";\\n        let dmPath = \\\"hiker://files/cache/diaomao.txt\\\";\\n        let MyJiexi = {jiexis:[]};\\n        let jiexis = {};\\n        try {\\n            MyJiexi = JSON.parse(fetch(jxsRoute));\\n            jiexis = MyJiexi.jiexis.filter(it=>it.name===MyJiexi.now)[0];\\n        }catch (e) {}\\n\\n        d.push({\\n            title:'导入',\\n            col_type:'scroll_button',\\n            url:$('','请输入导入口令').input((MyJiexi,jxsRoute)=>{\\n                if(/^魔断解析配置@.*?@http/.test(input)){\\n                    let name = input.split('@')[1];\\n                    let url = input.split('@')[2];\\n                    return $('确定要导入断插解析配置-'+name+' 吗?').confirm((name,url,MyJiexi,jxsRoute)=>{\\n                        let content = parsePaste(url);\\n                        let hasIt = MyJiexi.jiexis.filter(it=>it.name===name);\\n                        if(hasIt&&hasIt.length>0){\\n                            let id = null;\\n                            for(let j in MyJiexi.jiexis){\\n                                if(MyJiexi.jiexis[j].name === name){\\n                                    id = j;\\n                                    break;\\n                                }\\n                            }\\n                            if(!id){\\n                                return 'toast://索引错误无法覆盖导入:\\\\n'+id\\n                            }\\n                            // log('覆盖导入主题id:'+id);\\n                            MyJiexi.jiexis[id] = Object.assign(JSON.parse(base64Decode(content)),{'name':name});\\n                        }else{\\n                            MyJiexi.jiexis.push(Object.assign(JSON.parse(base64Decode(content)),{'name':name}));\\n                        }\\n                        writeFile(jxsRoute,JSON.stringify(MyJiexi));\\n                        refreshPage(true);\\n                        return 'toast://已成功导入解析配置:\\\\n'+name\\n                    },name,url,MyJiexi,jxsRoute);\\n                }else{\\n                    return 'toast://无法识别的导入口令:\\\\n'+input;\\n                }\\n            },MyJiexi,jxsRoute),\\n        });\\n\\n        let isAuto = MyJiexi.isAuto;\\n        let autoMode = MyJiexi.autoMode;\\n        let singleBack = MyJiexi.singleBack||false; //吊毛模式。单个结果直接返回，停止后面的\\n        let ignore_mx = MyJiexi.ignore_mx||false; //忽略免嗅,嗅探优先模式使用\\n        let tips = '解析配置列表:共计:'+color(MyJiexi.jiexis.length,'#ff7000')+'个配置,自动档开关:'+color(isAuto?'开':'关','#ff7000');\\n        d.push({\\n            title:MyJiexi.jiexis&&MyJiexi.jiexis.length>0?tips:\\\"第一次加载，点此进去初始化解析列表\\\",\\n            col_type:'text_1',\\n            url:$('#noLoading#').lazyRule((MyJiexi,jxsRoute)=>{\\n                if(MyJiexi.jiexis&&MyJiexi.jiexis.length>0){\\n                    MyJiexi.isAuto = !MyJiexi.isAuto;\\n                    if(!MyJiexi.autoMode){\\n                        MyJiexi.autoMode = '嗅探优先';\\n                    }\\n                    writeFile(jxsRoute,JSON.stringify(MyJiexi));\\n                    refreshPage(true);\\n                    let tips = MyJiexi.isAuto?'开':'关';\\n                    return 'toast://已设置自动档模式为:'+tips\\n                }else{\\n                    let initSet = {'now':\\\"道长推荐\\\",'jiexis':[{name:'道长推荐',qy:['万能解析Ⓙ'],yk:['万能解析Ⓙ'],tx:['万能解析Ⓙ'],mg:['万能解析Ⓙ'],bl:['万能解析Ⓙ'],sh:['万能解析Ⓙ'],xg:['万能解析Ⓙ'],pp:['万能解析Ⓙ'],mi:['万能解析Ⓙ'],\\n                            le:['万能解析Ⓙ'],fun:['万能解析Ⓙ'],one:['万能解析Ⓙ'],lt:['万能解析Ⓙ'],rr:['万能解析Ⓙ'],wd:['万能解析Ⓙ']}]};\\n                    writeFile(jxsRoute,JSON.stringify(initSet));\\n                    refreshPage(true);\\n                    return 'toast://断插解析配置已初始化'\\n                }\\n            },MyJiexi,jxsRoute)\\n        });\\n        let c1 = '#15ab21';\\n        let c2 = '#900a0a';\\n        let autoModeSel = ['速度优先','顺序优先','嗅探优先'];\\n        let autoModeSels = autoModeSel.map((it)=>{\\n            if(it===MyJiexi.autoMode){\\n                it = color(it,c1);\\n            }\\n            return it\\n        });\\n        let autoModeTips = autoModeSel.includes(autoMode)?autoMode:'未知';\\n        d.push({\\n            title:small(\\\"备胎宠幸方案:\\\")+color(autoModeTips,'#ff7000'),\\n            col_type:'text_2',\\n            url:$(autoModeSels,3,'请选择自动档模式').select((MyJiexi,jxsRoute)=>{\\n                input = /font/.test(input)?input.split('>')[1].split('<')[0]:input;\\n                if(input!==MyJiexi.autoMode){\\n                    MyJiexi.autoMode = input;\\n                    writeFile(jxsRoute,JSON.stringify(MyJiexi));\\n                    refreshPage(false);\\n                }\\n                return 'toast://已设置备胎宠幸方案为:'+input\\n            },MyJiexi,jxsRoute),\\n        });\\n\\n        d.push({\\n            title:color(\\\"恢复出厂设置\\\",'#ff7000'),\\n            col_type:'text_2',\\n            url:$(\\\"如果你的解析管理无法正常用了，此方法可以救砖，确认恢复?\\\").confirm((jxsRoute)=>{\\n                let initSet = {'now':\\\"道长推荐\\\",'jiexis':[{name:'道长推荐',qy:['万能解析Ⓙ'],yk:['万能解析Ⓙ'],tx:['万能解析Ⓙ'],mg:['万能解析Ⓙ'],bl:['万能解析Ⓙ'],sh:['万能解析Ⓙ'],xg:['万能解析Ⓙ'],pp:['万能解析Ⓙ'],mi:['万能解析Ⓙ'],\\n                        le:['万能解析Ⓙ'],fun:['万能解析Ⓙ'],one:['万能解析Ⓙ'],lt:['万能解析Ⓙ'],rr:['万能解析Ⓙ'],wd:['万能解析Ⓙ']}]};\\n                writeFile(jxsRoute,JSON.stringify(initSet));\\n                refreshPage(true);\\n                return 'toast://断插解析配置已重置为出厂设置'\\n            },jxsRoute)\\n        });\\n\\n        let cacheVideoSwitch = getVar('dp.cacheVideo','true')==='true'?'开':'关';\\n        let jxTimeout = getVar('dp.jxTimeout','7000');\\n        let col_type2 = autoMode==='顺序优先'?'text_3':'text_2';\\n        let singleBackTips = singleBack?'开':'关';\\n        let ignore_mx_tips = ignore_mx?'开':'关';\\n        if(autoMode==='顺序优先'){\\n            d.push({\\n                title:small('吊毛模式:')+color(singleBackTips,'#ff7000'),\\n                col_type:col_type2,\\n                url:$('#noLoading#').lazyRule((MyJiexi,jxsRoute)=>{\\n                    MyJiexi.singleBack = !(MyJiexi.singleBack||false);\\n                    writeFile(jxsRoute,JSON.stringify(MyJiexi));\\n                    refreshPage(true);\\n                    return 'toast://已设置吊毛模式开关为:'+(MyJiexi.singleBack?'开':'关')\\n                },MyJiexi,jxsRoute)\\n            });\\n        }else if(autoMode==='嗅探优先'){\\n            d.push({\\n                    title: color('导入辅助','#ff7000'),\\n                    col_type:col_type2,\\n                    url: $('hiker://empty#noLoading#').lazyRule(() => {\\n                        let html = request('https://netcut.cn/p/a5d1c8e1ecee28d3');\\n                        let data = html.match(/{.*note_content.*updated_at.*}/)[0];\\n                        let content = JSON.parse(data).note_content;\\n                        let upData = JSON.parse(data).updated_at;\\n                        confirm({\\n                            title: '是否导入',\\n                            content: '脚本更新日期\\\\n' + upData,\\n                            confirm:$.toString((content)=>{\\n                                return content\\n                            },content),\\n                            cancel: () => {\\n                                return 'toast://已取消导入';\\n                            }\\n                        });\\n                        return 'hiker://empty';\\n                    }),\\n                }\\n            );\\n            d.push({\\n                title:small('忽略免嗅:')+color(ignore_mx_tips,'#ff7000'),\\n                col_type:col_type2,\\n                url:$('#noLoading#').lazyRule((MyJiexi,jxsRoute)=>{\\n                    MyJiexi.ignore_mx = !(MyJiexi.ignore_mx||false);\\n                    writeFile(jxsRoute,JSON.stringify(MyJiexi));\\n                    refreshPage(false);\\n                    return 'toast://已设置忽略免嗅开关为:'+(MyJiexi.ignore_mx?'开':'关')\\n                },MyJiexi,jxsRoute)\\n            });\\n        }\\n        d.push({\\n            title:small('多线路缓存:')+color(cacheVideoSwitch,'#ff7000'),\\n            col_type:col_type2,\\n            url:$('#noLoading#').lazyRule((cacheVideoSwitch)=>{\\n                if(cacheVideoSwitch==='开'){\\n                    putVar('dp.cacheVideo','false');\\n                }else{\\n                    putVar('dp.cacheVideo','true');\\n                }\\n                refreshPage(true);\\n                return 'hiker://empty'\\n            },cacheVideoSwitch)\\n        });\\n        d.push({\\n            title:small('解析超时:')+color(jxTimeout,'#ff7000'),\\n            col_type:col_type2,\\n            url:$(jxTimeout,'请设置魔断解析超时,必须为整数').input(()=>{\\n                if(!parseInt(input)){\\n                    input = 7000;\\n                }\\n                putVar('dp.jxTimeout',input);\\n                refreshPage(true);\\n                return 'toast://已设置为:'+parseInt(input)\\n            },jxTimeout)\\n        });\\n        if(autoMode&&singleBack){\\n            d.push({\\n                title: color('打开编辑吊毛过滤文件','#1379CB'),\\n                url: $('#noLoading#').lazyRule((dmPath) => {\\n                    let def_dms = ['https://vd3.bdstatic.com/mda-ki9ugq5430bhxys8/v1-cae/1080p/mda-ki9ugq5430bhxys8.mp4'];\\n                    if(!fileExist(dmPath)){\\n                        writeFile(dmPath,'//一行一个链接,可注释。\\\\n'+def_dms.join('\\\\n'));\\n                    }\\n                    return 'editFile://'+dmPath;\\n                },dmPath),\\n                col_type: 'text_center_1'\\n            });\\n        }\\n\\n        d.push({\\n            title: color('打开编辑解析文件','#1379CB'),\\n            url: $('#noLoading#').lazyRule((jxsRoute) => {\\n                return 'editFile://'+jxsRoute;\\n            },jxsRoute),\\n            col_type: 'text_center_1'\\n        });\\n\\n        for(let i in MyJiexi.jiexis){\\n            let nowJx = MyJiexi.jiexis[i];\\n            d.push({\\n                title:MyJiexi.now===nowJx.name?'👉'+nowJx.name:nowJx.name,\\n                col_type:'flex_button',\\n                extra:{\\n                    nowJx:nowJx,\\n                    MyJiexi:MyJiexi,\\n                    jxsRoute:jxsRoute\\n                },\\n                url:$('#noLoading#').lazyRule((nowJx,MyJiexi,i,jxsRoute)=>{\\n                    let option = getVar('dn.jxm_option','选择');\\n                    switch (option){\\n                        case '导出':\\n                            let nowJxCode = base64Encode(JSON.stringify(nowJx));\\n                            let url = sharePaste(nowJxCode);\\n                            let code = '魔断解析配置@'+nowJx.name+'@'+url;\\n                            copy(code);\\n                            return 'toast://已导出为云口令并复制到剪切板'\\n                        case '修改':\\n                            // if(nowJx.name===MyJiexi.now){\\n                            //     return 'toast://此解析配置当前正在使用中，不允许修改!'\\n                            // }\\n                            // else{\\n                            //     return 'hiker://page/jxEdit?rule=MyFieldᴰⁿ'\\n                            // }\\n                            return 'hiker://page/jxEdit?rule=MyFieldᴰⁿ'\\n                        case '删除':\\n                            return $('确认删除解析配置:'+nowJx.name+'?').confirm((nowJx,MyJiexi,i,jxsRoute)=>{\\n                                if(nowJx.name===MyJiexi.now){\\n                                    return 'toast://此解析配置当前正在使用中，不允许删除!'\\n                                }\\n                                MyJiexi.jiexis.splice(i,1);\\n                                writeFile(jxsRoute,JSON.stringify(MyJiexi));\\n                                refreshPage(true);\\n                                return 'toast://已删除'\\n                            },nowJx,MyJiexi,i,jxsRoute)\\n                        default:\\n                            MyJiexi.now=nowJx.name;\\n                            writeFile(jxsRoute,JSON.stringify(MyJiexi));\\n                            refreshPage(true);\\n                            return 'toast://你选择了'+nowJx.name+'作为当前解析配置';\\n                    }\\n                },nowJx,MyJiexi,i,jxsRoute),\\n            });\\n        }\\n        setResult(d);\\n    }\\n$.exports.jxManage=jxManage;\"},{\"name\":\"解析编辑\",\"path\":\"jxEdit\",\"rule\":\"js:\\nlet {nowJx,MyJiexi,jxsRoute} = MY_PARAMS;\\nlet nowJxT = JSON.parse(getVar('dn.nowJx')||'{}');\\nnowJx = nowJxT.name?nowJxT:nowJx;\\naddListener('onClose', $.toString(()=>{\\n    clearVar(\\\"dn.jx_titles\\\");\\n    clearVar(\\\"dn.nowJx\\\");\\n    clearVar(\\\"dn.jxm_name\\\");\\n}));\\nlet id = null;\\nfor(let j in MyJiexi.jiexis){\\n    if(MyJiexi.jiexis[j].name === nowJx.name){\\n        id = j;\\n        break;\\n    }\\n}\\nlet d = [];\\nd.push({\\n    title: '配置名称',\\n    desc: \\\"解析配置名称,如道长推荐\\\",\\n    extra: {\\n        onChange: \\\"putVar('dn.jxm_name',input)\\\",\\n        titleVisible: true,\\n        defaultValue:getVar('dn.jxm_name','')||nowJx.name\\n    },\\n    col_type:'input'\\n});\\n// let options = ['选择','新增','删除','批量删除','移动'];\\nlet options = ['新增','删除','移动'];\\nlet writeMode = getVar('dn.jxm_writeMode','新增');\\nfor(let i in options){\\n    let option = options[i];\\n    let flag = writeMode===option?'👉':'';\\n    d.push({\\n        title:flag+option,\\n        // col_type:'scroll_button',\\n        col_type:'flex_button',\\n        url:$('#noLoading#').lazyRule((option)=>{\\n            putVar('dn.jxm_writeMode', option);\\n            refreshPage(true);\\n            return 'hiker://empty';\\n        },option),\\n    });\\n}\\nd.push({\\n    // col_type:'line',\\n    col_type:'blank_block'\\n});\\n//获取断插列表\\nif(!getVar(\\\"dn.jx_titles\\\")){\\n    let titleArr = [], urlArr = [];\\n    var json={title:[],codes:{}};\\n    let setFile = request('hiker://files/rules/DuanNian/MyParse.json');\\n    try {\\n        eval('json='+setFile);\\n    }catch (e) {\\n        log('Json解析发生了错误:'+e.message);\\n    }\\n    titleArr = json.title;\\n    titleArr.forEach((it) => {\\n        urlArr.push(json.codes[it]);\\n    });\\n    putVar('dn.jx_titles',JSON.stringify(titleArr));\\n}\\n\\nlet titles = JSON.parse(getVar('dn.jx_titles')||'[]');\\nlet titleDic = {\\n    bl:'哔哩哔哩',fun:'风行',le:'乐视',mg:'芒果',mi:'咪咕',pp:'PPTV',qy:'爱奇艺',sh:'搜狐',\\n    tx:'腾讯',xg:'西瓜',yk:'优酷',one:'1905',lt:'龙腾',rr:'人人迷',wd:'五毒',oth:'其他'\\n}\\nlet titleOrder = {\\n    qy:1,yk:2,tx:3,mg:4,bl:5,sh:6,xg:7,pp:8,mi:9,le:10,one:11,fun:12,lt:13,rr:14,wd:15,oth:16,\\n};\\n\\nfunction compareOd(titleOrder){\\n    return function (a, b){\\n        let x = titleOrder[a];\\n        let y = titleOrder[b];\\n        return x-y;\\n    }\\n}\\n//-----------------\\n// let jds = Object.keys(nowJx).filter(it=>it!=='name'&&it!=='oth');\\nlet flags = Object.keys(titleOrder);\\nlet jds = Object.keys(nowJx).filter(it=>it!=='name'&&flags.includes(it));\\n//log(jds);\\nfor(let k of flags){\\n    if(!jds.includes(k)){\\n        jds.push(k)\\n    }\\n}\\njds = jds.sort(compareOd(titleOrder));\\nfor(let j in jds){\\n    let jxs = nowJx[jds[j]]||[];\\n    let title = jds[j];\\n    d.push({\\n        title:titleDic[title]||title,\\n        col_type:'scroll_button',\\n        url:$('#noLoading#').lazyRule((titles,title,jxs,jxsRoute,MyJiexi,nowJx)=>{\\n            var json={title:[],codes:{}};\\n            let setFile = request('hiker://files/rules/DuanNian/MyParse.json');\\n            try {\\n                eval('json='+setFile);\\n            }catch (e) {\\n                log('Json解析发生了错误:'+e.message);\\n            }\\n            if(getVar('dn.jxm_writeMode','新增')==='新增'){\\n                let sel_title = titles.filter(it=>!jxs.includes(it));\\n                sel_title = sel_title.map((it)=>{\\n                    let flag = '‘‘Ⓤ’’';\\n                    if(typeof(json.codes[it])==='function'){\\n                        flag = '““Ⓙ””';\\n                    }else if(typeof(json.codes[it])==='undefined'){\\n                        flag = '';\\n                    }\\n                    return flag+it\\n                });\\n                return $(sel_title,2).select((MyJiexi,jxs,nowJx,title,jxsRoute)=>{\\n                    input = input.replace(/‘‘Ⓤ’’|““Ⓙ””/g,'');\\n                    let id = null;\\n                    for(let j in MyJiexi.jiexis){\\n                        if(MyJiexi.jiexis[j].name === nowJx.name){\\n                            id = j;\\n                            break;\\n                        }\\n                    }\\n                    if(!id){\\n                        return 'toast://索引错误无法保存:\\\\n'+id\\n                    }\\n                    jxs.push(input);\\n                    log(jxs);\\n                    nowJx[title] = jxs;\\n                    MyJiexi.jiexis[id] = nowJx;\\n                    putVar('dn.nowJx',JSON.stringify(nowJx));\\n                    writeFile(jxsRoute,JSON.stringify(MyJiexi));\\n                    refreshPage(true);\\n                    return 'hiker://empty'\\n                },MyJiexi,jxs,nowJx,title,jxsRoute);\\n            }else {\\n                return 'hiker://empty'\\n            }\\n        },titles,title,jxs,jxsRoute,MyJiexi,nowJx)\\n    });\\n    for(let k in jxs){\\n        d.push({\\n            title:jxs[k],\\n            col_type:'scroll_button',\\n            url:$('#noLoading#').lazyRule((titles,title,jxs,jxsRoute,MyJiexi,nowJx,njx,id,k,max)=>{\\n                switch (getVar('dn.jxm_writeMode','新增')){\\n                    case '删除':\\n                        Array.prototype.remove = function(val) {\\n                            let index = this.indexOf(val);\\n                            if (index > -1) {\\n                                this.splice(index, 1);\\n                            }\\n                        };\\n                        jxs.remove(njx);\\n                        nowJx[title] = jxs;\\n                        MyJiexi.jiexis[id] = nowJx;\\n                        putVar('dn.nowJx',JSON.stringify(nowJx));\\n                        writeFile(jxsRoute,JSON.stringify(MyJiexi));\\n                        refreshPage(true);\\n                        return 'hiker://empty'\\n                    case '移动':\\n                        return $(k,'移动到索引多少?').input((k,max,jxs,nowJx,MyJiexi,id,title,jxsRoute)=>{\\n                            function Move(arr, fromIndex, toIndex) {\\n                                var element = arr[fromIndex];\\n                                arr.splice(fromIndex, 1);\\n                                arr.splice(toIndex, 0, element);\\n                            }\\n                            if(parseInt(input)===k){\\n                                return 'toast://啥也没做'\\n                            }else if(parseInt(input)>max-1||parseInt(input)<-1){\\n                                return 'toast://你最大移动范围0-'+parseInt(max-1);\\n                            }\\n                            // let newAr = jxs.splice(k, 1); // 删掉\\n                            // jxs.unshift(newAr[0]);\\n                            Move(jxs,k,parseInt(input));\\n                            nowJx[title] = jxs;\\n                            MyJiexi.jiexis[id] = nowJx;\\n                            putVar('dn.nowJx',JSON.stringify(nowJx));\\n                            writeFile(jxsRoute,JSON.stringify(MyJiexi));\\n                            refreshPage(true);\\n                            return 'hiker://empty'\\n                        },k,max,jxs,nowJx,MyJiexi,id,title,jxsRoute)\\n                    default:\\n                        return 'toast://此元素不支持进行:'+getVar('dn.jxm_writeMode','新增')\\n                }\\n            },titles,title,jxs,jxsRoute,MyJiexi,nowJx,jxs[k],id,k,jxs.length)\\n        });\\n    }\\n    d.push({\\n        // col_type:'line',\\n        col_type:'blank_block'\\n    })\\n}\\nd.push({\\n    col_type:'line',\\n});\\nd.push({\\n    title:'保存',\\n    col_type:'text_center_1',\\n    url:$('#noLoading#').lazyRule((MyJiexi,id,jxsRoute)=>{\\n        if(getVar('dn.jxm_name','')!==MyJiexi.jiexis[id].name){\\n            ifHas = MyJiexi.jiexis.filter(it=>it.name===getVar('dn.jxm_name','')).length>0;\\n            if(ifHas){\\n                return 'toast://待修改的名称重复,不允许保存'\\n            }else{\\n                MyJiexi.jiexis[id].name =  getVar('dn.jxm_name','');\\n                writeFile(jxsRoute,JSON.stringify(MyJiexi));\\n            }\\n        }\\n        back(true);\\n        return 'toast://已保存'\\n    },MyJiexi,id,jxsRoute)\\n});\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"小白模式\",\"path\":\"smallWhite\",\"rule\":\"js:\\n    setPageTitle('道长给小白的关爱');\\nconst {color, small,api} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\nlet fileRoot = api.host+'/hikerule/zyw_data/';\\n// log(fileRoot);\\nlet d = [];\\nvar themeRoute = \\\"hiker://files/cache/MyTheme.json\\\";\\nvar themeOnline = fileRoot+'11';\\nvar oldRoute = \\\"hiker://files/cache/MyParseSet.json\\\";\\nvar oldOnline = fileRoot+'12';\\nvar newRoute = \\\"hiker://files/rules/DuanNian/MyParse.json\\\";\\nvar newOnline = fileRoot+'13';\\nvar jxsRoute = \\\"hiker://files/cache/MyJiexi.json\\\";\\nvar jxOnline = fileRoot+'14';\\nvar dmOnline = fileRoot+'30';\\nvar cjcache = 'hiker://files/cache/Parse_Dn.js';\\nvar x5cache = 'hiker://files/cache/Parse_Dn.html';\\nvar dmPath = \\\"hiker://files/cache/diaomao.txt\\\";\\nd.push({\\n    title:small('你好,小白,即使啥也不会,也可以看明白下面的字吧?'),\\n    desc:'如果还是不会,请删以永治,告辞不谢',\\n    col_type:'text_1',\\n    url:$('#noLoading#').lazyRule(()=>{\\n        return 'toast://据说你不服气,不承认自己是小白?\\\\n点我只是为了宣泄一下你的愤怒?啥也别说了,下去搞!'\\n    })\\n});\\nd.push({\\n    title:small('批量管理界面文件是什么?')+color('不知道,来一份道长的','#5FB878'),\\n    desc:'自动拉取道长的批量管理界面文件，可批量删除和导出解析',\\n    col_type:'text_1',\\n    url:$('确认吗？').confirm(()=>{\\n        let localHtml = 'hiker://files/cache/plscParse.html';\\n        writeFile(localHtml,request('https://gitcode.net/qq_32394351/dr/-/raw/master/dp/batch_delete.html'));\\n        return 'toast://拉取完毕,可返回查看批量管理功能是否正常'\\n    })\\n});\\nd.push({\\n    title:small('单项解析选择界面主题是什么?')+color('不知道,来一份道长的','#5FB878'),\\n    desc:'自动拉取道长的主题配置以及网页插件和静态页面',\\n    col_type:'text_1',\\n    url:$('确认吗?如果你不是小白，总该会提前备份自己主题的吧!\\\\n'+themeRoute).confirm((cjcache,x5cache,themeRoute,themeOnline)=>{\\n        let themeCode = fetch(themeOnline);\\n        if(!/now_theme/.test(themeCode)){\\n            log(themeCode);\\n            return 'toast://失败!与道长服务器通讯错误,估计是网络卡了'\\n        }\\n        let cjFrom = \\\"hiker://page/Parse_Dn.js?rule=MyFieldᴰⁿ\\\";\\n        let x5From = \\\"hiker://page/Parse_Dn.html?rule=MyFieldᴰⁿ\\\";\\n        try {\\n            let cjFile = JSON.parse(fetch(cjFrom)).rule;\\n            let x5File = JSON.parse(fetch(x5From)).rule;\\n            writeFile(cjcache, cjFile);\\n            writeFile(x5cache, x5File);\\n            writeFile(themeRoute, themeCode);\\n            clearVar(\\\"jxOldV\\\");\\n            clearVar(\\\"jxNewV\\\");\\n            refreshPage(false);\\n            return 'toast://主题已成功应用'\\n        }\\n        catch(e){\\n            return 'toast://主题应用失败\\\\n未期望的错误:'+e.message;\\n        }\\n    },cjcache,x5cache,themeRoute,themeOnline)\\n});\\nd.push({\\n    title:small('断插解析及默认列表是什么?')+color('不知道,来一份道长的','#5FB878'),\\n    desc:'自动拉取道长在用的两个MyParse.json文件',\\n    col_type:'text_1',\\n    url:$('确认吗?如果你不是小白，总该会提前备份自己的配置文件吧!\\\\n'+oldRoute+'\\\\n'+newRoute).confirm((oldRoute,oldOnline,newRoute,newOnline)=>{\\n        let oldCode = fetch(oldOnline);\\n        let newCode = fetch(newOnline);\\n        if(!/Parse_Dn\\\\.js/.test(oldCode)||!/Parse_Dn\\\\.js/.test(newCode)){\\n            return 'toast://失败!与道长服务器通讯错误,估计是网络卡了'\\n        }\\n        try {\\n            writeFile(oldRoute, oldCode);\\n            writeFile(newRoute, newCode);\\n            return 'toast://断插解析配置及默认列表已经配置成功'\\n        }\\n        catch(e){\\n            return 'toast://配置应用失败\\\\n未期望的错误:'+e.message;\\n        }\\n    },oldRoute,oldOnline,newRoute,newOnline)\\n});\\nd.push({\\n    title:small('断插解析自动档模式是什么?')+color('不知道,来一份道长的','#5FB878'),\\n    desc:'自动拉取道长在用的MyJiexi.json文件',\\n    col_type:'text_1',\\n    url:$('确认吗?如果你不是小白，总该会提前备份自己的自动档方案吧!\\\\n'+jxsRoute).confirm((jxsRoute,jxOnline)=>{\\n        let jxCode = fetch(jxOnline);\\n        if(!/jiexis/.test(jxCode)){\\n            return 'toast://失败!与道长服务器通讯错误,估计是网络卡了'\\n        }\\n        try {\\n            writeFile(jxsRoute, jxCode);\\n            return 'toast://断插解析配置及默认列表已经配置成功'\\n        }\\n        catch(e){\\n            return 'toast://自动档应用失败\\\\n未期望的错误:'+e.message;\\n        }\\n    },jxsRoute,jxOnline)\\n});\\nd.push({\\n    title:small('吊毛过滤文件是什么?')+color('不知道,来一份道长的','#5FB878'),\\n    desc:'自动拉取道长在用的diaomao.txt文件',\\n    col_type:'text_1',\\n    url:$('确认吗?如果你不是小白，总该会提前备份自己的吊毛过滤文件吧!\\\\n'+dmPath).confirm((dmPath,dmOnline)=>{\\n        let dmCode = fetch(dmOnline);\\n        if(!dmCode||!/mp4|m3u8/.test(dmCode)){\\n            return 'toast://失败!与道长服务器通讯错误,估计是网络卡了'\\n        }\\n        try {\\n            writeFile(dmPath, dmCode);\\n            return 'toast://吊毛过滤文件已配置成功'\\n        }\\n        catch(e){\\n            return 'toast://吊毛过滤文件应用失败\\\\n未期望的错误:'+e.message;\\n        }\\n    },dmPath,dmOnline)\\n});\\nd.push({\\n    title:small('真的啥也不会了,还懒得一个个点?')+color('不知道,来一份道长的','#5FB878'),\\n    desc:'自动拉取道长在用的上述所有文件\\\\n一键搞完直接去支持断插的小程序看视频就行啦',\\n    col_type:'text_1',\\n    url:$('修仙法力无边','确认吗?如果你不是小白，总该会提前备份自己的上述所有文件吧!\\\\n请输入道长修仙法力无边来确认执行此操作').input((cjcache,x5cache,themeRoute,oldRoute,newRoute,jxsRoute,themeOnline,oldOnline,newOnline,jxOnline,dmPath,dmOnline)=>{\\n        if(input!=='道长修仙法力无边'){\\n            return 'toast://本次取消执行'\\n        }\\n        let themeCode = fetch(themeOnline);\\n        if(!/now_theme/.test(themeCode)){\\n            log('themeCode:'+themeCode);\\n            return 'toast://拉主题失败!与道长服务器通讯错误,估计是网络卡了'\\n        }\\n        let cjFrom = \\\"hiker://page/Parse_Dn.js?rule=MyFieldᴰⁿ\\\";\\n        let x5From = \\\"hiker://page/Parse_Dn.html?rule=MyFieldᴰⁿ\\\";\\n        let cjFile = JSON.parse(fetch(cjFrom)).rule;\\n        let x5File = JSON.parse(fetch(x5From)).rule;\\n        let oldCode = fetch(oldOnline);\\n        let newCode = fetch(newOnline);\\n        let dmCode = fetch(dmOnline);\\n        if(!/Parse_Dn\\\\.js/.test(oldCode)||!/Parse_Dn\\\\.js/.test(newCode)){\\n            // log('oldCode:'+oldCode);\\n            // log('newCode:'+newCode);\\n            return 'toast://失败!与道长服务器通讯错误,估计是网络卡了'\\n        }\\n        let jxCode = fetch(jxOnline);\\n        if(!/jiexis/.test(jxCode)){\\n            // log('jxCode:'+jxCode);\\n            return 'toast://失败!与道长服务器通讯错误,估计是网络卡了'\\n        }\\n        try {\\n            writeFile(cjcache, cjFile); // 拉插件\\n            writeFile(x5cache, x5File); //拉网页文件\\n            writeFile(themeRoute, themeCode); //拉主题文件\\n            clearVar(\\\"jxOldV\\\");\\n            clearVar(\\\"jxNewV\\\");\\n            writeFile(oldRoute, oldCode); //拉断插默认选择界面的配置\\n            writeFile(newRoute, newCode); //拉断插内的解析\\n            writeFile(jxsRoute, jxCode); // 拉自动档文件\\n            if(dmCode&&/mp4|m3u8/.test(dmCode)) {//验证吊毛文件合法性\\n                writeFile(dmPath, dmCode); // 拉吊毛过滤文件\\n            }\\n            back(true);\\n            return 'toast://断插解析配置及默认列表已经配置成功'\\n        }\\n        catch(e){\\n            return 'toast://一键模式应用失败\\\\n未期望的错误:'+e.message;\\n        }\\n    },cjcache,x5cache,themeRoute,oldRoute,newRoute,jxsRoute,themeOnline,oldOnline,newOnline,jxOnline,dmPath,dmOnline)\\n});\\nlet descInfo = '主题文件:'+themeRoute+'\\\\n主界面配置:'+oldRoute+'\\\\n嫖到的解析:'+newRoute+'\\\\n自动档解析:'+jxsRoute;\\ndescInfo+='\\\\n主插件:'+cjcache+'\\\\n主配置选择界面文件:'+x5cache+'\\\\n吊毛过滤文件:'+dmPath;\\nd.push({\\n    title:'文件描述:\\\\n'+descInfo,\\n    col_type:'long_text',\\n    extra:{textSize: 13,lineVisible:false}\\n});\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"解析测试\",\"path\":\"jxTest\",\"rule\":\"js:\\n    var items = [];\\nvar json = [{\\n    title: '爱奇艺',\\n    url: 'http://www.iqiyi.com/v_2ga8zts86ys.html',\\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/09/8/110_901f2ef37af2fea25e5d9648f551ce31_con_130x130.png',\\n}, {\\n    title: '优酷',\\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/16/9/110_8ff06e0c237760cd57d2508fd98c8414_con_130x130.png',\\n    url: 'https://v.youku.com/v_show/id_XNDc0MDE1NTk1Mg==.html'\\n}, {\\n    title: '腾讯视频',\\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/15/3/106_3a0d212e17cb95e232ffe155460385cb_con_130x130.png',\\n    url: 'https://v.qq.com/x/cover/mzc00200rmpaf40/n0036l4tntc.html'\\n}, {\\n    title: 'PPTV视频',\\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/28/5/110_a455b2951227040ee62955edcfb89d72_con_130x130.png',\\n    url: 'https://v.pptv.com/show/zVn3dJXt1xV49l4.html'\\n}, {\\n    title: '芒果TV',\\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/15/6/110_1834d296aa5b5666a7d94b1e3479ae64_con_130x130.png',\\n    url: 'http://www.mgtv.com/b/349253/10424300.html'\\n},{\\n    title: '咪咕',\\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/13/1/110_0e6bdee42b08304d158d280b49452bc3_con_130x130.png',\\n    url: 'https://m.miguvideo.com/mgs/msite/prd/detail.html?cid=655838044&mgdbid=&channelId=CAAAB000902015500000000'\\n},{\\n    title: '哔哩哔哩',\\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/27/4/110_8e2e3d88c45025b380e69817d6fb53b1_con_130x130.png',\\n    url: 'https://m.bilibili.com/bangumi/play/ep428993'\\n},{\\n    title: '搜狐视频',\\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/15/9/110_532a51f8431efc377808c1ffff2da36f_con_130x130.png',\\n    url: 'https://m.tv.sohu.com/v7329441.shtml'\\n},{\\n    title: '乐视',\\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/15/8/2_35b5d4373f4bcba28f39486e4f1164d9_con_130x130.png',\\n    url: 'https://m.le.com/vplay_76954333.html?from=ajax'\\n},{\\n    title: '1905电影网',\\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/18/4/110_5f24b1052fed4f7fc73593a8ef27276d_con_130x130.png',\\n    url: 'https://vip.1905.com/m/play/1429725.shtml'\\n},{\\n    title: '风行视频',\\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/16/4/110_6f6af9f99b2629e51f0b0a33cdff1d9e_con_130x130.png',\\n    url: 'http://m.fun.tv/mplay/?mid=95719'\\n},{\\n    title: '西瓜视频',\\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/27/5/110_a86265882ed18c6190566e9ea25f9698_con_130x130.png',\\n    url: 'https://www.ixigua.com/6699356792905794055'\\n}];\\nvar qps = [\\n    {title:'龙腾', url:'LT-1ec3f6754f68586ed7f92c3e995cfca6',pic_url: 'https://lanmeiguojiang.com/tubiao/ke/4.png'},\\n    {title: '人人迷', url:'renrenmi-ab924e11d2d69397',pic_url:'https://lanmeiguojiang.com/tubiao/ke/6.png'},\\n    {title: '五毒', url:'wuduyun-1649431307021',pic_url: 'https://lanmeiguojiang.com/tubiao/ke/30.png'},\\n    {title: '多多', url:'https://m3u8.cache.suoyo.cc/m3u8/202203/8/aaabd92da26774c68850a023153c80f1ae6fa9be.m3u8',pic_url: 'https://lanmeiguojiang.com/tubiao/ke/49.png'},\\n    {title: '融兴', url: 'RongXingVR-4215645581932',pic_url:'https://lanmeiguojiang.com/tubiao/ke/80.png'},\\n    {title: '雪人', url: 'xueren-1646823072',pic_url:'https://lanmeiguojiang.com/tubiao/q/133.png'},\\n    {title: '旋风云', url:'xfy-529e6457953d545f',pic_url: 'https://lanmeiguojiang.com/tubiao/ke/54.png'},\\n    {title: '瑞丰资源',url: 'https://1.ruifenglb.com/play/1644914595.m3u8',pic_url: 'https://lanmeiguojiang.com/tubiao/ke/72.png'}\\n];\\nconst {color, small} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\nconst lsg=$.require(\\\"hiker://page/localStorage?rule=道长仓库Pro\\\");\\nvar timeout = parseInt(lsg.getItem('timeout','5000'));//超时\\nvar nowParse = getItem('Parse','');//getItem的操作千万不要加入循环,当前选择的解析\\nvar dx_mode = getItem('点选','单测');//点选模式\\nvar qp_test = getItem('切片','0');//显示切片\\nif(qp_test==='1'){\\n    json = qps;\\n}else if(qp_test==='2'){\\n    json = json.concat(qps);\\n}\\nitems.push({\\n    title: color('魔断解析测试','#0C0000'),\\n    desc:'单接口多类正版|单正版多接口 测试 '+'🕒'+timeout,\\n    url: $(timeout,'请输入解析超时毫秒').input(()=>{\\n        if(!parseInt(input)){\\n            return 'toast://超时设置错误，拒绝保存'\\n        }\\n        const lsg=$.require(\\\"hiker://page/localStorage?rule=道长仓库Pro\\\");\\n        lsg.setItem('timeout',input||'5000');\\n        refreshPage(false);\\n        return 'toast://已设置解析超时毫秒:'+input||'5000';\\n    }),\\n    col_type: 'text_center_1',\\n    extra:{\\n        lineVisible:false\\n    }\\n});\\nitems.push({\\n    title:'使用说明',\\n    col_type:'text_center_1',\\n    url:$('hiker://empty#noRecordHistory##noHistory#').rule((color)=>{\\n        let d=[];\\n        d.push({\\n            title:color('相信自己，你不需要说明','grey'),\\n            col_type:'text_1',\\n            url:'hiker://empty',\\n            extra:{\\n                lineVisible:false\\n            }\\n        });\\n        let note='想我写教程？没门！';\\n        d.push({\\n            title:note,\\n            col_type:'rich_text'\\n        });\\n        setResult(d);\\n    },color),\\n    extra:{\\n        lineVisible:true\\n    }\\n});\\nitems.push({\\n    col_type:\\\"blank_block\\\",\\n});\\nitems.push({\\n    title:color('🏠️主程序','#ff0000'),\\n    url: \\\"hiker://home@MyFieldᴰⁿ\\\",\\n    col_type: 'scroll_button'\\n});\\nitems.push({\\n    title:color('🎨线路配置','#fa8c35'),\\n    url: \\\"hiker://page/Route?rule=MyFieldᴰⁿ&type=设置#noHistory#\\\",\\n    col_type: 'scroll_button'\\n});\\nitems.push({\\n    title:color('🎯解析管理','#3eede7'),\\n    url: \\\"hiker://page/Route?rule=MyFieldᴰⁿ&type=编辑#noHistory#\\\",\\n    col_type: 'scroll_button'\\n});\\nitems.push({\\n    title:color('☢️批量删除','#801dae'),\\n    url: getPath('hiker://files/cache/plscParse.html'),\\n    col_type: 'scroll_button'\\n});\\nitems.push({\\n    title:color('🔠备胎管理','#0eb83a'),\\n    url: \\\"hiker://page/Route?rule=MyFieldᴰⁿ&type=解析#noRecordHistory#\\\",\\n    col_type: 'scroll_button'\\n});\\nlet qp_title = '💿切片测试';\\nif(qp_test==='1'){\\n    qp_title =  color(qp_title,'#6bc8d0')\\n}else if(qp_test==='2'){\\n    qp_title =  color(qp_title,'#6ba6d0')\\n}\\nitems.push({\\n    title:qp_title,\\n    url: $('#noLoading#').lazyRule((color)=>{\\n        let modes = ['0','1','2'];\\n        let qp_test = getItem('切片','0');\\n        let idex = modes.indexOf(qp_test);\\n        let nextIdex = idex < modes.length -1?idex+1:0;\\n        qp_test=modes[nextIdex];\\n        setItem('切片',qp_test);\\n        // updateItem('qp_test',{\\n        //     title:qp_test==='1'?color('💿切片测试','#6bc8d0'):'💿切片测试'\\n        // });\\n        refreshPage(false);\\n        return 'hiker://empty'\\n    },color),\\n    col_type: 'scroll_button',\\n    extra:{\\n        id:'qp_test'\\n    }\\n});\\nitems.push({\\n    title:'⚙点选模式:'+dx_mode,\\n    col_type:'text_2',\\n    url:$('#noLoading#').lazyRule(()=>{\\n        let dx_mode = getItem('点选','单测');\\n        dx_mode=(dx_mode==='单测'?'多测':'单测');\\n        setItem('点选',dx_mode);\\n        updateItem('dx_mode',{\\n            title:'⚙点选模式:'+dx_mode\\n        });\\n        return 'hiker://empty'\\n    }),\\n    extra:{\\n        id:'dx_mode'\\n    }\\n});\\nlet dx_test = '❤️解析多选测试';\\nitems.push({\\n    title:dx_test,\\n    col_type:'text_2',\\n    url:$('hiker://empty#noRecordHistory##noHistory#').rule((dx_test,color)=>{\\n        setPageTitle(dx_test);\\n        addListener('onClose', $.toString(() => {\\n            refreshPage(false);//刷新魔断主页面\\n        }));\\n        d=[];\\n        $.require(\\\"hiker://page/jxItem?rule=MyFieldᴰⁿ\\\").jxList();\\n        jxs=d.filter(it=>it.col_type==='text_2').map(it=>pdfh(it.title,'font,-1&&Text'));\\n        let data = storage0.getMyVar('jx_selected')||[];\\n        let dx_filter = getItem('dx_filter','全部');\\n        if(dx_filter === '已选'){\\n            jxs = jxs.filter(it=>data.includes(it));\\n        }else if(dx_filter=== '未选'){\\n            jxs = jxs.filter(it=>!data.includes(it));\\n        }\\n        d=jxs.map((it)=>{\\n            return {\\n                title:(Array.isArray(data)&&data.includes(it))?color(it,'#12b668'):it,\\n                // url:'toast://功能开发中',\\n                url:$('#noLoading#').lazyRule((it,color)=>{\\n                    let data = storage0.getMyVar('jx_selected');\\n                    if(Array.isArray(data)){\\n                        if(data.includes(it)){\\n                            log('包含:'+it);\\n                            data.splice(data.indexOf(it),1);\\n                        }else{\\n                            data.push(it)\\n                        }\\n                        storage0.putMyVar('jx_selected', data)\\n                    }else{\\n                        storage0.putMyVar('jx_selected', [it])\\n                    }\\n                    if(storage0.getMyVar('jx_selected').includes(it)){\\n                        updateItem(it,{\\n                            title:color(it,'#12b668')\\n                        })\\n                    }else{\\n                        updateItem(it,{\\n                            title:it\\n                        })\\n                    }\\n                    return 'hiker://empty'\\n                },it,color),\\n                col_type:'text_3',\\n                extra:{\\n                    id:it\\n                }\\n            }\\n        });\\n        let op=[];\\n        op.push({\\n            title:'全选',\\n            url:$('#noLoading#').lazyRule((jxs,color)=>{\\n                storage0.putMyVar('jx_selected', jxs);\\n                jxs.forEach(it=>{\\n                    updateItem({title: color(it,'#12b668'), extra: {id: it}});\\n                });\\n                return 'hiker://empty'\\n            },jxs,color),\\n            col_type:'scroll_button'\\n        });\\n        op.push({\\n            title:'全不选',\\n            url:$('#noLoading#').lazyRule((jxs)=>{\\n                storage0.putMyVar('jx_selected', []);\\n                jxs.forEach(it=>{\\n                    updateItem({title: it, extra: {id: it}});\\n                });\\n                return 'hiker://empty'\\n            },jxs),\\n            col_type:'scroll_button'\\n        });\\n        op.push({\\n            title:'反选',\\n            url:$('#noLoading#').lazyRule((jxs,color)=>{\\n                let oldSel = storage0.getMyVar('jx_selected', []);\\n                function getDifferentData(arrA, arrB) {\\n                    return arrA.concat(arrB).filter(function (v, i, arr) {\\n                        return arr.indexOf(v) === arr.lastIndexOf(v);\\n                    });\\n                }\\n                let newSel = getDifferentData(jxs,oldSel);\\n                storage0.putMyVar('jx_selected', newSel);\\n                oldSel.forEach(it=>{\\n                    updateItem({title: it, extra: {id: it}});\\n                });\\n                newSel.forEach(it=>{\\n                    updateItem({title: color(it,'#12b668'), extra: {id: it}});\\n                });\\n                return 'hiker://empty'\\n            },jxs,color),\\n            col_type:'scroll_button'\\n        });\\n        op.push({\\n            title:'删除',\\n            url:$('#noLoading#').lazyRule(()=>{\\n                let sel = storage0.getMyVar('jx_selected', []);\\n                if(sel.length < 1){\\n                    return 'toast://啥都没选，删除个鸡毛~'\\n                }\\n                return $('确认删除已选择的:'+sel[0]+'等'+sel.length+'条解析?').confirm((sel)=>{\\n                    var parseRoute = getVar('parseRoute');\\n                    eval('var json =' + fetch(parseRoute));\\n                    for(let name in sel){\\n                        if (json.codes.hasOwnProperty(name)) {\\n                            delete json.codes[name];\\n                        }\\n                    }\\n                    json.title = json.title.filter(it=>!sel.includes(it)); // 筛选没有被删除的标题\\n                    writeFile(parseRoute, $.stringify(json));\\n                    storage0.putMyVar('jx_selected', []);//删除完了清空选中项目\\n                    refreshPage(false);\\n                    return \\\"toast://已将〖\\\" + sel[0] + \\\"〗等\\\"+sel.length+\\\"条解析删除\\\";\\n                },sel)\\n            }),\\n            col_type:'scroll_button'\\n        });\\n        op.push({\\n            title:'操作|筛选 '+color(jxs.length,'#ff7000'),\\n            url:'toast://前面按钮是操作，后面按钮是筛选',\\n            col_type:'scroll_button'\\n        });\\n        op.push({\\n            title:dx_filter==='全部'?color('全部','#12b668'):'全部',\\n            url:$('#noLoading#').lazyRule(()=>{\\n                setItem('dx_filter','全部');\\n                refreshPage(false);\\n                return 'hiker://empty'\\n            }),\\n            col_type:'scroll_button'\\n        });\\n        op.push({\\n            title:dx_filter==='已选'?color('已选','#12b668'):'已选',\\n            url:$('#noLoading#').lazyRule(()=>{\\n                setItem('dx_filter','已选');\\n                refreshPage(false);\\n                return 'hiker://empty'\\n            }),\\n            col_type:'scroll_button'\\n        });\\n        op.push({\\n            title:dx_filter==='未选'?color('未选','#12b668'):'未选',\\n            url:$('#noLoading#').lazyRule(()=>{\\n                setItem('dx_filter','未选');\\n                refreshPage(false);\\n                return 'hiker://empty'\\n            }),\\n            col_type:'scroll_button'\\n        });\\n        d=op.concat(d);\\n        setResult(d);\\n    },dx_test,color)\\n});\\nfunction sortByKey(array, key, order) {//对象数组按某个键值排序\\n    return array.sort(function(a, b) {\\n        var x = parseInt(a[key].match(/(\\\\d+)/)[1]);//修复大于10出问题\\n        var y = parseInt(b[key].match(/(\\\\d+)/)[1]);\\n        if (order) {\\n            return ((x < y) ? -1 : ((x > y) ? 1 : 0))\\n        } else {\\n            return ((x < y) ? ((x > y) ? 1 : 0) : -1)\\n        }\\n    })\\n}\\nitems.push({\\n    title: '🛠一键测试已选接口：'+nowParse,\\n    //url: 'toast://这是接口',\\n    url:$().lazyRule((json,nowParse,timeout,sortByKey)=>{\\n        if(!getItem('Parse','')){\\n            return 'toast://避免资源浪费，请先在下方选一个接口再进行测试'\\n        }\\n        var count = json.length; //设置任务数量\\n        log('魔断开启多任务解析,任务数量:'+count);\\n        var task = function(obj) {\\n            eval('var config_dp =' + fetch(getVar('oldConfig')));\\n            eval(fetch(config_dp.cj));\\n            return aytmParse(obj.vipUrl,obj.name,obj.timeout);\\n        };\\n        var parseRet = []; //解析结果列表\\n        let tasks = json.map((it,idex)=>{\\n            return {\\n                func: task,\\n                param: {\\n                    //name:it.title,\\n                    name:nowParse,\\n                    type:it.title,\\n                    // rule:it.rule,\\n                    vipUrl: it.url,\\n                    timeout: timeout\\n                },\\n                id: \\\"task\\\"+idex\\n            }\\n        });\\n        showLoading(\\\"魔断并发解析中，剩余待测:\\\"+count);\\n        be(tasks,{\\n            func: function(obj, id, error,ret) {\\n                log(\\\"监听到任务\\\" + id+'已结束,error:'+error+',ret:'+ret);\\n                ret = ret||'';\\n                error=error||'';\\n                parseRet.push({\\n                    task:id,\\n                    ret:ret,\\n                    error:error,\\n                    name:tasks.filter(it=>it.id===id)[0].param.type\\n                });\\n                count -= 1; //完成了任务，任务数量-1\\n                //log(obj);\\n                if (count > 0) {\\n                    showLoading(\\\"魔断并发解析中，剩余待测:\\\" + count)\\n                } else {\\n                    hideLoading();\\n                }\\n            },\\n            param: {//传到监听函数的obj参数里\\n                hi: \\\"ccc\\\",\\n            }\\n        });//执行多任务\\n        //log(\\\"多任务执行结果数:\\\"+parseRet.length);\\n        parseRet=sortByKey(parseRet,'task',true);//升序排列\\n        // log(parseRet.map(it=>it.task));\\n        return $('hiker://empty#noRecordHistory##noHistory#').rule((parseRet)=>{\\n            setPageTitle(getItem('Parse')+'解析报告');\\n            const {isVideo} = $.require('hiker://page/globalParse?rule=道长仓库Pro');\\n            const {color, small} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\n            let d=[];\\n            let show_mode = getItem('show_mode','详细');\\n            let col_type = show_mode==='详细'?'text_1':'text_3';\\n            d.push({\\n                title:'显示模式:'+color(show_mode,'#fa8c35'),\\n                col_type:'scroll_button',\\n                url:$('#noLoading#').lazyRule((color,cnt)=>{\\n                    let show_mode = getItem('show_mode','详细');\\n                    show_mode = show_mode==='详细'?'精简':'详细';\\n                    setItem('show_mode',show_mode);\\n                    updateItem('show_mode',{\\n                        title:'显示模式:'+color(show_mode,'#fa8c35')\\n                    });\\n                    let col_type = show_mode==='详细'?'text_1':'text_3';\\n                    for(let i=0;i<cnt;i++){\\n                        updateItem('show_ret_'+i,{\\n                            col_type:col_type\\n                        });\\n                    }\\n                    return 'hiker://empty'\\n                },color,parseRet.length),\\n                extra:{\\n                    id:'show_mode'\\n                }\\n            });\\n            parseRet.forEach((it,idx)=>{\\n                let title=it.name;\\n                if(it.ret&&!it.ret.includes('undefined')&&(/#isVideo=true#/.test(it.ret)||isVideo(it.ret))){\\n                    title=color(title,'#12b668')\\n                }\\n                let desc=(it.ret||it.error).substr(0,60);\\n                d.push({\\n                    title:title,\\n                    desc:small(desc),\\n                    col_type:col_type,\\n                    url:it.ret,\\n                    extra:{\\n                        ret:it.ret||it.error,\\n                        id:'show_ret_'+idx\\n                    }\\n                });\\n            });\\n            setResult(d);\\n        },parseRet)\\n    },json,nowParse,timeout,sortByKey),\\n    col_type: 'text_center_1',\\n    extra:{\\n        lineVisible:false\\n    }\\n});\\n/*\\nvar parseRoute = 'hiker://files/rules/DuanNian/MyParse.json';\\nvar MyParseS = {};\\neval('var parseFile =' + fetch(parseRoute));\\nMyParseS = Object.keys(parseFile.codes);\\nMyParseS.reverse();\\n*/\\nvar d=[];\\n$.require(\\\"hiker://page/jxItem?rule=MyFieldᴰⁿ\\\").jxList();\\nd=d.filter(it=>it.col_type==='text_2').map(it=>pdfh(it.title,'font,-1&&Text'));\\nMyParseS=d;\\n\\nfor (let i in MyParseS) {\\n    if (!/defaultParse/.test(MyParseS[i])) {\\n        let title =MyParseS[i];\\n        items.push({\\n            title: nowParse === title?color(title,'#12b668'):title,\\n            url:$('#noLoading#').lazyRule((ipt)=>{\\n                setItem('Parse',ipt);\\n                refreshPage();\\n                return 'toast://已选接口'+ipt;\\n            },title) ,\\n            col_type: 'scroll_button'\\n        });\\n    }\\n}\\nlet tag='';\\nfor (let i in json) {\\n    let title = json[i].title;\\n    let zurl=json[i].url;\\n    let zpic = json[i].pic_url;\\n    if(getMyVar('zdy') === zurl){\\n        tag=title;\\n        title='⛳'+title;\\n    }\\n    items.push({\\n        title:title,\\n        url: $('#noLoading#').lazyRule((zurl,nowParse,timeout,vipObj) => {\\n            if(getMyVar('zdy')!==zurl){\\n                putMyVar('zdy', zurl);\\n                refreshPage(false);\\n            }\\n            var dx_mode = getItem('点选','单测');//点选模式\\n            if(dx_mode==='单测'){\\n                showLoading('魔断动态解析中,请稍等...');\\n                eval('var config_dp =' + fetch(getVar('oldConfig')));\\n                eval(fetch(config_dp.cj));\\n                return aytmParse(zurl,nowParse,timeout);\\n            }else{\\n                let data = storage0.getMyVar('jx_selected')||[];\\n                if(data.length>32){\\n                    return $('你所选择待测试的解析数共计:'+data.length+'个，超出了推荐最大数32,性能可能极差,是否继续?').confirm((data,vipObj,timeout)=>{\\n                        const {test_report} = $.require('hiker://page/test_report');\\n                        return test_report(data,vipObj,timeout)\\n                    },data,vipObj,timeout)\\n                }else{\\n                    const {test_report} = $.require('hiker://page/test_report');\\n                    return test_report(data,vipObj,timeout)\\n                }\\n            }\\n        },zurl,nowParse,timeout,json[i]),\\n        pic_url:zpic,\\n        col_type: 'icon_4'\\n    });\\n}\\naddListener('onClose', $.toString(() => {\\n    clearVar(\\\"zdy\\\");\\n}));\\nitems.push({\\n    title:'测试'+tag,\\n    col_type: 'input',\\n    url:$.toString((nowParse,timeout)=>{\\n        eval(\\\"var config =\\\" + fetch(\\\"hiker://files/cache/MyParseSet.json\\\"));\\n        eval(fetch(config.cj));\\n        // eval(fetch('hiker://files/cache/Parse_Dn.js', {}));\\n        return aytmParse(getMyVar('zdy'), nowParse,timeout);\\n    },nowParse,timeout),\\n    desc: '请输解析地址',\\n    extra: {\\n        titleVisible: true,\\n        defaultValue: getMyVar('zdy', json[0].url) || \\\"\\\",\\n        onChange: 'putMyVar(\\\"zdy\\\",input)',\\n        textSize: 13,\\n        type: \\\"textarea\\\",\\n        height: 2\\n    }\\n});\\nsetResult(items);\"},{\"name\":\"解析报告\",\"path\":\"test_report\",\"rule\":\"function sortByKey(array, key, order) {//对象数组按某个键值排序\\n    return array.sort(function(a, b) {\\n        var x = parseInt(a[key].match(/(\\\\d+)/)[1]);//修复大于10出问题\\n        var y = parseInt(b[key].match(/(\\\\d+)/)[1]);\\n        if (order) {\\n            return ((x < y) ? -1 : ((x > y) ? 1 : 0))\\n        } else {\\n            return ((x < y) ? ((x > y) ? 1 : 0) : -1)\\n        }\\n    })\\n}\\nfunction test_report(jxs,vipObj,timeout){//单正版多解析测试报告\\n    jxs = jxs||[];//解析标题列表\\n    let vipUrl = vipObj.url;\\n    let vipName = vipObj.title;\\n    if(jxs.length<1){\\n    return 'toast://解析列表里无解析，测个鸡毛'\\n    }\\n    var count = jxs.length; //设置任务数量\\n    log('魔断开启多任务解析,任务数量:'+count);\\n    var task = function(obj) {\\n        eval('var config_dp =' + fetch(getVar('oldConfig')));\\n        eval(fetch(config_dp.cj));\\n        return aytmParse(vipUrl,obj.name,timeout);\\n    };\\n    var parseRet = []; //解析结果列表\\n    let tasks = jxs.map((it,idex)=>{\\n        return {\\n            func: task,\\n            param: {\\n                name:it,\\n            },\\n            id: \\\"task\\\"+idex\\n        }\\n    });\\n    showLoading(\\\"魔断并发解析中，剩余待测:\\\"+count);\\n    be(tasks,{\\n        func: function(obj, id, error,ret) {\\n            log(\\\"监听到任务\\\" + id+'已结束,error:'+error+',ret:'+ret);\\n            ret = ret||'';\\n            error=error||'';\\n            parseRet.push({\\n                task:id,\\n                ret:ret,\\n                error:error,\\n                name:tasks.filter(it=>it.id===id)[0].param.name\\n            });\\n            count -= 1; //完成了任务，任务数量-1\\n            //log(obj);\\n            if (count > 0) {\\n                showLoading(\\\"魔断并发解析中，剩余待测:\\\" + count)\\n            } else {\\n                hideLoading();\\n            }\\n        },\\n        param: {//传到监听函数的obj参数里\\n            hi: \\\"ccc\\\",\\n        }\\n    });//执行多任务\\n    //log(\\\"多任务执行结果数:\\\"+parseRet.length);\\n    parseRet=sortByKey(parseRet,'task',true);//升序排列\\n    // log(parseRet.map(it=>it.task));\\n    return $('hiker://empty#noRecordHistory##noHistory#').rule((vipName,parseRet)=> {\\n        setPageTitle(vipName + '解析报告');\\n        const {isVideo} = $.require('hiker://page/globalParse?rule=道长仓库Pro');\\n        const {color, small} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\n        let d = [];\\n        let show_mode = getItem('show_mode', '详细');\\n        let col_type = show_mode === '详细' ? 'text_1' : 'text_3';\\n        d.push({\\n            title: '显示模式:' + color(show_mode, '#fa8c35'),\\n            col_type: 'scroll_button',\\n            url: $('#noLoading#').lazyRule((color, cnt) => {\\n                let show_mode = getItem('show_mode', '详细');\\n                show_mode = show_mode === '详细' ? '精简' : '详细';\\n                setItem('show_mode', show_mode);\\n                updateItem('show_mode', {\\n                    title: '显示模式:' + color(show_mode, '#fa8c35')\\n                });\\n                let col_type = show_mode === '详细' ? 'text_1' : 'text_3';\\n                for (let i = 0; i < cnt; i++) {\\n                    updateItem('show_ret_' + i, {\\n                        col_type: col_type\\n                    });\\n                }\\n                return 'hiker://empty'\\n            }, color, parseRet.length),\\n            extra: {\\n                id: 'show_mode'\\n            }\\n        });\\n        parseRet.forEach((it, idx) => {\\n            let title = it.name;\\n            if (it.ret && !it.ret.includes('undefined') && (/#isVideo=true#/.test(it.ret) || isVideo(it.ret))) {\\n                title = color(title, '#12b668')\\n            }\\n            let desc = (it.ret || it.error).substr(0, 60);\\n            d.push({\\n                title: title,\\n                desc: small(desc),\\n                col_type: col_type,\\n                url: it.ret,\\n                extra: {\\n                    ret: it.ret || it.error,\\n                    id: 'show_ret_' + idx\\n                }\\n            });\\n        });\\n        setResult(d);\\n    },vipName,parseRet)\\n}\\n\\n$.exports.sortByKey=sortByKey;\\n$.exports.test_report=test_report;\"}]","proxy":"","icon":"https://lanmeiguojiang.com/tubiao/movie/4.svg"},{"last_chapter_rule":"","title":"DR模板","author":"道长","version":16,"type":"tool","url":"hiker://empty","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"模板","year_url":"","find_rule":"js:\nrequire('https://gitcode.net/qq_32394351/dr/-/raw/master/js/dr模板.js');","searchFind":"","search_url":"","group":"工具","detail_col_type":"movie_3","detail_find_rule":"js:\nrequire(config.自动匹配);\n//香免();\n//自动二级(lazy);\n自动二级();","sdetail_col_type":"movie_3","sdetail_find_rule":"*","ua":"mobile","preRule":"require('https://gitcode.net/qq_32394351/dr/-/raw/master/js/预处理.js');","pages":"[{\"col_type\":\"movie_3\",\"name\":\"规则\",\"path\":\"ruleGen\",\"rule\":\"$.exports.rule={\\\"firstHeader\\\":\\\"class\\\",\\\"last_chapter_rule\\\":\\\"\\\",\\\"title\\\":\\\"蓝莓影视B\\\",\\\"author\\\":\\\"道长\\\",\\\"url\\\":\\\"hiker://empty##https://lanmeiguojiang.com/ys\\\",\\\"version\\\":1,\\\"col_type\\\":\\\"movie_3_marquee\\\",\\\"class_name\\\":\\\"\\\",\\\"type\\\":\\\"video\\\",\\\"class_url\\\":\\\"\\\",\\\"area_name\\\":\\\"\\\",\\\"area_url\\\":\\\"\\\",\\\"sort_name\\\":\\\"\\\",\\\"year_name\\\":\\\"\\\",\\\"sort_url\\\":\\\"影视\\\",\\\"year_url\\\":\\\"\\\",\\\"find_rule\\\":\\\"js:\\\\nrequire(config.模板);\\\\n依赖检测();\\\\n一级书签('$detailUrl','$system');\\\\n//一级书签('$detailUrl',true);\\\",\\\"search_url\\\":\\\"/ys/index.php/vod/search/page/fypage/wd/**.html\\\",\\\"group\\\":\\\"#️⃣道长DR\\\",\\\"searchFind\\\":\\\"js:\\\\nrequire(config.自动匹配);\\\\n自动搜索('$sflag');\\\",\\\"detail_col_type\\\":\\\"movie_1\\\",\\\"detail_find_rule\\\":\\\"js:\\\\nrequire(config.自动匹配);\\\\nrequireCache('https://lanmeiguojiang.com/lmysdm/lazy.js',24); \\\\n自动二级(lazy);\\\\n//自动二级();\\\",\\\"sdetail_col_type\\\":\\\"movie_1\\\",\\\"sdetail_find_rule\\\":\\\"*\\\",\\\"ua\\\":\\\"mobile\\\",\\\"preRule\\\":\\\"var ua='$ua';\\\\nrequire('https://gitcode.net/qq_32394351/dr/-/raw/master/js/预处理.js');\\\",\\\"pages\\\":\\\"[]\\\",\\\"icon\\\":\\\"https://lanmeiguojiang.com/tubiao/ke/94.png\\\"}\"}]","proxy":"https://hjdhnx.coding.net/p/hiker/d/dr/git/raw/master/js/=>https://gitcode.net/qq_32394351/dr/-/raw/master/js/","icon":"https://lanmeiguojiang.com/tubiao/more/328.png"},{"last_chapter_rule":"","title":"初学者写源工具","author":"","version":0,"type":"tool","url":"hiker://empty##","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar res = {};\nvar items = [];\nvar img = 'https://bing.img.run/1366x768.php';\nitems.push({\n    img: img,\n    url: img + \"#.jpg\",\n    desc: '0',\n    col_type: 'card_pic_1'\n});\n\nitems.push({\n    title: \"““””<h4>【初学者教程&模板&写源工具收集】</h4>\" + '<span style=\"color: grey\">欢迎各位小可爱添加或提建议</span>',\n    col_type: \"text_center_1\",\n    url: \"toast://欢迎使用\"\n});\n\nvar Title = ['海阔组件展示&复制', '请求测试『Joe』', 'XYQ分类生成器『香雅情』', 'Json分类生成器『香雅情』']\nvar Page = ['ZJ', 'Home', 'XYQ', 'Json']\n\nTitle.forEach(function(data, id) {\n    items.push({\n        title: data,\n        url: \"hiker://page/\"+Page[id]+\"#noHistory##noRecordHistory#\",\n        col_type: \"text_2\",\n        extra: {\n            newWindow: true,\n            windowId: MY_RULE.title\n        }\n    });\n})\n\nconst Color = \"#19B89D\";\n//可复制这一段加入你添加/修改了什么\nvar des_desc = '<h1 style=\"text-align: center;\">🐾更新[1216]</h1>' +\n    '<<blockquote><font color=\"red\">①加入组件展示|写源工具🗜</br>②加入普通一级模板<br></<blockquote>'\n\n\n//下面不用动\nitems.push({\n    title: '更新详情 <small><small><span style=\"color:#19B89D\">展开></span></small></small>',\n    img: \"https://lanmeiguojiang.com/tubiao/more/197.png\",\n    url: $(\"#noLoading#\").lazyRule((jjid, decid, des_desc) => {\n        if (getMyVar(\"jjs\", \"收起\") == \"收起\") {\n            putMyVar(\"jjs\", \"展开\");\n\n            updateItem({\n                extra: {\n                    id: jjid\n                },\n                title: '更新详情 <small><small><span style=\"color:#19B89D\">收起></span></small></small>'\n            })\n\n            updateItem({\n                extra: {\n                    textSize: 14,\n                    lineSpacing: 3,\n                    id: decid\n                },\n                title: '<span style=\"color:#808080\">' + des_desc + '</span>'\n            })\n            return \"hiker://empty\"\n        } else {\n            putMyVar(\"jjs\", \"收起\");\n\n            updateItem({\n                extra: {\n                    id: jjid\n                },\n                title: '更新详情<small><small><span style=\"color:#19B89D\">展开></span></small></small>'\n            })\n\n            updateItem({\n                extra: {\n                    textSize: 14,\n                    lineSpacing: 3,\n                    id: decid\n                },\n                title: '<span style=\"color:#808080\">' + des_desc.substr(0, 150)\n            })\n            return \"hiker://empty\"\n        }\n\n    }, MY_RULE + \"_jjid\", MY_RULE + \"_decid\", des_desc),\n    col_type: \"avatar\",\n    extra: {\n        id: MY_RULE + \"_jjid\"\n    }\n});\n\nitems.push({\n    title: '<span style=\"color:#808080\">' + des_desc.substr(0, 150),\n    col_type: \"rich_text\",\n    extra: {\n        textSize: 14,\n        lineSpacing: 3,\n        id: MY_RULE + \"_decid\"\n    }\n});\n\nres.data = items;\nsetHomeResult(res);","searchFind":"","search_url":"","group":"工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"普通一级\",\"path\":\"PY\",\"rule\":\"js:\\nvar d = [];\\nvar code = getResCode();\\n//定位填在\\\"\\\"或''中，不可重复使用同一种符号\\npdfa(code, 列表定位).forEach(function(zdata) {\\n        d.push({\\n            title: pdfh(zdata, 标题定位),\\n            url: pd(zdata, 链接定位),\\n            pic_url: pd(zdata, 图片定位),\\n            //如图片需重定向可加Referer\\n            //pic_url: pd(zdata, 图片定位)+\\\"@Referer=\\\"+MY_HOME,\\n            desc: pdfh(zdata, 详情定位),\\n            col_type: \\\"movie_3\\\"//显示样式\\n        });\\n    });\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"组件展示\",\"path\":\"ZJ\",\"rule\":\"js:\\nlet d = [];\\nd.push({\\n    title: '点击即复制',\\n    col_type: 'text_center_1',\\n    url: 'toast://点我干嘛？',\\n    desc:'相应的样式名',\\n})\\nd.push({\\n    title: 'text_1',\\n    col_type: 'text_1',\\n    url: 'copy://text_1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'text_2',\\n    col_type: 'text_2',\\n    url: 'copy://text_2',\\n    desc:'',\\n})\\nd.push({\\n    title: 'text_3',\\n    col_type: 'text_3',\\n    url: 'copy://text_3',\\n    desc:'',\\n})\\nd.push({\\n    title: 'text_4',\\n    col_type: 'text_4',\\n    url: 'copy://text_4',\\n    desc:'',\\n})\\nd.push({\\n    title: 'text_5',\\n    col_type: 'text_5',\\n    url: 'copy://text_5',\\n    desc:'',\\n})\\nd.push({\\n    title: 'text_center_1',\\n    col_type: 'text_center_1',\\n    url: 'copy://text_center_1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'long_text',\\n    col_type: 'text_1',\\n    url: 'copy://long_text',\\n    desc:'',\\n})\\nd.push({\\n    title: 'rich_text',\\n    col_type: 'text_1',\\n    url: 'copy://rich_text',\\n    desc:'',\\n})\\nd.push({\\n    title: 'text_icon',\\n    col_type: 'text_icon',\\n    url: 'copy://text_icon',\\n    desc:'',\\n})\\nd.push({\\n    title: 'movie_1',\\n    col_type: 'movie_1',\\n    url: 'copy://movie_1',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'movie_1_left_pic',\\n    col_type: 'movie_1_left_pic',\\n    url: 'copy://movie_1_left_pic',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'movie_1_vertical_pic',\\n    col_type: 'movie_1_vertical_pic',\\n    url: 'copy://movie_1_vertical_pic',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'movie_1_vertical_pic_blur',\\n    col_type: 'movie_1_vertical_pic_blur',\\n    url: 'copy://movie_1_vertical_pic_blur',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'movie_2',\\n    col_type: 'movie_2',\\n    url: 'copy://movie_2',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'movie_3',\\n    col_type: 'movie_3',\\n    url: 'copy://movie_3',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'movie_3_marquee',\\n    col_type: 'movie_3_marquee',\\n    url: 'copy://movie_3_marquee',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'pic_1',\\n    col_type: 'pic_1',\\n    url: 'copy://pic_1',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'pic_1_full',\\n    col_type: 'text_1',\\n    url: 'copy://pic_1_full',\\n    desc:'',\\n})\\nd.push({\\n    title: 'pic_1_full',\\n    col_type: 'pic_1_full',\\n    url: 'copy://pic_1_full',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'pic_1_card',\\n    col_type: 'pic_1_card',\\n    url: 'copy://pic_1_card',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'pic_2',\\n    col_type: 'pic_2',\\n    url: 'copy://pic_2',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'pic_2_card',\\n    col_type: 'pic_2_card',\\n    url: 'copy://pic_2_card',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'pic_3',\\n    col_type: 'text_1',\\n    url: 'copy://pic_3',\\n    desc:'',\\n})\\nd.push({\\n    title: 'pic_3',\\n    col_type: 'pic_3',\\n    url: 'copy://pic_3',\\n    img: 'hiker://images/home_pic1',\\n    desc:'pic_3',\\n})\\nd.push({\\n    title: 'pic_3_square',\\n    col_type: 'text_1',\\n    url: 'copy://pic_3_square',\\n    desc:'',\\n})\\nd.push({\\n    title: 'pic_3_square',\\n    col_type: 'pic_3_square',\\n    url: 'copy://pic_3_square',\\n    img: 'hiker://images/home_pic1',\\n    desc:'pic_3_square',\\n})\\nd.push({\\n    title: 'icon_1_search',\\n    col_type: 'icon_1_search',\\n    url: 'copy://icon_1_search',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'icon_2',\\n    col_type: 'icon_2',\\n    url: 'copy://icon_2',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'icon_2_round',\\n    col_type: 'icon_2_round',\\n    url: 'copy://icon_2_round',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'icon_small_3',\\n    col_type: 'icon_small_3',\\n    url: 'copy://icon_small_3',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\n\\nd.push({\\n    title: 'icon_4',\\n    col_type: 'icon_4',\\n    url: 'copy://icon_4',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'icon_4_card',\\n    col_type: 'icon_4_card',\\n    url: 'copy://icon_4_card',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'icon_small_4',\\n    col_type: 'icon_small_4',\\n    url: 'copy://icon_small_4',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'icon_round_4',\\n    col_type: 'icon_round_4',\\n    url: 'copy://icon_round_4',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'icon_round_small_4',\\n    col_type: 'icon_round_small_4',\\n    url: 'copy://icon_round_small_4',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\n\\nd.push({\\n    title: 'icon_5',\\n    col_type: 'icon_5',\\n    url: 'copy://icon_5',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'input',\\n    col_type: 'input',\\n    url: 'copy://input',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'avatar',\\n    col_type: 'avatar',\\n    url: 'copy://avatar',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'x5_webview_single',\\n    col_type: 'text_center_1',\\n    url: 'copy://x5_webview_single',\\n    desc:'',\\n})\\nd.push({\\n    title: 'flex_button',\\n    col_type: 'flex_button',\\n    url: 'copy://flex_button',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'scroll_button',\\n    col_type: 'scroll_button',\\n    url: 'copy://scroll_button',\\n    desc:'',\\n})\\nd.push({\\n    title: 'line分割线细',\\n    col_type: 'flex_button',\\n    url: 'copy://line',\\n    desc:'',\\n})\\nd.push({\\n    title: '',\\n    col_type: 'line',\\n    url: '',\\n    desc:'',\\n})\\nd.push({\\n    title: 'line_blank分割线粗',\\n    col_type: 'flex_button',\\n    url: 'copy://line_blank',\\n    desc:'',\\n})\\nd.push({\\n    title: '',\\n    col_type: 'line_blank',\\n    url: '',\\n    desc:'',\\n})\\nd.push({\\n    title: 'blank_block',\\n    col_type: 'flex_button',\\n    url: 'copy://blank_block',\\n    desc:'',\\n})\\nd.push({\\n    title: '',\\n    col_type: 'blank_block',\\n    url: '',\\n    desc:'',\\n})\\nd.push({\\n    title: 'big_blank_block',\\n    col_type: 'flex_button',\\n    url: 'copy://big_blank_block',\\n    desc:'',\\n})\\nd.push({\\n    title: '',\\n    col_type: 'big_blank_block',\\n    url: '',\\n    desc:'',\\n})\\nd.push({\\n    title: 'big_big_blank_block',\\n    col_type: 'flex_button',\\n    url: 'copy://big_big_blank_block',\\n    desc:'',\\n})\\nd.push({\\n    title: '',\\n    col_type: 'big_big_blank_block',\\n    url: '',\\n    desc:'',\\n})\\nd.push({\\n    title: 'card_pic_1',\\n    col_type: 'card_pic_1',\\n    url: 'copy://card_pic_1',\\n    img: 'hiker://images/home_pic1',\\n    desc:'0',\\n})\\nd.push({\\n    title: 'card_pic_2',\\n    col_type: 'card_pic_2',\\n    url: 'copy://card_pic_2',\\n    img: 'hiker://images/home_pic1',\\n    desc:'0',\\n})\\nd.push({\\n    title: 'card_pic_2_2',\\n    col_type: 'card_pic_2_2',\\n    url: 'copy://card_pic_2_2',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'card_pic_2_2_left',\\n    col_type: 'card_pic_2_2_left',\\n    url: 'copy://card_pic_2_2_left',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'card_pic_3',\\n    col_type: 'card_pic_3',\\n    url: 'copy://card_pic_3',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"XYQ分类生成器\",\"path\":\"XYQ\",\"rule\":\"js:\\nvar items = [];\\n\\nitems.push({\\n    title: \\\"取源码\\\",\\n    url: $.toString(() => {\\n        function btwaf(netpg, bturl, btua, chars) {\\n            //log(netpg);\\n            if (netpg.indexOf('检测中') != -1) {\\n                let cook = \\\"\\\";\\n                try {\\n                    let bthtml = JSON.parse(fetch(bturl, {\\n                        headers: {\\n                            'User-Agent': btua\\n                        },\\n                        withHeaders: true\\n                    }));\\n                    //log(bthtml);\\n                    netpg = bthtml.body;\\n                    if (bthtml.search(\\\"set-cookie\\\")) {\\n                        cook = JSON.parse(bthtml).headers['set-cookie'][0].join(';');\\n                    }\\n                } catch (e) {\\n                    cook = \\\"\\\";\\n                }\\n                log(\\\"Cookie值：\\\" + cook);\\n                if (cook == \\\"\\\") {\\n                    ghtml = fetch(bturl + \\\"/?btwaf\\\" + netpg.match(/btwaf(.*?)\\\\\\\"/)[1], {\\n                        headers: {\\n                            \\\"User-Agent\\\": btua\\n                        }\\n                    });\\n                } else {\\n                    ghtml = fetch(bturl + \\\"/?btwaf\\\" + netpg.match(/btwaf(.*?)\\\\\\\"/)[1], {\\n                        headers: {\\n                            \\\"User-Agent\\\": btua,\\n                            \\\"Cookie\\\": cook\\n                        }\\n                    });\\n                }\\n            }\\n        }\\n\\n        function gethtml(url, ua, chars) {\\n            if (ua == \\\"\\\") {\\n                ua = MOBILE_UA;\\n            } else if (ua == \\\"手机\\\") {\\n                ua = MOBILE_UA;\\n            } else if (ua == \\\"电脑\\\") {\\n                ua = PC_UA;\\n            } else {\\n                ua = ua.replace(/；；/g, ';');\\n            }\\n            if (chars == \\\"\\\") {\\n                ghtml = request(url, {\\n                    headers: {\\n                        \\\"User-Agent\\\": ua\\n                    }\\n                });\\n            } else {\\n                ghtml = request(url, {\\n                    headers: {\\n                        \\\"Content-Type\\\": \\\"text/html; charset=\\\" + chars,\\n                        \\\"User-Agent\\\": ua\\n                    }\\n                });\\n            }\\n            //log(html);\\n            btwaf(ghtml, url, ua, chars);\\n            return ghtml;\\n        }\\n        showLoading(\\\"正在获取网页源码，请稍候...\\\");\\n        var link = input.split(\\\";\\\");\\n        var html = \\\"\\\";\\n        if (link.length == 1) {\\n            html = gethtml(link[0], \\\"\\\", \\\"\\\");\\n        } else if (link.length == 2) {\\n            html = gethtml(link[0], link[1], \\\"\\\");\\n        } else if (link.length == 3) {\\n            html = gethtml(link[0], link[1], link[2]);\\n        }\\n\\n        //log(html);\\n        putMyVar('rescode', html);\\n        putMyVar('realrescode', html);\\n        //hideLoading();\\n        refreshPage(false);\\n        hideLoading();\\n        return \\\"hiker://empty\\\";\\n    }),\\n    extra: {\\n        type: 'textarea',\\n        height: -1,\\n        onChange: \\\"setItem('linktext',input)\\\",\\n        defaultValue: getItem(\\\"linktext\\\", \\\"https://zjdr.vip/vodshow/id/1/page/1.html;手机;utf-8\\\"),\\n        titleVisible: true\\n    },\\n    col_type: 'input'\\n});\\nif (getMyVar(\\\"contlist\\\", \\\"\\\") != \\\"\\\") {\\n    items.push({\\n        //title: getMyVar(\\\"rescode\\\", \\\"\\\"),\\n        col_type: \\\"input\\\",\\n        extra: {\\n            height: 3,\\n            defaultValue: getMyVar(\\\"contlist\\\", \\\"\\\"),\\n            type: 'textarea',\\n            highlight: true\\n        }\\n\\n    });\\n} else {\\n    items.push({\\n        title: '格式：数组;列表;标题;链接;切前缀;切后缀',\\n        url: \\\"hiker://empty\\\",\\n        col_type: \\\"text_1\\\"\\n    });\\n}\\nvar classText = getItem(\\\"classtext\\\", \\\"body&&.module-class-items;.module-class-items&&a;a&&Text;a&&href;id/;.html\\\");\\nitems.push({\\n    title: \\\"生成\\\",\\n    url: $.toString(() => {\\n        putMyVar('筛选数量', \\\"0\\\");\\n        putMyVar('contlist', \\\"\\\");\\n        putMyVar('classlist', \\\"\\\");\\n\\n        putMyVar('contname', \\\"\\\");\\n        putMyVar('contvalue', \\\"\\\");\\n        showLoading(\\\"正在生成，请稍候...\\\");\\n\\n        function subcont(lin, star, end) {\\n            try {\\n                if (star == \\\"\\\" && end == \\\"\\\") {\\n                    return decodeURIComponent(lin);\\n                } else if (star.length > 0 && end == \\\"\\\") {\\n                    let nub = lin.indexOf(star);\\n                    //log(nub);\\n                    let valu = lin.substring(nub + star.length);\\n                    //log(valu);\\n                    return decodeURIComponent(valu);\\n                } else {\\n                    var str = star + \\\"(.*?)\\\" + end;\\n                    let valu = eval(lin.match(str));\\n                    return decodeURIComponent(valu[1])\\n                }\\n            } catch (e) {\\n                return decodeURIComponent(lin)\\n            }\\n        }\\n\\n\\n\\n        var spl = getItem(\\\"classtext\\\").split(\\\";\\\");\\n        //log(spl.length);\\n        if (getMyVar(\\\"realrescode\\\", \\\"\\\") == \\\"\\\") {\\n            //refreshPage();\\n            hideLoading();\\n            return 'toast://请先获取网页源码。';\\n        } else if (spl[0] == \\\"\\\") {\\n            refreshPage();\\n            hideLoading();\\n            return 'toast://规则格式填写错误，不能为空。';\\n        } else {\\n            var html = getMyVar(\\\"realrescode\\\", \\\"\\\");\\n            try {\\n                var cont = parseDomForArray(html, spl[0]);\\n                putMyVar('筛选数量', cont.length);\\n                //log(cont.length);\\n                for (let j = 0; j < cont.length; j++) {\\n                    putMyVar('classname' + j, \\\"\\\");\\n                    putMyVar('classvalue' + j, \\\"\\\");\\n\\n                    var list = parseDomForArray(cont[j], spl[1] + ':not(:matches(全部|首页|公告|头条|专题|明星|下载|app|APP|类型|分类|资讯|留言|消息|防走|通知|用户|今日|字母))');\\n\\n                    //log('列表：' + list.length);\\n\\n                    for (let i = 0; i < list.length; i++) {\\n                        var listt = getMyVar('classlist', '');\\n                        if (listt.length < 1) {\\n                            var lipt = list[i];\\n                        } else {\\n                            var lipt = listt + '\\\\n\\\\n' + list[i]\\n                        }\\n                        putMyVar('classlist', lipt);\\n\\n                        var title = parseDomForHtml(list[i], spl[2]);\\n                        var url = parseDomForHtml(list[i], spl[3]);\\n                        if (spl.length == 5) {\\n                            url = subcont(url, spl[4], \\\"\\\");\\n                        } else if (spl.length == 6) {\\n                            url = subcont(url, spl[4], spl[5]);\\n                        } else {\\n                            url = subcont(url, \\\"\\\", \\\"\\\");\\n                        }\\n                        var filet = getMyVar('classname' + j, '');\\n                        var file = getMyVar('classvalue' + j, '');\\n                        if (filet.length < 1) {\\n                            var typt = title;\\n                            var typh = url;\\n                        } else {\\n                            var typt = filet + '&' + title;\\n                            var typh = file + '&' + url\\n                        }\\n                        //log(file.length);\\n                        putMyVar('classname' + j, typt);\\n                        putMyVar('classvalue' + j, typh);\\n                    } //for i\\n\\n                    var cfilet = getMyVar('contname', '');\\n                    var cfile = getMyVar('contvalue', '');\\n\\n                    if (getMyVar('classname' + j, '') != '') {\\n                        if (j == 0) {\\n                            var ctypt = '名称：' + getMyVar('classname' + j, '') + '\\\\n替换词：' + getMyVar('classvalue' + j, '') + '\\\\n\\\\n';\\n                        } else {\\n                            var ctypt = cfilet + '名称：' + getMyVar('classname' + j, '') + cfile + '\\\\n替换词：' + getMyVar('classvalue' + j, '') + '\\\\n\\\\n';\\n                        }\\n\\n                        putMyVar('contname', ctypt);\\n                    }\\n                    var clistt = getMyVar('contlist', '');\\n                    if (j == 0) {\\n                        var clipt = cont[j];\\n                    } else {\\n                        var clipt = clistt + '\\\\n\\\\n' + cont[j]\\n                    }\\n                    //log(clipt);\\n                    putMyVar('contlist', clipt);\\n                    //log(getMyVar('contlist', ''));\\n                    //putMyVar('contlist', getMyVar('classlist', '')?getMyVar('contlist', ''):getMyVar('classlist', ''));\\n                    //putMyVar('contlist', getMyVar('classlist', '')?:getMyVar('classlist', ''));\\n                } //for j\\n\\n                putMyVar('contlist', getMyVar('classlist', '') == \\\"\\\" ? getMyVar('contlist', '') : getMyVar('classlist', ''));\\n\\n            } catch (e) {\\n                //putMyVar('判断', \\\"0\\\");\\n                log(\\\"生成报错咯\\\");\\n            }\\n            refreshPage(false);\\n            hideLoading();\\n            return 'hiker://empty';\\n        }\\n    }),\\n    extra: {\\n        type: 'textarea',\\n        height: -1,\\n        onChange: \\\"setItem('classtext',input)\\\",\\n        defaultValue: classText,\\n        titleVisible: true\\n    },\\n    col_type: 'input'\\n});\\n\\n\\nlet contda = getMyVar('筛选数量', '0');\\nif (contda != '0' && getMyVar('classlist', '') != \\\"\\\") {\\n    for (let i = 0; i < contda; i++) {\\n        if (getMyVar('classname' + i, '') != '') {\\n            items.push({\\n                title: \\\"复制\\\" + getMyVar('classname' + i, '').split('&')[0] + \\\"行\\\",\\n                //desc: getVar(\\\"frdtvcode\\\",\\\"\\\"),\\n                url: \\\"confirm://是否需要复制当前内容。.js:\\\" + $.toString((i) => {\\n                    var jieguo = getMyVar('classname' + i, '');\\n                    if (jieguo == '') {\\n                        return 'toast://内容为空,复制失败。';\\n                    } else if (jieguo.length < 1) {\\n                        return 'toast://内容长度不够,复制失败。';\\n                    } else {\\n                        return 'copy://' + getMyVar('classname' + i)\\n                    }\\n                }, i),\\n                col_type: \\\"flex_button\\\"\\n            });\\n\\n            items.push({\\n                title: \\\"复制\\\" + getMyVar('classname' + i, '').split('&')[0] + \\\"行\\\" + \\\"替换词\\\",\\n                //desc: getVar(\\\"frdtvcode\\\",\\\"\\\"),\\n                url: \\\"confirm://是否需要复制当前内容。.js:\\\" + $.toString((i) => {\\n                    var jieguo = getMyVar('classvalue' + i, '');\\n                    if (jieguo == '') {\\n                        return 'toast://内容为空,复制失败。';\\n                    } else if (jieguo.length < 1) {\\n                        return 'toast://内容长度不够,复制失败。';\\n                    } else {\\n                        return 'copy://' + getMyVar('classvalue' + i)\\n                    }\\n                }, i),\\n                col_type: \\\"flex_button\\\"\\n            });\\n        }\\n    }\\n}\\n\\nitems.push({\\n    title: '恢复默认',\\n    url: $('hiker://empty').lazyRule(() => {\\n        clearMyVar('rescode');\\n        clearMyVar('realrescode');\\n\\n        clearMyVar('classname');\\n        clearMyVar(\\\"classvalue\\\");\\n        clearMyVar('contname');\\n        clearMyVar(\\\"contvalue\\\");\\n\\n        clearMyVar('classlist')\\n        clearMyVar('contlist');\\n        clearItem('linktext');\\n        clearItem('classtext');\\n        clearMyVar('筛选数量');\\n        refreshPage(false);\\n        return 'hiker://empty'\\n    }),\\n    col_type: \\\"flex_button\\\"\\n});\\n\\nif (getMyVar('contname', \\\"\\\") != \\\"\\\") {\\n    items.push({\\n        //title: getMyVar(\\\"rescode\\\", \\\"\\\"),\\n        col_type: \\\"input\\\",\\n        extra: {\\n            height: 3,\\n            defaultValue: getMyVar(\\\"contname\\\", \\\"\\\"),\\n            type: 'textarea',\\n            highlight: true\\n        }\\n\\n    });\\n}\\nitems.push({\\n    //title: getMyVar(\\\"rescode\\\", \\\"\\\"),\\n    col_type: \\\"input\\\",\\n    extra: {\\n        height: 5,\\n        onChange: \\\"putMyVar('rescode',input)\\\",\\n        defaultValue: getMyVar(\\\"rescode\\\", \\\"\\\") == \\\"\\\" ? getMyVar(\\\"realrescode\\\", \\\"当前未获取源码。\\\") : getMyVar(\\\"rescode\\\", \\\"\\\"),\\n        type: 'textarea',\\n        highlight: true\\n    }\\n\\n});\\nsetHomeResult(items);\"},{\"col_type\":\"movie_3\",\"name\":\"Json分类生成\",\"path\":\"Json\",\"rule\":\"js:\\nvar res = {};\\nvar items = [];\\nitems.push({\\n    title: 'json数据',\\n    url: 'hiker://empty',\\n    col_type: 'text_1'\\n});\\n\\nitems.push({\\n    title: getVar('myjson', ''),\\n    url: \\\"input://\\\" + getVar('myjson', '') + \\\".js:putVar('myjson',input);refreshPage()\\\",\\n    col_type: 'icon_1_search'\\n});\\n\\n\\nitems.push({\\n    title: '定位(list.type)',\\n    url: 'hiker://empty',\\n    col_type: 'text_1'\\n});\\nitems.push({\\n    title: getVar('mytree', ''),\\n    url: \\\"input://\\\" + getVar('mytree', '') + \\\".js:putVar('mytree',input);refreshPage()\\\",\\n    col_type: 'icon_1_search'\\n});\\n\\nitems.push({\\n    title: '取值(type_name&&type_id)',\\n    url: 'hiker://empty',\\n    col_type: 'text_1'\\n});\\nitems.push({\\n    title: getVar('myval', ''),\\n    url: \\\"input://\\\" + getVar('myval', '') + \\\".js:putVar('myval',input);refreshPage()\\\",\\n    col_type: 'icon_1_search'\\n});\\n//log(list);\\nitems.push({\\n    title: '生成',\\n    url: $('').lazyRule(() => {\\n        var tpjson = JSON.parse(getVar('myjson', '[]'));\\n        var list = 'tpjson.' + getVar('mytree', '');\\n        var spl = getVar('myval', '').split('&&');\\n        var one = 'typec[j].' + spl[0];\\n        var two = 'typec[j].' + spl[1];\\n        //var tpjson = JSON.parse(json);\\n        //log(tpjson);\\n        var typec = eval(list);\\n        //log(typec);\\n        var typet = \\\"\\\",\\n            typel = \\\"\\\";\\n        for (var j = 0; j < typec.length; j++) {\\n            typet += eval(one);\\n            typel += eval(two);\\n            if (j < typec.length - 1) {\\n                typet += \\\"&\\\";\\n                typel += \\\"&\\\";\\n            }\\n        }\\n\\n        putVar('jsontypet', typet);\\n        putVar('jsontypel', typel);\\n        refreshPage();\\n        return 'hiker://empty'\\n    }),\\n    col_type: 'text_3'\\n});\\n\\nitems.push({\\n    title: \\\"复制名称\\\",\\n    url: \\\"confirm://是否需要复制当前内容。.js:\\\" + $.toString(() => {\\n        var jieguo = getVar('jsontypet', '');\\n        if (jieguo == '') {\\n            return 'toast://内容为空,复制失败。';\\n        } else {\\n            return 'copy://' + getVar('jsontypet')\\n        }\\n    }),\\n    col_type: \\\"text_3\\\"\\n});\\n\\nitems.push({\\n    title: \\\"复制替换词\\\",\\n    url: \\\"confirm://是否需要复制当前内容。.js:\\\" + $.toString(() => {\\n        var jieguo = getVar('jsontypel', '');\\n        if (jieguo == '') {\\n            return 'toast://内容为空,复制失败。';\\n        } else {\\n            return 'copy://' + getVar('jsontypel')\\n        }\\n    }),\\n    col_type: \\\"text_3\\\"\\n});\\n\\nitems.push({\\n    title: getVar(\\\"jsontypet\\\", \\\"\\\") + '<br>' + getVar(\\\"jsontypel\\\", \\\"\\\"),\\n    col_type: 'rich_text'\\n});\\n\\nres.data = items;\\nsetHomeResult(res);\"},{\"col_type\":\"movie_3\",\"name\":\"请求测试\",\"path\":\"home\",\"rule\":\"var methods = [\\\"GET\\\", \\\"POST\\\", \\\"PUT\\\", \\\"DELETE\\\"]\\nvar d = [{\\n    desc: \\\"请求链接\\\",\\n    col_type: \\\"input\\\",\\n    extra: {\\n        titleVisible: false,\\n        onChange: $.toString(() => {\\n            putMyVar(\\\"url\\\", input)\\n        }),\\n        defaultValue: getMyVar(\\\"url\\\", \\\"\\\")\\n    }\\n}, {\\n    title: \\\"请求方式:\\\" + (getMyVar(\\\"method\\\", \\\"GET\\\")),\\n    col_type: \\\"text_1\\\",\\n    url: $(methods).select(() => {\\n        putMyVar(\\\"method\\\", input)\\n        refreshPage()\\n    })\\n}, {\\n    col_type: \\\"line_blank\\\"\\n}, {\\n    title: \\\"添加headers\\\",\\n    col_type: \\\"text_center_1\\\",\\n    url: $(\\\"\\\", \\\"键值\\\").input(() => {\\n        return $(\\\"\\\", \\\"值\\\").input((a) => {\\n            var old = storage0.getMyVar(\\\"headers\\\", {})\\n            old[a] = input\\n            storage0.putMyVar(\\\"headers\\\", old)\\n            refreshPage()\\n        }, input)\\n    })\\n}]\\nvar headers = storage0.getMyVar(\\\"headers\\\", {})\\nObject.keys(headers).forEach(item => {\\n    d.push({\\n        title: item,\\n        desc: headers[item],\\n        url: $(\\\"确认删除该项？\\\").confirm((key) => {\\n            var old = storage0.getMyVar(\\\"headers\\\", {})\\n            delete old[key]\\n            storage0.putMyVar(\\\"headers\\\", old)\\n            refreshPage()\\n        }, item),\\n        col_type: \\\"text_1\\\"\\n    })\\n})\\nd.push({\\n    col_type: \\\"line_blank\\\"\\n}, {\\n    title: \\\"添加body\\\",\\n    col_type: \\\"text_center_1\\\",\\n    url: $(\\\"\\\", \\\"键值\\\").input(() => {\\n        return $(\\\"\\\", \\\"值\\\").input((a) => {\\n            var old = storage0.getMyVar(\\\"body\\\", {})\\n            old[a] = input\\n            storage0.putMyVar(\\\"body\\\", old)\\n            refreshPage()\\n        }, input)\\n    })\\n})\\nvar body = storage0.getMyVar(\\\"body\\\", {})\\nObject.keys(body).forEach(item => {\\n    d.push({\\n        title: item,\\n        desc: body[item],\\n        url: $(\\\"确认删除该项？\\\").confirm((key) => {\\n            var old = storage0.getMyVar(\\\"body\\\", {})\\n            delete old[key]\\n            storage0.putMyVar(\\\"body\\\", old)\\n            refreshPage()\\n        }, item),\\n        col_type: \\\"text_1\\\"\\n    })\\n})\\nd.push({\\n    col_type: \\\"line_blank\\\"\\n}, {\\n    title: \\\"发送请求\\\",\\n    url: \\\"hiker://page/report\\\",\\n    col_type: \\\"text_center_1\\\"\\n})\\nsetResult(d)\"},{\"col_type\":\"movie_3\",\"name\":\"请求报告\",\"path\":\"report\",\"rule\":\"js:\\nvar d = [];\\nvar a = JSON.parse(request(getMyVar(\\\"url\\\", \\\"hiker://empty\\\"), {\\n    method: getMyVar(\\\"method\\\", \\\"GET\\\"),\\n    withHeaders: true,\\n    headers: storage0.getMyVar(\\\"headers\\\", {}),\\n    body: storage0.getMyVar(\\\"body\\\", {})\\n}))\\nif (a.error) {\\n    d.push({\\n        title: \\\"错误~~  代码:\\\" + a.statusCode,\\n        desc: a.error\\n    })\\n    log(a)\\n    setPageTitle(\\\"请求失败\\\")\\n} else {\\n    setPageTitle(\\\"请求成功\\\")\\n    Object.keys(a).forEach(item => {\\n        d.push({\\n            title: item + \\\":\\\" + a[item],\\n            col_type: \\\"text_1\\\",\\n            url: a[item] + $(\\\"\\\").lazyRule(() => {\\n                return \\\"copy://\\\" + input\\n            })\\n        })\\n    })\\n}\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"请求测试主页\",\"path\":\"Home\",\"rule\":\"js:$.require(\\\"hiker://page/home\\\")\"}]","proxy":"","icon":""},{"last_chapter_rule":"","title":"XYQ推送","author":"香雅情","version":1,"type":"tool","url":"hiker://empty","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nlet d = [];\nd.push({\n    title: '设置电视IP',\n    url: \"input://\" + getItem('hikertvboxset', 'http://' + getIP() + ':9978') + \"////请输入tvbox推送IP地址，如http://\" + getIP() + \":9978.js:setItem('hikertvboxset',input);refreshPage()\",\n    col_type: 'scroll_button'\n});\nd.push({\n    title: getItem('hikertvboxset', ''),\n    //url: 'hiker://empty',\n    url: \"input://\" + getItem('hikertvboxset', 'http://' + getIP() + ':9978') + \"////请输入tvbox推送IP地址，如http://\" + getIP() + \":9978.js:setItem('hikertvboxset',input);refreshPage()\",\n    col_type: 'scroll_button'\n});\n\nd.push({\n    title: \"推送\",\n    url: $.toString(() => {\n        clearMyVar('name');\n        //var link = 'hiker://page/push.html?url=' + encodeURIComponent(input.replace(\"#isMusic=true#\", '').replace('#isVideo=true#', ''));\n        var link = \"hiker://page/push?pushurl=\" + encodeURIComponent(input);\n\n        if (input.startsWith('http') || input.startsWith('magnet:') || (input.includes(\"\\n\") && !input.startsWith(\"{\"))) {\n            return link;\n        } else if (input.startsWith(\"{\") && input.endsWith(\"}\")) {\n            return link;\n        } else if (/\\.torrent|ed2k\\:/.test(input)) {\n            return 'toast://不支持推送这种链接。'\n        } else {\n            return 'toast://请输入正确的链接。'\n        }\n    }),\n    extra: {\n        titleVisible: true\n    },\n    col_type: 'input'\n});\nd.push({\n    title: \"TVB搜索\",\n    url: $.toString(() => {\n        let tvip = getItem('hikertvboxset', '');\n        let state = 'false';\n        if (tvip != '' && tvip.includes(':997')) {\n            var state = request(tvip + '/action', {\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                    //'X-Requested-With': 'XMLHttpRequest',\n                    'Referer': tvip\n                },\n                timeout: 2000,\n                body: 'do=search&word=' + input,\n                method: 'POST'\n            });\n        }\n        //log(state);\n        if (state == 'ok') {\n            return 'toast://搜索推送成功，请注意观看电视端tvbox界面';\n        } else {\n            return 'toast://搜索推送失败'\n        }\n    }),\n    extra: {\n        titleVisible: true\n    },\n    col_type: 'input'\n});\n//调用代码示例\n//return 'hiker://page/push?rule=XYQ推送&pushurl=' + encodeURIComponent(input);\n//url: 'hiker://page/push?rule=XYQ推送&pushurl='+encodeURIComponent(url);\nd.push({\n    title: '下载TVBox推送插件',\n    url: 'https://framagit.org/lzk23559/tvbox/-/tree/main',\n    col_type: 'text_2'\n});\nd.push({\n    title: '查看TV设置教程',\n    url: 'https://framagit.org/lzk23559/tvbox/-/blob/main/%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E-%E5%BF%85%E7%9C%8B/XYQTVBox%E6%AD%A5%E9%AA%A4%E6%93%8D%E4%BD%9C%E8%AF%B4%E6%98%8E.pdf',\n    col_type: 'text_2'\n});\nd.push({\n    title: \"有推送功能的规则\",\n    url: 'hiker://empty',\n    col_type: \"text_1\"\n});\nvar jump = ['tvbox云盘推送', '云盘君(推送)', 'AI影搜(推送)', 'MY阿里云盘', '香情影视', '聚影√', '风影 Ⓕ','虎牙直播(推送)'];\nfor (var j in jump) {\n    d.push({\n        title: jump[j],\n        url: 'hiker://home@' + jump[j],\n        col_type: \"text_3\"\n    });\n}\nsetResult(d);","searchFind":"","search_url":"","group":"工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"推送\",\"path\":\"push\",\"rule\":\"js:\\nlet items = [];\\nlet pushin = decodeURIComponent(getParam(\\\"pushurl\\\"));\\nlet tvip = getItem('hikertvboxset', '');\\n\\nitems.push({\\n    title: '当前IP：' + tvip,\\n    url: \\\"input://\\\" + getItem('hikertvboxset', 'http://' + getIP() + ':9978') + \\\"////请输入TVBox端的IP地址，如http://\\\" + getIP() + \\\":9978.js:setItem('hikertvboxset',input);refreshPage()\\\",\\n    col_type: 'flex_button'\\n});\\nvar purl = pushin;\\n\\nif (pushin.includes('\\\\n') && !pushin.startsWith('{')) {\\n    purl = pushin.replace(\\\"\\\\n\\\", '$');\\n}\\nif (pushin.startsWith('http') && pushin.includes(';{')) {\\n    purl = JSON.stringify({\\n        \\\"name\\\": \\\"海阔直链推送\\\",\\n        \\\"url\\\": pushin\\n    })\\n}\\nif (pushin.startsWith('https://www.aliyundrive.com/s/')) {\\n    let reftoken = JSON.parse(fetch('hiker://files/rules/icy/icy-ali-token.json', {}))[0].refresh_token;\\n    purl = JSON.stringify({\\n        \\\"url\\\": pushin,\\n        \\\"refresh_token\\\": reftoken\\n    })\\n}\\nif (pushin.includes(':52020')) {\\n    if (pushin.includes('redirectPlayUrl')) {\\n        purl = JSON.stringify({\\n            \\\"name\\\": \\\"海阔投屏直链\\\",\\n            \\\"url\\\": pushin\\n        })\\n    } else {\\n        purl = JSON.stringify({\\n            \\\"name\\\": \\\"海阔网页投屏\\\",\\n            \\\"url\\\": pushin\\n        })\\n    }\\n}\\n\\n//log('推送'+purl);\\nvar state = request(tvip + '/action', {\\n    headers: {\\n        'Content-Type': 'application/x-www-form-urlencoded',\\n        //'X-Requested-With': 'XMLHttpRequest',\\n        'Referer': tvip\\n    },\\n    timeout: 2000,\\n    body: 'do=push&url=' + purl.replace(/\\\\&/g, '＆＆').replace(/video\\\\:\\\\/\\\\//g,''),\\n    method: 'POST'\\n});\\n//log(state);\\nif (state == 'ok') {\\n    //log(state);\\n    items.push({\\n        title: \\\"√\\\" + state,\\n        url: \\\"hiker://empty\\\",\\n        col_type: \\\"text_center_1\\\"\\n    });\\n} else {\\n    //log(state);\\n    items.push({\\n        title: \\\"╳\\\" + state,\\n        url: \\\"hiker://empty\\\",\\n        col_type: \\\"text_center_1\\\"\\n    });\\n\\n}\\nsetResult(items);\"}]","proxy":"","icon":""},{"last_chapter_rule":"","title":"批量修改助手","author":"永远の明日","version":7,"type":"tool","url":"hiker://empty","col_type":"text_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nlet todoRule = JSON.parse(getMyVar('todoRule', '[]')),\n    editAttr = JSON.parse(getMyVar('editAttr', '[\"group\"]')),\n    subMode = getMyVar('subMode', '字串'),\n    replaceMode = getMyVar('replaceMode', '字串'),\n    quickCopy = ['/^.*$/', '/[\\\\s\\\\S]*/', 'new RegExp(\"\",\"\")', '()=>{return \"\"}', 'function(){return \"\"}', 'new Function(\"\", \"\")'],\n    el = []\n\nel.push({\n    title: '““””' + '恢复备份'.bold().fontcolor('#12b668'),\n    url: $('#noLoading#').lazyRule(() => {\n        if (!fetch('hiker://files/share/batchEdit-backup-rules.json')) return 'toast://备份为空'\n        else return 'rule://' + base64Encode('海阔视界￥home_rule_url￥hiker://files/share/batchEdit-backup-rules.json')\n    })\n}, {\n    title: '““””' + '使用须知'.bold().fontcolor('#f44236'),\n    url: 'hiker://page/manual#noHistory##noRecordHistory#',\n}, {\n    title: '““””' + ('编辑队列: ' + todoRule.length).bold().fontcolor('#409eff'),\n    url: 'hiker://page/queueEdit#noHistory##noRecordHistory#',\n}, {\n    title: '改标题',\n    url: $('#noLoading#').lazyRule(() => {\n        putMyVar('subMode', '字串')\n        putMyVar('subStr', '')\n        putMyVar('editAttr', '[\"title\"]')\n        refreshPage(false)\n        return 'toast://请输入查询和替换内容\\n注意改标题一定不能正则全选查询内容'\n    }),\n    col_type: 'text_4'\n}, {\n    title: '改类别',\n    url: $('#noLoading#').lazyRule(() => {\n        putMyVar('subMode', '正则')\n        putMyVar('subStr', '/^.*$/')\n        putMyVar('editAttr', '[\"type\"]')\n        refreshPage(false)\n        return 'toast://已正则全选查询内容，请输入替换内容\\n注意类别的存储和显示不一致，详见使用须知'\n    }),\n    col_type: 'text_4'\n}, {\n    title: '改分组',\n    url: $('#noLoading#').lazyRule(() => {\n        putMyVar('subMode', '正则')\n        putMyVar('subStr', '/^.*$/')\n        putMyVar('editAttr', '[\"group\"]')\n        refreshPage(false)\n        return 'toast://已正则全选查询内容，请输入替换内容\\n注意改分组时一定要删除原规则再导入，否则会没效果'\n    }),\n    col_type: 'text_4'\n}, {\n    title: '改图标',\n    url: $('#noLoading#').lazyRule(() => {\n        putMyVar('subMode', '正则')\n        putMyVar('subStr', '/^.*$/')\n        putMyVar('editAttr', '[\"icon\"]')\n        refreshPage(false)\n        return 'toast://已正则全选查询内容，请输入替换内容'\n    }),\n    col_type: 'text_4'\n}, { col_type: 'line_blank' })\n\nel.push({\n    title: '““””<b>✎ 待改属性: </b><small>' + editAttr,\n    url: 'hiker://page/AttrSelect?mode=editAttr#noHistory##noRecordHistory#',\n    col_type: 'text_center_1',\n}, {\n    title: subMode + '查询',\n    url: $.toString((subMode) => {\n        if (!input) {\n            subMode = { '字串': '正则', '正则': '字串' } [subMode]\n            putMyVar('subMode', subMode)\n            refreshPage(false)\n            return 'toast://已切换至' + subMode + '查询模式'\n        }\n    }, subMode),\n    desc: '右侧可切换模式',\n    col_type: 'input',\n    extra: { defaultValue: getMyVar('subStr', ''), OnChange: 'putMyVar(\"subStr\", input)' }\n}, {\n    title: replaceMode + '替换',\n    url: $.toString((replaceMode) => {\n        if (!input) {\n            replaceMode = { '字串': '函数', '函数': '字串' } [replaceMode]\n            putMyVar('replaceMode', replaceMode)\n            refreshPage(false)\n            return 'toast://已切换至' + replaceMode + '替换模式'\n        }\n    }, replaceMode),\n    desc: '右侧可切换模式',\n    col_type: 'input',\n    extra: { defaultValue: getMyVar('replacement', ''), OnChange: 'putMyVar(\"replacement\", input)' }\n}, {\n    title: '💾   修改并导入',\n    url: $('#noLoading#').lazyRule((todoRule, editAttr, subMode, replaceMode) => {\n        let rules = JSON.parse(fetch('hiker://home')),\n            subStr = getMyVar('subStr', ''),\n            replacement = getMyVar('replacement', '')\n        writeFile('hiker://files/share/batchEdit-backup-rules.json', JSON.stringify(rules))\n        if (subMode == '正则') {\n            try { subStr = eval(subStr) } catch (e) {}\n            if (!(subStr instanceof RegExp)) throw '查询正则语法错误'\n        }\n        if (replaceMode == '函数') {\n            try { replacement = eval(replacement) } catch (e) {}\n            if (!(replacement instanceof Function)) throw '替换函数语法错误'\n        }\n        rules = rules.map((v) => {\n            if (todoRule.indexOf(v.title) >= 0){log(v.type)\n                editAttr.forEach((attr) => v[attr] = (v[attr] || '').replace(subStr, replacement))}\n            return v\n        })\n        writeFile('hiker://files/share/batchEdit-home-rules.json', JSON.stringify(rules))\n        putMyVar('todoRule', '[]')\n        return 'rule://' + base64Encode('海阔视界￥home_rule_url￥hiker://files/share/batchEdit-home-rules.json')\n    }, todoRule, editAttr, subMode, replaceMode),\n    col_type: 'text_center_1',\n}, { col_type: 'line_blank' }, {\n    title: '““””<b>快捷复制',\n    url: 'hiker://empty',\n    col_type: 'text_center_1',\n})\n\nArray.prototype.push.apply(el, quickCopy.map((v) => {\n    return { title: v, url: 'copy://' + v, col_type: 'text_2' }\n}))\nsetResult(el)\n","searchFind":"","search_url":"hiker://empty##**","group":"工具","detail_col_type":"text_3","detail_find_rule":"","sdetail_col_type":"text_3","sdetail_find_rule":"","ua":"mobile","preRule":"if(getAppVersion() >= 2125){\n  let rules = JSON.parse(fetch('hiker://home'))\n  if(rules.find((v) => !v.hasOwnProperty('icon')))\n    confirm({\n      title: '重要提示',\n      content: '你的海阔已经使用小程序图标，但是你的小程序中还有小程序名颜色属性，是否进行转换？',\n      confirm: $.toString(() => {\n        let rules = JSON.parse(fetch('hiker://home')).map((v) => {\n          v.icon = v.icon || v.titleColor || ''\n          delete v.titleColor\n          return v\n        })\n        writeFile('hiker://files/share/batchEdit-home-rules.json', JSON.stringify(rules))\n        return 'rule://' + base64Encode('海阔视界￥home_rule_url￥hiker://files/share/batchEdit-home-rules.json')\n      })\n    })\n}","pages":"[{\"col_type\":\"icon_2_round\",\"name\":\"编辑队列\",\"path\":\"queueEdit\",\"rule\":\"js:\\naddListener('onClose', 'refreshPage(false)')\\n\\nconst filterAttr = JSON.parse(getMyVar('filterAttr', '[\\\"title\\\",\\\"url\\\"]')),\\n  groupShow = getMyVar('groupShow', '0'),\\n  queueShow = getMyVar('queueShow', '全部'),\\n  todoRule = JSON.parse(getMyVar('todoRule', '[]'))\\nlet rules = JSON.parse(fetch('hiker://home')),\\n  filterKey = getMyVar('filterKey', ''),\\n  groups = rules.map((v) => v.group).filter((v, i, arr) => arr.indexOf(v) == i)\\ngroups.unshift('分组:')\\nsetPageTitle('编辑队列: ' + todoRule.length)\\n\\nlet el = [{\\n  title: '过滤',\\n  url: $.toString(() => {\\n    putMyVar('filterKey', input)\\n    refreshPage(false)\\n    return 'hiker://empty'\\n  }),\\n  desc: '关键词可正则,下方选择要过滤的属性',\\n  col_type: 'input',\\n  extra: { defaultValue: filterKey }\\n}, {\\n  title: '✎ 过滤属性: &nbsp““””<small>' + filterAttr,\\n  url: 'hiker://page/AttrSelect?mode=filterAttr#noHistory##noRecordHistory#',\\n  col_type: 'text_center_1'\\n}, { col_type: 'line_blank' },\\n  { col_type: 'big_blank_block' },\\n  { col_type: 'big_blank_block' }\\n]\\n\\ngroups.forEach((v, i) => {\\n  el.push({\\n    title: '““””<span style=\\\"color:' + (groupShow == i ? '#12b668\\\">' : 'black\\\">') + (v || '[无分组]'),\\n    url: groupShow == i ? 'hiker://empty' : $('#noLoading#').lazyRule((i) => {\\n      putMyVar('groupShow', i)\\n      refreshPage(false)\\n      return 'hiker://empty'\\n    }, i),\\n    col_type: 'scroll_button',\\n  })\\n})\\n\\nif (filterKey) {\\n  filterKey = /^\\\\/(.+)\\\\/([gim]{0,3})$/.exec(filterKey) || [, filterKey, '']\\n  filterKey = new RegExp(filterKey[1], filterKey[2])\\n  rules = rules.filter((v) => {\\n    for (let attr of filterAttr) {\\n      let res = filterKey.exec(v[attr])\\n      if (res) {\\n        if (res[0] == '') return v[attr] == ''\\n        else return true\\n      }\\n    }\\n    return false\\n  })\\n}\\nif (groups[groupShow] != '分组:')\\n  rules = rules.filter((v) => (groups[groupShow] == v.group))\\nif (queueShow == '已选')\\n  rules = rules.filter((v) => (todoRule.indexOf(v.title) >= 0))\\n\\nel.push({ col_type: 'line' }, {\\n  title: '““””<span style=\\\"color:black\\\">⇵ 显示' + queueShow,\\n  url: $('#noLoading#').lazyRule((queueShow) => {\\n    putMyVar('queueShow', { '全部': '已选', '已选': '全部' } [queueShow])\\n    refreshPage(false)\\n    return 'hiker://empty'\\n  }, queueShow),\\n    col_type: 'text_3'\\n}, {\\n  title: '““””<span style=\\\"color:black\\\">◉ 全选',\\n  url: $('#noLoading#').lazyRule((rules, todoRule, group) => {\\n    if (group == '全部') todoRule = rules\\n    else rules.forEach((v) => { if (todoRule.indexOf(v) == -1) todoRule.push(v) })\\n    putMyVar('todoRule', JSON.stringify(todoRule))\\n    refreshPage(false)\\n    return 'toast://' + group + ', 已全选'\\n  }, rules.map((v) => v.title), todoRule, groups[groupShow]),\\n    col_type: 'text_3'\\n}, {\\n  title: '““””<span style=\\\"color:black\\\">○ 全不选',\\n  url: $('#noLoading#').lazyRule((rules, todoRule, group) => {\\n    if (group == '全部') todoRule = []\\n    else todoRule = todoRule.filter((v) => (rules.indexOf(v) == -1))\\n    putMyVar('todoRule', JSON.stringify(todoRule))\\n    refreshPage(false)\\n    return 'toast://' + group + ', 已全不选'\\n  }, rules.map((v) => v.title), todoRule, groups[groupShow]),\\n    col_type: 'text_3'\\n})\\nrules.forEach((v) => {\\n  let index = todoRule.indexOf(v.title)\\n  el.push({\\n    title: (index == -1 ? '⚪' : '🟢') + v.title,\\n    url: $('#noLoading#').lazyRule((todoRule, title, index) => {\\n      if (index == -1) todoRule.push(title)\\n      else todoRule.splice(index, 1)\\n      putMyVar('todoRule', JSON.stringify(todoRule))\\n      refreshPage(false)\\n      return 'hiker://empty'\\n    }, todoRule, v.title, index),\\n    img: v.icon\\n  })\\n})\\n\\nsetResult(el)\\n\"},{\"col_type\":\"text_2\",\"name\":\"选择属性\",\"path\":\"AttrSelect\",\"rule\":\"js:\\naddListener('onClose', 'refreshPage(false)')\\n\\nconst mode = getParam('mode'),\\n  rule = JSON.parse(fetch('hiker://home@' + MY_RULE.title)),\\n  allAttr = Object.keys(rule).filter((v) => (typeof(rule[v]) == 'string')),\\n  attrs = JSON.parse(getMyVar(mode, mode == 'filterAttr' ? '[\\\"title\\\",\\\"url\\\"]' : '[\\\"group\\\"]'))\\nsetPageTitle('选择属性')\\n\\nlet el = [{\\n  title: '““””<span style=\\\"color:black\\\">◉ 全选',\\n  url: $('#noLoading#').lazyRule((mode, allAttr) => {\\n    putMyVar(mode, JSON.stringify(allAttr))\\n    refreshPage(false)\\n    return 'toast://已全选'\\n  }, mode, allAttr),\\n}, {\\n  title: '““””<span style=\\\"color:black\\\">○ 全不选',\\n  url: $('#noLoading#').lazyRule((mode) => {\\n    putMyVar(mode, '[]')\\n    refreshPage(false)\\n    return 'toast://已全不选'\\n  }, mode),\\n}, { col_type: 'line' }]\\nallAttr.forEach((v) => {\\n  let index = attrs.indexOf(v)\\n  el.push({\\n    title: (index == -1 ? '⚪ ' : '🟢 ') + v,\\n    url: $('#noLoading#').lazyRule((mode, v, attrs, index) => {\\n      if (index == -1) attrs.push(v)\\n      else attrs.splice(index, 1)\\n      putMyVar(mode, JSON.stringify(attrs))\\n      refreshPage(false)\\n      return 'hiker://empty'\\n    }, mode, v, attrs, index)\\n  })\\n})\\n\\nsetResult(el)\"},{\"col_type\":\"rich_text\",\"name\":\"使用说明\",\"path\":\"manual\",\"rule\":\"js:\\nsetResult([\\n  '本规则使用了视界的合集导入功能进行批量修改。如果你要修改的是分组，在导入前务必选择【删除原规则】，否则会没有效果；其它的可以【保留原规则】。<br>同时不要担心改坏了，每次导入前都会备份，可以点击【恢复备份】导入备份，此时同样要选择【删除原规则】',\\n  '批量修改每次只能修改一次，修改后待处理队列会清空，无法继续修改',\\n  '简单教程：<br>  1. 点击右上角【编辑队列】后，选择你要进行批量修改的小程序。同时可以输入关键词对小程序进行过滤，类似视界的小程序搜索。<br>\\\\\\n  2. 点击【待改属性】可以选择要修改的属性，自己写过规则的应该可以明白这些属性的意义。不明白的提供【名称、类别、分组、图标】四个快捷选项，然后按照提示操作即可，这四个功能是最常用的。<br>\\\\\\n  3. 在查询输入框输入查询参数，在替换输入框输入替换参数，点击【修改并导入】',\\n  '查询内容有字符串和正则两种模式，替换内容有字符串和函数两种模式，点击右侧按钮可切换，不会正则和函数的话尽量只用字符串模式。<br>这两种模式与js的replace函数参数一致，详见<a href=\\\"https://www.w3school.com.cn/jsref/jsref_replace.asp\\\">W3CSchool</a>',\\n  '你的所有小程序中如果有违禁品，就无法使用本批量修改功能。想用的话，可以把违禁小程序删除或用非违禁词替换掉违禁词。',\\n  '类别属性存储与显示的不一样，以下为对应关系{ all:聚合, video: 视频, music: 音频, live: 直播, cartoon: 漫画, read: 阅读, picture: 图集, news: 资讯, tool: 工具, other: 其它 }',\\n  '目前也不知道能做什么了，还需要什么功能可以告诉我，但不保证能实现哦',\\n].map((v) => ({ title: v })))\"}]","proxy":"","icon":"https://lanmeiguojiang.com/tubiao/movie/34.svg"},{"last_chapter_rule":"","title":"初学者写源","author":"","version":0,"type":"tool","url":"hiker://empty##","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar res = {};\nvar items = [];\nvar img = 'https://bing.img.run/1366x768.php';\nitems.push({\n    img: img,\n    url: img + \"#.jpg\",\n    desc: '0',\n    col_type: 'card_pic_1'\n});\n\nitems.push({\n    title: \"““””<h4>【初学者教程&模板&写源工具收集】</h4>\" + '<span style=\"color: grey\">欢迎各位小可爱添加或提建议</span>',\n    col_type: \"text_center_1\",\n    url: \"toast://欢迎使用\"\n});\n\nvar Title = ['海阔组件展示&复制', '请求测试『Joe』', 'XYQ分类生成器『香雅情』', 'Json分类生成器『香雅情』']\nvar Page = ['ZJ', 'Home', 'XYQ', 'Json']\n\nTitle.forEach(function(data, id) {\n    items.push({\n        title: data,\n        url: \"hiker://page/\"+Page[id]+\"#noHistory##noRecordHistory#\",\n        col_type: \"text_2\",\n        extra: {\n            newWindow: true,\n            windowId: MY_RULE.title\n        }\n    });\n})\n\nconst Color = \"#19B89D\";\n//可复制这一段加入你添加/修改了什么\nvar des_desc = '<h1 style=\"text-align: center;\">🐾更新[1216]</h1>' +\n    '<<blockquote><font color=\"red\">①加入组件展示|写源工具🗜</br>②加入普通一级模板<br></<blockquote>'\n\n\n//下面不用动\nitems.push({\n    title: '更新详情 <small><small><span style=\"color:#19B89D\">展开></span></small></small>',\n    img: \"https://lanmeiguojiang.com/tubiao/more/197.png\",\n    url: $(\"#noLoading#\").lazyRule((jjid, decid, des_desc) => {\n        if (getMyVar(\"jjs\", \"收起\") == \"收起\") {\n            putMyVar(\"jjs\", \"展开\");\n\n            updateItem({\n                extra: {\n                    id: jjid\n                },\n                title: '更新详情 <small><small><span style=\"color:#19B89D\">收起></span></small></small>'\n            })\n\n            updateItem({\n                extra: {\n                    textSize: 14,\n                    lineSpacing: 3,\n                    id: decid\n                },\n                title: '<span style=\"color:#808080\">' + des_desc + '</span>'\n            })\n            return \"hiker://empty\"\n        } else {\n            putMyVar(\"jjs\", \"收起\");\n\n            updateItem({\n                extra: {\n                    id: jjid\n                },\n                title: '更新详情<small><small><span style=\"color:#19B89D\">展开></span></small></small>'\n            })\n\n            updateItem({\n                extra: {\n                    textSize: 14,\n                    lineSpacing: 3,\n                    id: decid\n                },\n                title: '<span style=\"color:#808080\">' + des_desc.substr(0, 150)\n            })\n            return \"hiker://empty\"\n        }\n\n    }, MY_RULE + \"_jjid\", MY_RULE + \"_decid\", des_desc),\n    col_type: \"avatar\",\n    extra: {\n        id: MY_RULE + \"_jjid\"\n    }\n});\n\nitems.push({\n    title: '<span style=\"color:#808080\">' + des_desc.substr(0, 150),\n    col_type: \"rich_text\",\n    extra: {\n        textSize: 14,\n        lineSpacing: 3,\n        id: MY_RULE + \"_decid\"\n    }\n});\n\nres.data = items;\nsetHomeResult(res);","searchFind":"","search_url":"","group":"工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"普通一级\",\"path\":\"PY\",\"rule\":\"js:\\nvar d = [];\\nvar code = getResCode();\\n//定位填在\\\"\\\"或''中，不可重复使用同一种符号\\npdfa(code, 列表定位).forEach(function(zdata) {\\n        d.push({\\n            title: pdfh(zdata, 标题定位),\\n            url: pd(zdata, 链接定位),\\n            pic_url: pd(zdata, 图片定位),\\n            //如图片需重定向可加Referer\\n            //pic_url: pd(zdata, 图片定位)+\\\"@Referer=\\\"+MY_HOME,\\n            desc: pdfh(zdata, 详情定位),\\n            col_type: \\\"movie_3\\\"//显示样式\\n        });\\n    });\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"组件展示\",\"path\":\"ZJ\",\"rule\":\"js:\\nlet d = [];\\nd.push({\\n    title: '点击即复制',\\n    col_type: 'text_center_1',\\n    url: 'toast://点我干嘛？',\\n    desc:'相应的样式名',\\n})\\nd.push({\\n    title: 'text_1',\\n    col_type: 'text_1',\\n    url: 'copy://text_1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'text_2',\\n    col_type: 'text_2',\\n    url: 'copy://text_2',\\n    desc:'',\\n})\\nd.push({\\n    title: 'text_3',\\n    col_type: 'text_3',\\n    url: 'copy://text_3',\\n    desc:'',\\n})\\nd.push({\\n    title: 'text_4',\\n    col_type: 'text_4',\\n    url: 'copy://text_4',\\n    desc:'',\\n})\\nd.push({\\n    title: 'text_5',\\n    col_type: 'text_5',\\n    url: 'copy://text_5',\\n    desc:'',\\n})\\nd.push({\\n    title: 'text_center_1',\\n    col_type: 'text_center_1',\\n    url: 'copy://text_center_1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'long_text',\\n    col_type: 'text_1',\\n    url: 'copy://long_text',\\n    desc:'',\\n})\\nd.push({\\n    title: 'rich_text',\\n    col_type: 'text_1',\\n    url: 'copy://rich_text',\\n    desc:'',\\n})\\nd.push({\\n    title: 'text_icon',\\n    col_type: 'text_icon',\\n    url: 'copy://text_icon',\\n    desc:'',\\n})\\nd.push({\\n    title: 'movie_1',\\n    col_type: 'movie_1',\\n    url: 'copy://movie_1',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'movie_1_left_pic',\\n    col_type: 'movie_1_left_pic',\\n    url: 'copy://movie_1_left_pic',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'movie_1_vertical_pic',\\n    col_type: 'movie_1_vertical_pic',\\n    url: 'copy://movie_1_vertical_pic',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'movie_1_vertical_pic_blur',\\n    col_type: 'movie_1_vertical_pic_blur',\\n    url: 'copy://movie_1_vertical_pic_blur',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'movie_2',\\n    col_type: 'movie_2',\\n    url: 'copy://movie_2',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'movie_3',\\n    col_type: 'movie_3',\\n    url: 'copy://movie_3',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'movie_3_marquee',\\n    col_type: 'movie_3_marquee',\\n    url: 'copy://movie_3_marquee',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'pic_1',\\n    col_type: 'pic_1',\\n    url: 'copy://pic_1',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'pic_1_full',\\n    col_type: 'text_1',\\n    url: 'copy://pic_1_full',\\n    desc:'',\\n})\\nd.push({\\n    title: 'pic_1_full',\\n    col_type: 'pic_1_full',\\n    url: 'copy://pic_1_full',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'pic_1_card',\\n    col_type: 'pic_1_card',\\n    url: 'copy://pic_1_card',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'pic_2',\\n    col_type: 'pic_2',\\n    url: 'copy://pic_2',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'pic_2_card',\\n    col_type: 'pic_2_card',\\n    url: 'copy://pic_2_card',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'pic_3',\\n    col_type: 'text_1',\\n    url: 'copy://pic_3',\\n    desc:'',\\n})\\nd.push({\\n    title: 'pic_3',\\n    col_type: 'pic_3',\\n    url: 'copy://pic_3',\\n    img: 'hiker://images/home_pic1',\\n    desc:'pic_3',\\n})\\nd.push({\\n    title: 'pic_3_square',\\n    col_type: 'text_1',\\n    url: 'copy://pic_3_square',\\n    desc:'',\\n})\\nd.push({\\n    title: 'pic_3_square',\\n    col_type: 'pic_3_square',\\n    url: 'copy://pic_3_square',\\n    img: 'hiker://images/home_pic1',\\n    desc:'pic_3_square',\\n})\\nd.push({\\n    title: 'icon_1_search',\\n    col_type: 'icon_1_search',\\n    url: 'copy://icon_1_search',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'icon_2',\\n    col_type: 'icon_2',\\n    url: 'copy://icon_2',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'icon_2_round',\\n    col_type: 'icon_2_round',\\n    url: 'copy://icon_2_round',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'icon_small_3',\\n    col_type: 'icon_small_3',\\n    url: 'copy://icon_small_3',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\n\\nd.push({\\n    title: 'icon_4',\\n    col_type: 'icon_4',\\n    url: 'copy://icon_4',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'icon_4_card',\\n    col_type: 'icon_4_card',\\n    url: 'copy://icon_4_card',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'icon_small_4',\\n    col_type: 'icon_small_4',\\n    url: 'copy://icon_small_4',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'icon_round_4',\\n    col_type: 'icon_round_4',\\n    url: 'copy://icon_round_4',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'icon_round_small_4',\\n    col_type: 'icon_round_small_4',\\n    url: 'copy://icon_round_small_4',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\n\\nd.push({\\n    title: 'icon_5',\\n    col_type: 'icon_5',\\n    url: 'copy://icon_5',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'input',\\n    col_type: 'input',\\n    url: 'copy://input',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'avatar',\\n    col_type: 'avatar',\\n    url: 'copy://avatar',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'x5_webview_single',\\n    col_type: 'text_center_1',\\n    url: 'copy://x5_webview_single',\\n    desc:'',\\n})\\nd.push({\\n    title: 'flex_button',\\n    col_type: 'flex_button',\\n    url: 'copy://flex_button',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'scroll_button',\\n    col_type: 'scroll_button',\\n    url: 'copy://scroll_button',\\n    desc:'',\\n})\\nd.push({\\n    title: 'line分割线细',\\n    col_type: 'flex_button',\\n    url: 'copy://line',\\n    desc:'',\\n})\\nd.push({\\n    title: '',\\n    col_type: 'line',\\n    url: '',\\n    desc:'',\\n})\\nd.push({\\n    title: 'line_blank分割线粗',\\n    col_type: 'flex_button',\\n    url: 'copy://line_blank',\\n    desc:'',\\n})\\nd.push({\\n    title: '',\\n    col_type: 'line_blank',\\n    url: '',\\n    desc:'',\\n})\\nd.push({\\n    title: 'blank_block',\\n    col_type: 'flex_button',\\n    url: 'copy://blank_block',\\n    desc:'',\\n})\\nd.push({\\n    title: '',\\n    col_type: 'blank_block',\\n    url: '',\\n    desc:'',\\n})\\nd.push({\\n    title: 'big_blank_block',\\n    col_type: 'flex_button',\\n    url: 'copy://big_blank_block',\\n    desc:'',\\n})\\nd.push({\\n    title: '',\\n    col_type: 'big_blank_block',\\n    url: '',\\n    desc:'',\\n})\\nd.push({\\n    title: 'big_big_blank_block',\\n    col_type: 'flex_button',\\n    url: 'copy://big_big_blank_block',\\n    desc:'',\\n})\\nd.push({\\n    title: '',\\n    col_type: 'big_big_blank_block',\\n    url: '',\\n    desc:'',\\n})\\nd.push({\\n    title: 'card_pic_1',\\n    col_type: 'card_pic_1',\\n    url: 'copy://card_pic_1',\\n    img: 'hiker://images/home_pic1',\\n    desc:'0',\\n})\\nd.push({\\n    title: 'card_pic_2',\\n    col_type: 'card_pic_2',\\n    url: 'copy://card_pic_2',\\n    img: 'hiker://images/home_pic1',\\n    desc:'0',\\n})\\nd.push({\\n    title: 'card_pic_2_2',\\n    col_type: 'card_pic_2_2',\\n    url: 'copy://card_pic_2_2',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'card_pic_2_2_left',\\n    col_type: 'card_pic_2_2_left',\\n    url: 'copy://card_pic_2_2_left',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nd.push({\\n    title: 'card_pic_3',\\n    col_type: 'card_pic_3',\\n    url: 'copy://card_pic_3',\\n    img: 'hiker://images/home_pic1',\\n    desc:'',\\n})\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"XYQ分类生成器\",\"path\":\"XYQ\",\"rule\":\"js:\\nvar items = [];\\n\\nitems.push({\\n    title: \\\"取源码\\\",\\n    url: $.toString(() => {\\n        function btwaf(netpg, bturl, btua, chars) {\\n            //log(netpg);\\n            if (netpg.indexOf('检测中') != -1) {\\n                let cook = \\\"\\\";\\n                try {\\n                    let bthtml = JSON.parse(fetch(bturl, {\\n                        headers: {\\n                            'User-Agent': btua\\n                        },\\n                        withHeaders: true\\n                    }));\\n                    //log(bthtml);\\n                    netpg = bthtml.body;\\n                    if (bthtml.search(\\\"set-cookie\\\")) {\\n                        cook = JSON.parse(bthtml).headers['set-cookie'][0].join(';');\\n                    }\\n                } catch (e) {\\n                    cook = \\\"\\\";\\n                }\\n                log(\\\"Cookie值：\\\" + cook);\\n                if (cook == \\\"\\\") {\\n                    ghtml = fetch(bturl + \\\"/?btwaf\\\" + netpg.match(/btwaf(.*?)\\\\\\\"/)[1], {\\n                        headers: {\\n                            \\\"User-Agent\\\": btua\\n                        }\\n                    });\\n                } else {\\n                    ghtml = fetch(bturl + \\\"/?btwaf\\\" + netpg.match(/btwaf(.*?)\\\\\\\"/)[1], {\\n                        headers: {\\n                            \\\"User-Agent\\\": btua,\\n                            \\\"Cookie\\\": cook\\n                        }\\n                    });\\n                }\\n            }\\n        }\\n\\n        function gethtml(url, ua, chars) {\\n            if (ua == \\\"\\\") {\\n                ua = MOBILE_UA;\\n            } else if (ua == \\\"手机\\\") {\\n                ua = MOBILE_UA;\\n            } else if (ua == \\\"电脑\\\") {\\n                ua = PC_UA;\\n            } else {\\n                ua = ua.replace(/；；/g, ';');\\n            }\\n            if (chars == \\\"\\\") {\\n                ghtml = request(url, {\\n                    headers: {\\n                        \\\"User-Agent\\\": ua\\n                    }\\n                });\\n            } else {\\n                ghtml = request(url, {\\n                    headers: {\\n                        \\\"Content-Type\\\": \\\"text/html; charset=\\\" + chars,\\n                        \\\"User-Agent\\\": ua\\n                    }\\n                });\\n            }\\n            //log(html);\\n            btwaf(ghtml, url, ua, chars);\\n            return ghtml;\\n        }\\n        showLoading(\\\"正在获取网页源码，请稍候...\\\");\\n        var link = input.split(\\\";\\\");\\n        var html = \\\"\\\";\\n        if (link.length == 1) {\\n            html = gethtml(link[0], \\\"\\\", \\\"\\\");\\n        } else if (link.length == 2) {\\n            html = gethtml(link[0], link[1], \\\"\\\");\\n        } else if (link.length == 3) {\\n            html = gethtml(link[0], link[1], link[2]);\\n        }\\n\\n        //log(html);\\n        putMyVar('rescode', html);\\n        putMyVar('realrescode', html);\\n        //hideLoading();\\n        refreshPage(false);\\n        hideLoading();\\n        return \\\"hiker://empty\\\";\\n    }),\\n    extra: {\\n        type: 'textarea',\\n        height: -1,\\n        onChange: \\\"setItem('linktext',input)\\\",\\n        defaultValue: getItem(\\\"linktext\\\", \\\"https://zjdr.vip/vodshow/id/1/page/1.html;手机;utf-8\\\"),\\n        titleVisible: true\\n    },\\n    col_type: 'input'\\n});\\nif (getMyVar(\\\"contlist\\\", \\\"\\\") != \\\"\\\") {\\n    items.push({\\n        //title: getMyVar(\\\"rescode\\\", \\\"\\\"),\\n        col_type: \\\"input\\\",\\n        extra: {\\n            height: 3,\\n            defaultValue: getMyVar(\\\"contlist\\\", \\\"\\\"),\\n            type: 'textarea',\\n            highlight: true\\n        }\\n\\n    });\\n} else {\\n    items.push({\\n        title: '格式：数组;列表;标题;链接;切前缀;切后缀',\\n        url: \\\"hiker://empty\\\",\\n        col_type: \\\"text_1\\\"\\n    });\\n}\\nvar classText = getItem(\\\"classtext\\\", \\\"body&&.module-class-items;.module-class-items&&a;a&&Text;a&&href;id/;.html\\\");\\nitems.push({\\n    title: \\\"生成\\\",\\n    url: $.toString(() => {\\n        putMyVar('筛选数量', \\\"0\\\");\\n        putMyVar('contlist', \\\"\\\");\\n        putMyVar('classlist', \\\"\\\");\\n\\n        putMyVar('contname', \\\"\\\");\\n        putMyVar('contvalue', \\\"\\\");\\n        showLoading(\\\"正在生成，请稍候...\\\");\\n\\n        function subcont(lin, star, end) {\\n            try {\\n                if (star == \\\"\\\" && end == \\\"\\\") {\\n                    return decodeURIComponent(lin);\\n                } else if (star.length > 0 && end == \\\"\\\") {\\n                    let nub = lin.indexOf(star);\\n                    //log(nub);\\n                    let valu = lin.substring(nub + star.length);\\n                    //log(valu);\\n                    return decodeURIComponent(valu);\\n                } else {\\n                    var str = star + \\\"(.*?)\\\" + end;\\n                    let valu = eval(lin.match(str));\\n                    return decodeURIComponent(valu[1])\\n                }\\n            } catch (e) {\\n                return decodeURIComponent(lin)\\n            }\\n        }\\n\\n\\n\\n        var spl = getItem(\\\"classtext\\\").split(\\\";\\\");\\n        //log(spl.length);\\n        if (getMyVar(\\\"realrescode\\\", \\\"\\\") == \\\"\\\") {\\n            //refreshPage();\\n            hideLoading();\\n            return 'toast://请先获取网页源码。';\\n        } else if (spl[0] == \\\"\\\") {\\n            refreshPage();\\n            hideLoading();\\n            return 'toast://规则格式填写错误，不能为空。';\\n        } else {\\n            var html = getMyVar(\\\"realrescode\\\", \\\"\\\");\\n            try {\\n                var cont = parseDomForArray(html, spl[0]);\\n                putMyVar('筛选数量', cont.length);\\n                //log(cont.length);\\n                for (let j = 0; j < cont.length; j++) {\\n                    putMyVar('classname' + j, \\\"\\\");\\n                    putMyVar('classvalue' + j, \\\"\\\");\\n\\n                    var list = parseDomForArray(cont[j], spl[1] + ':not(:matches(全部|首页|公告|头条|专题|明星|下载|app|APP|类型|分类|资讯|留言|消息|防走|通知|用户|今日|字母))');\\n\\n                    //log('列表：' + list.length);\\n\\n                    for (let i = 0; i < list.length; i++) {\\n                        var listt = getMyVar('classlist', '');\\n                        if (listt.length < 1) {\\n                            var lipt = list[i];\\n                        } else {\\n                            var lipt = listt + '\\\\n\\\\n' + list[i]\\n                        }\\n                        putMyVar('classlist', lipt);\\n\\n                        var title = parseDomForHtml(list[i], spl[2]);\\n                        var url = parseDomForHtml(list[i], spl[3]);\\n                        if (spl.length == 5) {\\n                            url = subcont(url, spl[4], \\\"\\\");\\n                        } else if (spl.length == 6) {\\n                            url = subcont(url, spl[4], spl[5]);\\n                        } else {\\n                            url = subcont(url, \\\"\\\", \\\"\\\");\\n                        }\\n                        var filet = getMyVar('classname' + j, '');\\n                        var file = getMyVar('classvalue' + j, '');\\n                        if (filet.length < 1) {\\n                            var typt = title;\\n                            var typh = url;\\n                        } else {\\n                            var typt = filet + '&' + title;\\n                            var typh = file + '&' + url\\n                        }\\n                        //log(file.length);\\n                        putMyVar('classname' + j, typt);\\n                        putMyVar('classvalue' + j, typh);\\n                    } //for i\\n\\n                    var cfilet = getMyVar('contname', '');\\n                    var cfile = getMyVar('contvalue', '');\\n\\n                    if (getMyVar('classname' + j, '') != '') {\\n                        if (j == 0) {\\n                            var ctypt = '名称：' + getMyVar('classname' + j, '') + '\\\\n替换词：' + getMyVar('classvalue' + j, '') + '\\\\n\\\\n';\\n                        } else {\\n                            var ctypt = cfilet + '名称：' + getMyVar('classname' + j, '') + cfile + '\\\\n替换词：' + getMyVar('classvalue' + j, '') + '\\\\n\\\\n';\\n                        }\\n\\n                        putMyVar('contname', ctypt);\\n                    }\\n                    var clistt = getMyVar('contlist', '');\\n                    if (j == 0) {\\n                        var clipt = cont[j];\\n                    } else {\\n                        var clipt = clistt + '\\\\n\\\\n' + cont[j]\\n                    }\\n                    //log(clipt);\\n                    putMyVar('contlist', clipt);\\n                    //log(getMyVar('contlist', ''));\\n                    //putMyVar('contlist', getMyVar('classlist', '')?getMyVar('contlist', ''):getMyVar('classlist', ''));\\n                    //putMyVar('contlist', getMyVar('classlist', '')?:getMyVar('classlist', ''));\\n                } //for j\\n\\n                putMyVar('contlist', getMyVar('classlist', '') == \\\"\\\" ? getMyVar('contlist', '') : getMyVar('classlist', ''));\\n\\n            } catch (e) {\\n                //putMyVar('判断', \\\"0\\\");\\n                log(\\\"生成报错咯\\\");\\n            }\\n            refreshPage(false);\\n            hideLoading();\\n            return 'hiker://empty';\\n        }\\n    }),\\n    extra: {\\n        type: 'textarea',\\n        height: -1,\\n        onChange: \\\"setItem('classtext',input)\\\",\\n        defaultValue: classText,\\n        titleVisible: true\\n    },\\n    col_type: 'input'\\n});\\n\\n\\nlet contda = getMyVar('筛选数量', '0');\\nif (contda != '0' && getMyVar('classlist', '') != \\\"\\\") {\\n    for (let i = 0; i < contda; i++) {\\n        if (getMyVar('classname' + i, '') != '') {\\n            items.push({\\n                title: \\\"复制\\\" + getMyVar('classname' + i, '').split('&')[0] + \\\"行\\\",\\n                //desc: getVar(\\\"frdtvcode\\\",\\\"\\\"),\\n                url: \\\"confirm://是否需要复制当前内容。.js:\\\" + $.toString((i) => {\\n                    var jieguo = getMyVar('classname' + i, '');\\n                    if (jieguo == '') {\\n                        return 'toast://内容为空,复制失败。';\\n                    } else if (jieguo.length < 1) {\\n                        return 'toast://内容长度不够,复制失败。';\\n                    } else {\\n                        return 'copy://' + getMyVar('classname' + i)\\n                    }\\n                }, i),\\n                col_type: \\\"flex_button\\\"\\n            });\\n\\n            items.push({\\n                title: \\\"复制\\\" + getMyVar('classname' + i, '').split('&')[0] + \\\"行\\\" + \\\"替换词\\\",\\n                //desc: getVar(\\\"frdtvcode\\\",\\\"\\\"),\\n                url: \\\"confirm://是否需要复制当前内容。.js:\\\" + $.toString((i) => {\\n                    var jieguo = getMyVar('classvalue' + i, '');\\n                    if (jieguo == '') {\\n                        return 'toast://内容为空,复制失败。';\\n                    } else if (jieguo.length < 1) {\\n                        return 'toast://内容长度不够,复制失败。';\\n                    } else {\\n                        return 'copy://' + getMyVar('classvalue' + i)\\n                    }\\n                }, i),\\n                col_type: \\\"flex_button\\\"\\n            });\\n        }\\n    }\\n}\\n\\nitems.push({\\n    title: '恢复默认',\\n    url: $('hiker://empty').lazyRule(() => {\\n        clearMyVar('rescode');\\n        clearMyVar('realrescode');\\n\\n        clearMyVar('classname');\\n        clearMyVar(\\\"classvalue\\\");\\n        clearMyVar('contname');\\n        clearMyVar(\\\"contvalue\\\");\\n\\n        clearMyVar('classlist')\\n        clearMyVar('contlist');\\n        clearItem('linktext');\\n        clearItem('classtext');\\n        clearMyVar('筛选数量');\\n        refreshPage(false);\\n        return 'hiker://empty'\\n    }),\\n    col_type: \\\"flex_button\\\"\\n});\\n\\nif (getMyVar('contname', \\\"\\\") != \\\"\\\") {\\n    items.push({\\n        //title: getMyVar(\\\"rescode\\\", \\\"\\\"),\\n        col_type: \\\"input\\\",\\n        extra: {\\n            height: 3,\\n            defaultValue: getMyVar(\\\"contname\\\", \\\"\\\"),\\n            type: 'textarea',\\n            highlight: true\\n        }\\n\\n    });\\n}\\nitems.push({\\n    //title: getMyVar(\\\"rescode\\\", \\\"\\\"),\\n    col_type: \\\"input\\\",\\n    extra: {\\n        height: 5,\\n        onChange: \\\"putMyVar('rescode',input)\\\",\\n        defaultValue: getMyVar(\\\"rescode\\\", \\\"\\\") == \\\"\\\" ? getMyVar(\\\"realrescode\\\", \\\"当前未获取源码。\\\") : getMyVar(\\\"rescode\\\", \\\"\\\"),\\n        type: 'textarea',\\n        highlight: true\\n    }\\n\\n});\\nsetHomeResult(items);\"},{\"col_type\":\"movie_3\",\"name\":\"Json分类生成\",\"path\":\"Json\",\"rule\":\"js:\\nvar res = {};\\nvar items = [];\\nitems.push({\\n    title: 'json数据',\\n    url: 'hiker://empty',\\n    col_type: 'text_1'\\n});\\n\\nitems.push({\\n    title: getVar('myjson', ''),\\n    url: \\\"input://\\\" + getVar('myjson', '') + \\\".js:putVar('myjson',input);refreshPage()\\\",\\n    col_type: 'icon_1_search'\\n});\\n\\n\\nitems.push({\\n    title: '定位(list.type)',\\n    url: 'hiker://empty',\\n    col_type: 'text_1'\\n});\\nitems.push({\\n    title: getVar('mytree', ''),\\n    url: \\\"input://\\\" + getVar('mytree', '') + \\\".js:putVar('mytree',input);refreshPage()\\\",\\n    col_type: 'icon_1_search'\\n});\\n\\nitems.push({\\n    title: '取值(type_name&&type_id)',\\n    url: 'hiker://empty',\\n    col_type: 'text_1'\\n});\\nitems.push({\\n    title: getVar('myval', ''),\\n    url: \\\"input://\\\" + getVar('myval', '') + \\\".js:putVar('myval',input);refreshPage()\\\",\\n    col_type: 'icon_1_search'\\n});\\n//log(list);\\nitems.push({\\n    title: '生成',\\n    url: $('').lazyRule(() => {\\n        var tpjson = JSON.parse(getVar('myjson', '[]'));\\n        var list = 'tpjson.' + getVar('mytree', '');\\n        var spl = getVar('myval', '').split('&&');\\n        var one = 'typec[j].' + spl[0];\\n        var two = 'typec[j].' + spl[1];\\n        //var tpjson = JSON.parse(json);\\n        //log(tpjson);\\n        var typec = eval(list);\\n        //log(typec);\\n        var typet = \\\"\\\",\\n            typel = \\\"\\\";\\n        for (var j = 0; j < typec.length; j++) {\\n            typet += eval(one);\\n            typel += eval(two);\\n            if (j < typec.length - 1) {\\n                typet += \\\"&\\\";\\n                typel += \\\"&\\\";\\n            }\\n        }\\n\\n        putVar('jsontypet', typet);\\n        putVar('jsontypel', typel);\\n        refreshPage();\\n        return 'hiker://empty'\\n    }),\\n    col_type: 'text_3'\\n});\\n\\nitems.push({\\n    title: \\\"复制名称\\\",\\n    url: \\\"confirm://是否需要复制当前内容。.js:\\\" + $.toString(() => {\\n        var jieguo = getVar('jsontypet', '');\\n        if (jieguo == '') {\\n            return 'toast://内容为空,复制失败。';\\n        } else {\\n            return 'copy://' + getVar('jsontypet')\\n        }\\n    }),\\n    col_type: \\\"text_3\\\"\\n});\\n\\nitems.push({\\n    title: \\\"复制替换词\\\",\\n    url: \\\"confirm://是否需要复制当前内容。.js:\\\" + $.toString(() => {\\n        var jieguo = getVar('jsontypel', '');\\n        if (jieguo == '') {\\n            return 'toast://内容为空,复制失败。';\\n        } else {\\n            return 'copy://' + getVar('jsontypel')\\n        }\\n    }),\\n    col_type: \\\"text_3\\\"\\n});\\n\\nitems.push({\\n    title: getVar(\\\"jsontypet\\\", \\\"\\\") + '<br>' + getVar(\\\"jsontypel\\\", \\\"\\\"),\\n    col_type: 'rich_text'\\n});\\n\\nres.data = items;\\nsetHomeResult(res);\"},{\"col_type\":\"movie_3\",\"name\":\"请求测试\",\"path\":\"home\",\"rule\":\"var methods = [\\\"GET\\\", \\\"POST\\\", \\\"PUT\\\", \\\"DELETE\\\"]\\nvar d = [{\\n    desc: \\\"请求链接\\\",\\n    col_type: \\\"input\\\",\\n    extra: {\\n        titleVisible: false,\\n        onChange: $.toString(() => {\\n            putMyVar(\\\"url\\\", input)\\n        }),\\n        defaultValue: getMyVar(\\\"url\\\", \\\"\\\")\\n    }\\n}, {\\n    title: \\\"请求方式:\\\" + (getMyVar(\\\"method\\\", \\\"GET\\\")),\\n    col_type: \\\"text_1\\\",\\n    url: $(methods).select(() => {\\n        putMyVar(\\\"method\\\", input)\\n        refreshPage()\\n    })\\n}, {\\n    col_type: \\\"line_blank\\\"\\n}, {\\n    title: \\\"添加headers\\\",\\n    col_type: \\\"text_center_1\\\",\\n    url: $(\\\"\\\", \\\"键值\\\").input(() => {\\n        return $(\\\"\\\", \\\"值\\\").input((a) => {\\n            var old = storage0.getMyVar(\\\"headers\\\", {})\\n            old[a] = input\\n            storage0.putMyVar(\\\"headers\\\", old)\\n            refreshPage()\\n        }, input)\\n    })\\n}]\\nvar headers = storage0.getMyVar(\\\"headers\\\", {})\\nObject.keys(headers).forEach(item => {\\n    d.push({\\n        title: item,\\n        desc: headers[item],\\n        url: $(\\\"确认删除该项？\\\").confirm((key) => {\\n            var old = storage0.getMyVar(\\\"headers\\\", {})\\n            delete old[key]\\n            storage0.putMyVar(\\\"headers\\\", old)\\n            refreshPage()\\n        }, item),\\n        col_type: \\\"text_1\\\"\\n    })\\n})\\nd.push({\\n    col_type: \\\"line_blank\\\"\\n}, {\\n    title: \\\"添加body\\\",\\n    col_type: \\\"text_center_1\\\",\\n    url: $(\\\"\\\", \\\"键值\\\").input(() => {\\n        return $(\\\"\\\", \\\"值\\\").input((a) => {\\n            var old = storage0.getMyVar(\\\"body\\\", {})\\n            old[a] = input\\n            storage0.putMyVar(\\\"body\\\", old)\\n            refreshPage()\\n        }, input)\\n    })\\n})\\nvar body = storage0.getMyVar(\\\"body\\\", {})\\nObject.keys(body).forEach(item => {\\n    d.push({\\n        title: item,\\n        desc: body[item],\\n        url: $(\\\"确认删除该项？\\\").confirm((key) => {\\n            var old = storage0.getMyVar(\\\"body\\\", {})\\n            delete old[key]\\n            storage0.putMyVar(\\\"body\\\", old)\\n            refreshPage()\\n        }, item),\\n        col_type: \\\"text_1\\\"\\n    })\\n})\\nd.push({\\n    col_type: \\\"line_blank\\\"\\n}, {\\n    title: \\\"发送请求\\\",\\n    url: \\\"hiker://page/report\\\",\\n    col_type: \\\"text_center_1\\\"\\n})\\nsetResult(d)\"},{\"col_type\":\"movie_3\",\"name\":\"请求报告\",\"path\":\"report\",\"rule\":\"js:\\nvar d = [];\\nvar a = JSON.parse(request(getMyVar(\\\"url\\\", \\\"hiker://empty\\\"), {\\n    method: getMyVar(\\\"method\\\", \\\"GET\\\"),\\n    withHeaders: true,\\n    headers: storage0.getMyVar(\\\"headers\\\", {}),\\n    body: storage0.getMyVar(\\\"body\\\", {})\\n}))\\nif (a.error) {\\n    d.push({\\n        title: \\\"错误~~  代码:\\\" + a.statusCode,\\n        desc: a.error\\n    })\\n    log(a)\\n    setPageTitle(\\\"请求失败\\\")\\n} else {\\n    setPageTitle(\\\"请求成功\\\")\\n    Object.keys(a).forEach(item => {\\n        d.push({\\n            title: item + \\\":\\\" + a[item],\\n            col_type: \\\"text_1\\\",\\n            url: a[item] + $(\\\"\\\").lazyRule(() => {\\n                return \\\"copy://\\\" + input\\n            })\\n        })\\n    })\\n}\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"请求测试主页\",\"path\":\"Home\",\"rule\":\"js:$.require(\\\"hiker://page/home\\\")\"}]","proxy":"","icon":""},{"last_chapter_rule":"","title":"选择器语法.m","author":"道长","version":1,"type":"tool","url":"hiker://empty##https://juejin.cn/post/6844904002103050254#11-id选择器","col_type":"movie_3","class_name":"向上滑动即可播放","class_url":"资源加载可能比较慢","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nMY_URL=MY_URL.split(\"##\")[1];\n/** 无需下载APP，点返回即可。*/\nrequire(config.模板);\nsetResult([{\n    col_type: \"x5_webview_single\",\n    url: MY_URL,\n    desc: \"float&&100%\",\n    extra: {\n        canBack: true,\n       // js:注入()\n    }\n}])","searchFind":"","search_url":"","group":"工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"const {getApi} = $.require(\"hiker://page/utiliy?rule=道长仓库Pro\");\nvar 模板 = getApi('importUrl')+\"2505\";\nrequire(模板);\n预处理()","pages":"[]","proxy":"","icon":"https://lanmeiguojiang.com/tubiao/messy/15.svg"},{"last_chapter_rule":"","title":"轻合集生成器","author":"道长","version":10,"type":"other","url":"hiker://empty","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\neval(JSON.parse(fetch('hiker://page/homeIndex')).rule);","searchFind":"","search_url":"","titleColor":"#ff13b66a","group":"工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"主页\",\"path\":\"homeIndex\",\"rule\":\"js:\\n    const {genRule}=$.require(\\\"hiker://page/genApi?rule=道长仓库Pro\\\");\\nconst {color, small} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\naddListener('onClose', $.toString(()=>{\\n    clearVar(\\\"house.qhj\\\");\\n}));\\nlet d=[];\\nd.push(\\n    {\\n        title:\\\"轻合集生成小程序1.1.0\\\",\\n        col_type:\\\"text_1\\\",\\n        url:$(\\\"按照对应格式输入就行了,要来个示例吗？\\\\n支持本地文件与在线文件\\\").confirm(()=>{\\n            putVar(\\\"house.qhj\\\",\\\"轻合集.逐风者@http://hiker.nokia.press/hikerule/dev/json_list?name=510381049\\\");\\n            refreshPage(true);\\n        })\\n    });\\nlet sel_title = ['共享','自用'].map((it) => {\\n    let qhj_mode = getItem('house.qhj_mode','共享');\\n    if(it===qhj_mode){\\n        return '👉'+it;\\n    }else{\\n        return it;\\n    }\\n});\\nd.push(\\n    {\\n        title:\\\"当前模式:\\\"+color(getItem('house.qhj_mode','共享'),'#ff7000'),\\n        col_type:\\\"text_1\\\",\\n        url:$(sel_title,2).select(() => {\\n            setItem('house.qhj_mode',input.replace('👉',''));\\n            refreshPage(true);\\n            return 'toast://已设置生成模式为:'+input\\n        })\\n});\\n\\nd.push({\\n    title: '生成',\\n    desc: \\\"轻合集.dz@http://hiker.nokia.press/hikerule/dev/json_list?name=510381049\\\",\\n    extra: {\\n        onChange: \\\"putVar('house.qhj',input)\\\",\\n        titleVisible: true,\\n        defaultValue:getVar('house.qhj')\\n    },\\n    url:$.toString((genRule) => {\\n        // 定义字符串替换全部函数\\n        if(getVar('house.qhj')&&getVar('house.qhj').includes('@')) {\\n            let new_name = getVar('house.qhj').split('@')[0];\\n            let new_url = getVar('house.qhj').split('@')[1];\\n            if(!new_url.startsWith('http')){\\n                if(new_url.startsWith('/storage/')||new_url.startsWith('/sdcard/')){\\n                    new_url = 'file://'+new_url;\\n                }else if(new_url.startsWith('hiker://')){\\n\\n                }else {\\n                    return 'toast://文件地址有误'\\n                }\\n            }\\n            if(getItem('house.qhj_mode','共享')==='共享'){\\n                if(!new_url.startsWith('http')){\\n                    let text = fetch(new_url);\\n                    if(text&&text.length>2){//本地有内容且两个字符以上\\n                        try {\\n                            JSON.parse(text);\\n                            const {taskCall, taskRun,taskReq} = $.require(\\\"hiker://page/taskCall?rule=道长仓库Pro\\\");\\n                            log('开始执行任务仓库获取文件外链');\\n                            let result = taskCall(15,'uploadText',[new_name+'.json',text]);\\n                            let short_url = new_url;\\n                            log('返回状态码:'+result.status);\\n                            if (result.status == 0) {\\n                                short_url = result.result[0];\\n                                log(short_url);\\n                            }\\n                            let import_rule=genRule(new_name,short_url);\\n                            copy(import_rule);\\n                            putVar(\\\"import_rule\\\",import_rule);\\n                            refreshPage(true);\\n                            return 'toast://成功生成轻合集:' + new_name+'并复制到剪切板';\\n                        }catch (e) {\\n\\n                        }\\n                    }\\n                }\\n            }\\n            let import_rule=genRule(new_name,new_url);\\n            copy(import_rule);\\n            putVar(\\\"import_rule\\\",import_rule);\\n            refreshPage(true);\\n            return 'toast://成功生成轻合集:' + new_name+'并复制到剪切板';\\n        }else{\\n            return 'toast://你个憨批，本道不陪你玩了';\\n        }\\n    },genRule),\\n    col_type: \\\"input\\\"\\n});\\nd.push({\\n    title:\\\"复制剪切板口令\\\",\\n    desc:\\\"生成后会自动复制,这里留个复制历史记录\\\",\\n    col_type:\\\"text_1\\\",\\n    url:$().lazyRule(()=>{\\n        copy(getVar(\\\"import_rule\\\"));\\n        return \\\"hiker://empty\\\"\\n    })\\n});\\nd.push({\\n    title: '““””<span style=\\\"color: #ff7000\\\">导入轻合集</span>',\\n    url: $().lazyRule((import_rule)=>{\\n        if(!import_rule){\\n            return 'toast://没有历史口令，无法导入';\\n        }\\n        let ruleCode=parsePaste(import_rule.split(\\\"\\\\n\\\")[0]);\\n        importUrl = 'rule://' + base64Encode(ruleCode);\\n        return importUrl\\n    },getVar(\\\"import_rule\\\")),\\n    col_type: 'text_1'\\n});\\nd.push({\\n    title:getVar(\\\"import_rule\\\"),\\n    col_type:\\\"long_text\\\"\\n});\\n\\nsetResult(d)\"}]","proxy":"","icon":"#ff13b66a"}]