[{"last_chapter_rule":"","title":"聚直播","author":"小棉袄🌞&Joker","version":10,"type":"live","url":"hiker://empty","col_type":"icon_2_round","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\neval(JSON.parse(request(\"hiker://page/config\")).rule); //getConfig\n\nlet data = [],\n    config = getConfig();\nconfig.data = config.data.filter(v => !v.inVisible);\nif (config.data.length <= 0) {\n    data = $.require('hiker://page/renderSetting').renderSetting();\n} else {\n    let select = getItem(\"live-select\", config.data[0].name),\n        has = config.data.map(i => i.name).includes(select);\n    if (!has) {\n        select = config.data[0].name;\n    }\n\n    data.push({\n        title: '聚直播'.bold() + ' &nbsp &nbsp ' + '⚙ 聚直播设置 ⚙'.small(),\n        col_type: \"avatar\",\n        pic_url: MY_RULE.icon,\n        url: $(\"hiker://empty#noLoading#\").rule(() => {\n            addListener('onClose', 'refreshPage()')\n            setResult($.require('hiker://page/renderSetting').renderSetting())\n        })\n    })\n\n    data.push({\n        title: '搜索',\n        desc: '请输入搜索关键词',\n        extra: {\n            defaultValue: getVar('search_key', ''),\n            onChange: 'putVar(\"search_key\",input)'\n        },\n        col_type: 'input',\n        url: $.toString(() => {\n            return 'hiker://search?rule=' + getMyVar('title') + '&s=' + getVar('search_key', '')\n        })\n    })\n\n\n\n    for (source of config.data) {\n        data.push({\n            title: source.name == select ? \"““””<span style='color: #19B89D'>\" + select + \"</span>\" : source.name,\n            col_type: \"scroll_button\",\n            url: $('#noLoading#').lazyRule((a) => {\n                setItem(\"live-select\", a);\n                setItem('selectGroup', '');\n                refreshPage();\n                return \"hiker://empty\"\n            }, source.name)\n        })\n    }\n\n    data.push({\n        col_type: 'blank_block'\n    })\n\n    for (source of config.data) {\n        if (source.name == select) {\n            try {\n                let items = $.require('hiker://page/renderData').renderLiveData(source.url);\n                let groups = Object.keys(items);\n                //groups.push(groups.splice(groups.indexOf(0), 1)[0]);\n                let selectGroup = getItem('selectGroup', groups[0]);\n                if (selectGroup == \"\" || !groups.includes(selectGroup)) selectGroup = groups[0];\n                groups.forEach((group) => {\n                    if (group) {\n                        data.push({\n                            title: group == selectGroup ? \"““””<span style='color: #19B89D'>\" + group + \"</span>\" : group,\n                            url: $('#noLoading#').lazyRule((group) => {\n                                setItem('selectGroup', group);\n                                refreshPage();\n                                return 'hiker://empty'\n                            }, group),\n                            col_type: 'scroll_button',\n                            extra: {\n                                lineVisible: false\n                            }\n                        })\n                    }\n                })\n                \n                for (let title in items[selectGroup]) {\n                    data.push({\n                        title: title,\n                        url: $().lazyRule((sourceurl,selectGroup,title) => {\n                            let items = $.require('hiker://page/renderData').renderLiveData(sourceurl);\n                            let surls = items[selectGroup][title].url;\n                            let sheaders = items[selectGroup][title].headers;\n                            for (let groupi in items){\n                                let group = items[groupi];\n                                if(!group) continue;\n                                for (let ititle in group){\n                                    if(ititle == title && !!group[ititle]){\n                                        let urls = group[ititle].url;\n                                        let headers = group[ititle].headers;\n                                       surls = surls.concat(urls);\n                                       sheaders = sheaders.concat(headers);\n                                    }\n                                }\n                            }\n                            surls = Array.from(new Set(surls));\n                            sheaders = Array.from(new Set(sheaders));\n                            return JSON.stringify({\n                                urls: surls,\n                                headers: sheaders\n                            })\n                        },source.url,selectGroup,title),\n                        //col_type: 'text_3',\n                        img: \"https://lanmeiguojiang.com/tubiao/more/228.png\",\n                        extra: {\n                            videoExcludeRules: [\".php?id=\"]\n                        }\n                    })\n                }\n            } catch (e) {\n                data.push({\n                    title: \"数据加载失败\\n\" + JSON.stringify(e),\n                    col_type: \"long_text\"\n                })\n            }\n            break;\n        }\n    }\n\n\n}\nsetResult(data);","searchFind":"js:\neval(JSON.parse(request(\"hiker://page/config\")).rule);\nlet config = getConfig();\nlet rules = config.data.map((source) => {\n    return {\n        title: source.name,\n        search_url: 'hiker://empty?key=**',\n        searchFind: 'js:' + $.toString((url, rule_title) => {\n            let d = [],\n                key = getParam('key');\n            let items = $.require('hiker://page/renderData?rule=' + rule_title).renderLiveData(url);\n            for (let group in items) {\n                for (let title in items[group]) {\n                    if (title.indexOf(key) >= 0 || title.toLowerCase().indexOf(key) >= 0) {\n                        d.push({\n                            title: title,\n                            url: JSON.stringify({\n                                urls: items[group][title].url,\n                                headers: items[group][title].headers\n                            })\n                        })\n                    }\n                }\n            }\n            setResult(d);\n        }, source.url, getMyVar('title'))\n    };\n})\nsetResult([{\n    title: \"点我开始聚搜\",\n    url: \"hiker://search?s=\" + getParam(\"key\"),\n    extra: {\n        rules: $.toString((rules) => {\n            return JSON.stringify(rules)\n        }, rules)\n    }\n}])","search_url":"hiker://empty?key=**","group":"收藏","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"putMyVar('title',MY_RULE.title);","pages":"[{\"col_type\":\"movie_3\",\"name\":\"加载数据\",\"path\":\"config\",\"rule\":\"function getConfig() {\\n    try {\\n        let config = fetch(\\\"hiker://files/rules/live/config.json\\\");\\n        if (!config || config == \\\"\\\") {\\n            return {\\n                data: [],\\n                version: 0\\n            }\\n        } else {\\n            return JSON.parse(config)\\n        }\\n    } catch (e) {\\n        try {\\n            toast(\\\"配置文件格式有误\\\")\\n        } catch (e) {}\\n        return {\\n            data: [],\\n            version: 0\\n        }\\n    }\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"批量导入\",\"path\":\"batchIm\",\"rule\":\"function batchImport(input, rule) {\\n    input = input.trim();\\n    if (input.length < 3 || input[0] != \\\"{\\\") {\\n        return \\\"toast://请输入正确的格式\\\"\\n    }\\n    let im = JSON.parse(input);\\n    if (im.data == null || im.data.length < 1) {\\n        return \\\"toast://请输入正确的格式\\\"\\n    }\\n    eval(JSON.parse(request(\\\"hiker://page/config?rule=\\\" + rule)).rule);\\n    let config = getConfig();\\n    let count = 0;\\n    let all = config.data.map(it => it.url + \\\"&&&\\\").join();\\n    for (let i of im.data) {\\n        if (all.indexOf(i.url + \\\"&&&\\\") >= 0) {\\n            //重复的不要\\n            continue;\\n        }\\n        count++;\\n        config.data.push(i)\\n    }\\n    writeFile(\\\"hiker://files/rules/live/config.json\\\", JSON.stringify(config));\\n    refreshPage();\\n    return \\\"toast://已导入\\\" + count + \\\"条订阅源\\\";\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"直播数据\",\"path\":\"renderData\",\"rule\":\"function renderLiveData(url) {\\n    let m3u = \\\"\\\";\\n    if (url.startsWith('hiker://') || url.startsWith('file://')) {\\n        m3u = fetch(url);\\n    } else {\\n        let interval = Number(getItem('interval', '24')),\\n            oldData = fetch('hiker://files/libs/' + md5(url) + '.js'),\\n            remoteData = '';\\n        try {\\n            remoteData = fetchCache(url, interval, {\\n                timeout: 50000\\n            });\\n        } catch (e) {}\\n        if (!remoteData.includes('http') || remoteData.includes('<body>')) {\\n            log('更新失败');\\n            if (oldData) writeFile('hiker://files/libs/' + md5(url) + '.js', oldData);\\n            m3u = oldData;\\n        } else {\\n            m3u = remoteData;\\n        }\\n    }\\n\\n    let mode = m3u.indexOf('#EXTM3U') == 0,\\n        re;\\n    if (mode) {\\n        re = /(.*),(.*)\\\\s*?((?:http|rtmp)[^#\\\\s]*)/g;\\n    } else {\\n        re = /()(?:\\\\B\\\\$c_start|\\\\B#{1,2})?(.*?),?(##|头#|\\\\$c_end|,?#genre#|(?:http|rtmp)[^\\\\s]*)/g;\\n    }\\n\\n    let items = {},\\n        group = '未分组';\\n    for (let i = re.exec(m3u); i != null; i = re.exec(m3u)) {\\n        if (mode) {\\n            group = (i[1].match(/group-title=\\\"(.*?)\\\"/) || [null, group])[1];\\n        } else if (['#genre#', '##', '头#', '$c_end'].includes(i[3])) {\\n            group = i[2];\\n            continue;\\n        }\\n        let title = i[2],\\n            url = i[3].includes('#') ? i[3].split('#') : [i[3]],\\n            headers = [];\\n        if (!url[url.length - 1]) url.pop();\\n        url.forEach((v, index, array) => {\\n            if (/;\\\\{(.*)\\\\}/.test(v)) {\\n                let obj = {},\\n                    con = v.match(/;\\\\{(.*)\\\\}/)[1],\\n                    arr = con.split('&&');\\n                arr.forEach((i) => {\\n                    let [key, value] = i.split('@');\\n                    obj[key] = value.replace(/;/g, '；；');\\n                })\\n                array[index] = v.match(/^([^;]*);\\\\{/)[1]\\n                headers.push(obj);\\n            } else {\\n                headers.push({\\n                    'User-Agent': MOBILE_UA.replace(/;/g, '；；')\\n                });\\n            }\\n            if (array[index].includes(\\\".php?id=\\\")) {\\n                array[index] = \\\"video://\\\" + array[index]\\n            } else {\\n                array[index] = array[index].replace(/;/g, '；；') + '#isVideo=true#';\\n            }\\n        });\\n        if (items[group]) {\\n            if (items[group][title]) {\\n                items[group][title].url = items[group][title].url.concat(url);\\n                items[group][title].headers = items[group][title].headers.concat(headers);\\n            } else {\\n                items[group][title] = {\\n                    url: url,\\n                    headers: headers\\n                };\\n            }\\n        } else {\\n            items[group] = {};\\n            items[group][title] = {\\n                url: url,\\n                headers: headers\\n            };\\n        };\\n    }\\n    return items;\\n}\\n\\n$.exports = {\\n    renderLiveData: renderLiveData\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"设置页\",\"path\":\"renderSetting\",\"rule\":\"function renderSetting() {\\n    function getColoredText(text) {\\n        return '““””<span style=\\\"color: #19B89D\\\">' + text + '</span>';\\n    }\\n    const d = [];\\n    let interval = getItem('interval', '24');\\n    d.push({\\n        title: interval == -1 ? '已禁止自动更新'.fontcolor(\\\"#19B89D\\\").bold() : ('更新间隔:' + interval + '小时').fontcolor(\\\"#19B89D\\\").bold(),\\n        url: $(interval, '输入n为正整数时，每隔n小时自动更新\\\\n为0时，每次打开都会更新\\\\n为-1时，禁止自动更新').input(() => {\\n            if (parseInt(input) >= -1) {\\n                setItem('interval', input);\\n            }\\n            refreshPage();\\n            return 'hiker://empty'\\n        }),\\n        pic_url: 'https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fis4.mzstatic.com%2Fimage%2Fthumb%2FPurple3%2Fv4%2Fdf%2Ff6%2Fda%2Fdff6da83-47d7-9cb6-2398-1919c13837b4%2Fmzl.kgmnwodo.png%2F0x0ss-85.jpg&refer=http%3A%2F%2Fis4.mzstatic.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1638629349&t=2f6d967185fe2b9c54e8b230eb83e66c',\\n        col_type: \\\"avatar\\\"\\n    });\\n\\n    d.push({\\n        col_type: \\\"big_blank_block\\\"\\n    });\\n\\n    d.push({\\n        title: getColoredText(\\\"新建订阅\\\"),\\n        col_type: \\\"scroll_button\\\",\\n        desc: \\\"请输入直播源订阅地址\\\",\\n        url: $('', '请输入订阅地址').input((rule) => {\\n            if (input == \\\"\\\") {\\n                return \\\"toast://不能为空\\\"\\n            } else if (input.indexOf(\\\"http\\\") != 0 && input.indexOf(\\\"file\\\") != 0 && input.indexOf(\\\"hiker\\\") != 0) {\\n                return \\\"toast://链接格式有误\\\"\\n            } else {\\n                return $('', \\\"请输入订阅标题\\\").input((url, rule) => {\\n                    eval(JSON.parse(request(\\\"hiker://page/config?rule=\\\" + rule)).rule);\\n                    let config = getConfig();\\n                    config.data.push({\\n                        name: input,\\n                        url: url\\n                    });\\n                    writeFile(\\\"hiker://files/rules/live/config.json\\\", JSON.stringify(config));\\n                    refreshPage();\\n                    return \\\"toast://已保存\\\";\\n                }, input, rule)\\n            }\\n        }, getMyVar('title'))\\n    });\\n\\n    d.push({\\n        title: getColoredText(\\\"导入订阅\\\"),\\n        col_type: \\\"scroll_button\\\",\\n        url: $('', '支持原始数据和云剪贴板分享链接').input((rule) => {\\n            eval(JSON.parse(request(\\\"hiker://page/batchIm?rule=\\\" + rule)).rule);\\n            if (input.startsWith('聚直播分享##')) {\\n                input = parsePaste(input.split('##\\\\n')[1]);\\n            }\\n            return batchImport(input, rule);\\n        }, getMyVar('title'))\\n    });\\n    d.push({\\n        title: getColoredText(\\\"导入本地源\\\"),\\n        col_type: \\\"scroll_button\\\",\\n        desc: \\\"请输入直播源名称\\\",\\n        url: $('', '请输入直播源名称').input((rule) => {\\n            if (input == \\\"\\\") {\\n                return \\\"toast://不能为空\\\"\\n            } else {\\n                return \\\"fileSelect://\\\" + $.toString((name) => {\\n                    let s = input.split(\\\"/\\\")\\n                    var url = \\\"hiker://files/cache/live/\\\" + name + \\\".m3u\\\"\\n                    var c = fetch(\\\"hiker://files/cache/\\\" + s[s.length - 1])\\n                    if (!c.includes('http')) {\\n                        return 'toast://非法文件'\\n                    }\\n                    writeFile(url, c)\\n                    eval(JSON.parse(request(\\\"hiker://page/config?rule=聚直播\\\")).rule);\\n                    let config = getConfig();\\n                    config.data.push({\\n                        name: name,\\n                        url: url\\n                    });\\n                    writeFile(\\\"hiker://files/rules/live/config.json\\\", JSON.stringify(config));\\n                    refreshPage();\\n                    return 'toast://已保存'\\n                }, input)\\n            }\\n        })\\n    });\\n    d.push({\\n        title: getColoredText(\\\"分享订阅\\\"),\\n        col_type: \\\"scroll_button\\\",\\n        url: $([\\\"原始数据\\\", \\\"云剪贴板\\\", \\\"云口令\\\"], 3).select(() => {\\n            return $('确定导出？\\\\n(禁用订阅不会导出)').confirm((type) => {\\n                eval(JSON.parse(request(\\\"hiker://page/config\\\")).rule);\\n                config = getConfig();\\n                config.data = config.data.filter(v => !v.inVisible);\\n                if (type == \\\"云剪贴板\\\") {\\n                    var data = '聚直播分享##\\\\n' + sharePaste(JSON.stringify(config));\\n                } else if (type == \\\"云口令\\\") {\\n                    var data = '聚直播分享,复制后打开软件即可导入\\\\n' + sharePaste(JSON.stringify(config)) + '@import=js:eval(JSON.parse(fetch(\\\"hiker://page/cloud?rule=聚直播\\\")).rule)';\\n                } else {\\n                    var data = JSON.stringify(config);\\n                }\\n                return \\\"copy://\\\" + data;\\n            }, input)\\n        })\\n    });\\n    d.push({\\n        title: getColoredText(\\\"编辑全部\\\"),\\n        col_type: \\\"scroll_button\\\",\\n        url: \\\"editFile://hiker://files/rules/live/config.json\\\"\\n    });\\n\\n    d.push({\\n        col_type: \\\"blank_block\\\"\\n    });\\n\\n    eval(JSON.parse(request(\\\"hiker://page/config\\\")).rule);\\n    config = getConfig();\\n    let editMode = getMyVar('editMode', '启用禁用');\\n    ['启用禁用', '删除订阅', '重新排序', '编辑订阅', '清除缓存'].forEach((v) => {\\n        d.push({\\n            title: v == editMode ? '““””' + v.bold().fontcolor('#19B89D') : v,\\n            url: v == editMode ? 'hiker://empty' : $('#noLoading#').lazyRule((v) => {\\n                putMyVar('editMode', v)\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, v),\\n            col_type: 'scroll_button'\\n        })\\n    });\\n    config.data.forEach((v, i) => {\\n        let el = {\\n            title: v.name,\\n            col_type: \\\"text_3\\\"\\n        }\\n        switch (editMode) {\\n            case '启用禁用':\\n                el.title = (v.inVisible ? '🔴 ' : '🟢 ') + el.title\\n                el.url = $('#noLoading#').lazyRule((i) => {\\n                    eval(JSON.parse(request(\\\"hiker://page/config\\\")).rule);\\n                    config = getConfig();\\n                    config.data[i].inVisible = !config.data[i].inVisible;\\n                    writeFile(\\\"hiker://files/rules/live/config.json\\\", JSON.stringify(config));\\n                    refreshPage(false);\\n                    return 'hiker://empty'\\n                }, i)\\n                break\\n            case '删除订阅':\\n                el.url = \\\"confirm://确认删除“\\\" + v.name + \\\"”订阅？.js:\\\" + $.toString((i) => {\\n                    eval(JSON.parse(request(\\\"hiker://page/config\\\")).rule);\\n                    config = getConfig();\\n                    config.data.splice(i, 1);\\n                    writeFile(\\\"hiker://files/rules/live/config.json\\\", JSON.stringify(config));\\n                    refreshPage(false);\\n                    return \\\"toast://已删除\\\";\\n                }, i)\\n                break\\n            case '重新排序':\\n                let sortFlag = parseInt(getMyVar('sortFlag', '-1'))\\n                el.title = (sortFlag == i ? '🔃  ' : '') + el.title\\n                if (sortFlag == -1)\\n                    el.url = $('#noLoading#').lazyRule((i) => {\\n                        putMyVar('sortFlag', i.toString())\\n                        refreshPage(false)\\n                        return 'toast://选择要移动到的位置'\\n                    }, i)\\n                else\\n                    el.url = $('#noLoading#').lazyRule((oldIndex, newIndex) => {\\n                        eval(JSON.parse(request(\\\"hiker://page/config\\\")).rule);\\n                        config = getConfig();\\n                        config.data.splice(newIndex, 0, config.data.splice(oldIndex, 1)[0])\\n                        writeFile(\\\"hiker://files/rules/live/config.json\\\", JSON.stringify(config));\\n                        putMyVar('sortFlag', '-1')\\n                        refreshPage(false)\\n                        return 'hiker://empty'\\n                    }, sortFlag, i)\\n                break\\n            case '编辑订阅':\\n                let arr = ['编辑名称', '编辑地址', '编辑内容'];\\n                el.url = $(arr, 3).select((v, i) => {\\n                    if (input == '编辑名称') {\\n                        return $(v.name, '输入新名称').input((i) => {\\n                            eval(JSON.parse(request(\\\"hiker://page/config\\\")).rule);\\n                            config = getConfig();\\n                            if (input) {\\n                                config.data[i].name = input\\n                                writeFile(\\\"hiker://files/rules/live/config.json\\\", JSON.stringify(config));\\n                                refreshPage(false)\\n                                return 'toast://修改成功'\\n                            } else {\\n                                return 'toast://不能为空'\\n                            }\\n                        }, i);\\n                    } else if (input == '编辑地址') {\\n                        return $(v.url, '输入新地址').input((i) => {\\n                            eval(JSON.parse(request(\\\"hiker://page/config\\\")).rule);\\n                            config = getConfig();\\n                            if (input == \\\"\\\") {\\n                                return \\\"toast://不能为空\\\"\\n                            } else if (input.indexOf(\\\"http\\\") != 0 && input.indexOf(\\\"file\\\") != 0 && input.indexOf(\\\"hiker\\\") != 0) {\\n                                return \\\"toast://链接格式有误\\\"\\n                            } else {\\n                                config.data[i].url = input\\n                                writeFile(\\\"hiker://files/rules/live/config.json\\\", JSON.stringify(config));\\n                                refreshPage(false)\\n                                return 'toast://修改成功'\\n                            }\\n                        }, i);\\n                    } else if (input == '编辑内容') {\\n                        if (v.url.startsWith('file://') || v.url.startsWith('hiker://files')) {\\n                            return 'editFile://' + v.url;\\n                        }\\n                        return 'editFile://hiker://files/libs/' + md5(v.url) + '.js'\\n                    }\\n                }, v, i);\\n                break;\\n            case '清除缓存':\\n                el.url = $('确定清除“' + v.name + '”订阅缓存？\\\\n(可立即更新)').confirm((url) => {\\n                    deleteCache(url);\\n                    return 'toast://清除成功'\\n                }, v.url)\\n                break;\\n        }\\n        d.push(el)\\n    });\\n    return d;\\n}\\n\\n$.exports = {\\n    renderSetting: renderSetting\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"云口令\",\"path\":\"cloud\",\"rule\":\"eval(JSON.parse(request(\\\"hiker://page/batchIm?rule=聚直播\\\")).rule);\\nlet content = parsePaste(input);\\nbatchImport(content, \\\"聚直播\\\");\"}]","proxy":"","icon":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fis4.mzstatic.com%2Fimage%2Fthumb%2FPurple3%2Fv4%2Fdf%2Ff6%2Fda%2Fdff6da83-47d7-9cb6-2398-1919c13837b4%2Fmzl.kgmnwodo.png%2F0x0ss-85.jpg&refer=http%3A%2F%2Fis4.mzstatic.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1638629349&t=2f6d967185fe2b9c54e8b230eb83e66c"},{"last_chapter_rule":"","title":"YINRSS","author":"","version":0,"type":"news","url":"hiker://empty#fypage","col_type":"icon_round_4","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nconst data = [];\nconst apis = $.require('hiker://page/apis');\nconst source = apis.getSource().data;\ndata.push.apply(data, source.map(d => ({\n    img: d.logo,\n    url: 'hiker://page/feed?page=fypage&id=' + d.id,\n    title: d.name,\n    col_type: 'icon_round_4'\n})));\nsetResult(data);","searchFind":"","search_url":"","group":"收藏","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"接口\",\"path\":\"apis\",\"rule\":\"js:\\nconst baseUrl = 'https://api.yinrss.com';\\nconst fetchApi = function (path) {\\n  const res = JSON.parse(fetch(baseUrl + path));\\n  if (res.errno !== 0) {\\n\\ttoast(res.error);\\n  }\\n  return res;\\n}\\n\\nfunction getSource() {\\n  return fetchApi('/source');\\n}\\n\\nfunction getFeed(media, id) {\\n  return fetchApi('/feed?limit=25&id=' + id + '&media=' + media + '&keyword=');\\n}\\n\\nfunction getDetail(id) {\\n  return fetchApi('/detail?id=' + id);\\n}\\n\\n$.exports = {\\n  getSource: getSource,\\n  getFeed: getFeed,\\n  getDetail: getDetail,\\n}\"},{\"col_type\":\"rich_text\",\"name\":\"页面->详情\",\"path\":\"detail\",\"rule\":\"js: require(\\\"https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-M/moment.js/2.29.1/moment.min.js\\\");\\nrequire(\\\"https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/moment.js/2.29.1/locale/zh-cn.min.js\\\");\\nconst apis = $.require('hiker://page/apis');\\n\\nconst data = [];\\nconst id = getParam(\\\"id\\\", 0);\\nconst read_array = getItem(\\\"read_array\\\", \\\"\\\").split(\\\",\\\");\\nread_array.push(id);\\nsetItem(\\\"read_array\\\", read_array.join(\\\",\\\"));\\nconst detail = apis.getDetail(id).data;\\nconst subtitle =\\n  '<font color=\\\"#9e9e9e\\\">' +\\n  detail.source +\\n  \\\"  \\\" +\\n  moment(detail.date).calendar() +\\n  \\\"</font><br/>\\\";\\ndata.push({\\n  title: \\\"<h1>\\\" + detail.title + \\\"</h1>\\\" + subtitle + detail.content,\\n});\\nsetResult(data);\\n\"},{\"col_type\":\"movie_1\",\"name\":\"页面->列表\",\"path\":\"feed\",\"rule\":\"js: require(\\\"https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-M/moment.js/2.29.1/moment.min.js\\\");\\nrequire(\\\"https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/moment.js/2.29.1/locale/zh-cn.min.js\\\");\\nconst apis = $.require('hiker://page/apis');\\n\\nconst data = [];\\nconst media = getParam(\\\"id\\\", 0);\\nconst read_array = getItem(\\\"read_array\\\", \\\"\\\").split(\\\",\\\");\\nif (MY_PAGE === 1) clearMyVar(\\\"page_\\\" + media);\\nconst startId = getMyVar(\\\"page_\\\" + media, \\\"\\\");\\nconst feed = apis.getFeed(media, startId).data;\\nfeed.length && putMyVar(\\\"page_\\\" + media, feed[feed.length - 1].id);\\naddListener(\\n  \\\"onRefresh\\\",\\n  $.toString((media) => clearMyVar(\\\"page_\\\" + media), media)\\n);\\naddListener(\\n  \\\"onClose\\\",\\n  $.toString((media) => clearMyVar(\\\"page_\\\" + media), media)\\n);\\ndata.push.apply(\\n  data,\\n  feed.map((d) => {\\n    function getRead() {\\n      return read_array.includes(d.id);\\n    }\\n\\n    function wrap(text) {\\n      return '‘‘’’<font color=\\\"#9e9e9e\\\">' + text + \\\"</font>’’’\\\";\\n    }\\n\\n    const desc = d.source + \\\"·\\\" + moment(d.date).fromNow();\\n\\n    return {\\n      title: getRead() ? wrap(d.title) : d.title,\\n      desc: getRead() ? wrap(desc) : desc,\\n      img: d.img,\\n      url: $('#noLoading#').lazyRule(\\n        (d, desc, wrap) => {\\n          updateItem({\\n            title: wrap(d.title),\\n            desc: wrap(desc),\\n            extra: {\\n              id: d.id,\\n            },\\n          });\\n          return \\\"hiker://page/detail?id=\\\" + d.id;\\n        },\\n        d,\\n        desc,\\n        wrap\\n      ),\\n      col_type: d.img ? 'movie_1' : 'text_1',\\n      extra: {\\n        id: d.id,\\n      },\\n    };\\n  })\\n);\\nsetResult(data);\\n\"}]","proxy":"","icon":"https://yinrss.com/favicon.ico"},{"last_chapter_rule":"","title":"魔RSS","author":"jing&Joe","version":5,"type":"read","url":"hiker://empty","col_type":"movie_2","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nd = [];\nr = readFile(\"addRss.txt\");\nJson = r ? JSON.parse(r) : []\nJson.forEach(x => x.visible ? d.push(x) : \"\");\nd.unshift({\n    title: \"““””📝订阅\".bold() + '&nbsp;&nbsp;&nbsp;⚙ 设置 ⚙'.small(),\n    col_type: 'text_1',\n    url: \"hiker://page/config.html\",\n    extra: {\n        lineVisible: false\n    }\n})\n\nsetResult(d)","searchFind":"","search_url":"","group":"收藏","detail_col_type":"movie_1","detail_find_rule":"js:\nhtml = getResCode()\n    .replace(/<(\\/*)title>/g, '<$1article>')\n    .replace(/<(\\/*)content.*?>/g, '<$1content>')\n    .replace(/<!\\[CDATA\\[|\\]\\]>/g, '')\n\n\nlist = pdfa(html, \"body&&item\");\nr = [];\nfor (i in list) {\n    text = pdfh(list[i], \"article&&Text\");\n    link = pdfh(list[i], \"guid&&Text\") ? pdfh(list[i], \"guid&&Text\") : list[i].match(/link>(.*?)\\s/)[1];\n    img = list[i].match(/(?:img|image)>(.*?)\\s/) ? list[i].match(/(?:img|image)>(.*?)\\s/)[1] : list[i].match(/image href=\"([^\"]+)\"/) ? list[i].match(/image href=\"([^\"]+)\"/)[1] : \"\"\n    time = pdfh(list[i], \"pubDate&&Text\").replace(/GMT|\\+\\d+/, '')\n    content = pdfh(list[i], \"content&&Html\") ? pdfh(list[i], \"content&&Html\") : pdfh(list[i], \"description&&Html\");\n    r.push({\n        col_type: 'x5_webview_single',\n        desc: '0&&float'\n    }, {\n        title: text,\n        url: getItem(\"mode\", \"阅读\") == \"阅读\" ? \"hiker://page/content.html?\" + base64Encode(link) + \"##\" + base64Encode(content) : $().lazyRule((text) => {\n            eval(JSON.parse(fetch(\"hiker://page/utility?rule=语音合成\")).rule)\n            let path = voice(text.replace(/<[^>]+>/g, ''), getItem(\"egiii\", \"1\") == \"1\" ? 1 : 0)\n            refreshX5WebView(getPath(path + '?t=' + new Date()))\n            return \"toast://播放\"\n        }, content),\n        img: img,\n        desc: time,\n        col_type: \"pic_1\",\n        extra: {\n            title: text\n        }\n    })\n}\nsetResult(r)","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"fileExist('addRss.txt')?fileExist('addRss.txt'):saveFile(\"addRss.txt\",\"\")","pages":"[{\"col_type\":\"movie_3\",\"name\":\"正文\",\"path\":\"content.html\",\"rule\":\"js:\\nlink = MY_URL.match(/hiker:.*?\\\\?(.*?)##/)[1];\\na = '<h3><a href=\\\"' + base64Decode(link) + '\\\">' + MY_PARAMS.title + '</a></h3>'\\ntext = base64Decode(MY_URL.replace(/hiker:.*?##|#autoPage#/g, ''))\\n    .replace(/&lt;/g, '<')\\n    .replace(/&gt;/g, '>')\\n    .replace(/<!\\\\[CDATA\\\\[|\\\\]\\\\]>/g, '')\\n    .replace(/<.*?video src=['\\\"](.*?)['\\\"].*?><\\\\/video>/g, '<a href=\\\"$1\\\">视频链接</a>')\\nd = [{\\n    col_type: 'x5_webview_single',\\n    desc: '0&&float'\\n}, {\\n    title: a + text,\\n    col_type: \\\"rich_text\\\"\\n}]\\n\\nd.unshift({\\n    title: \\\"朗读\\\",\\n    url: $().lazyRule((text) => {\\n        eval(JSON.parse(fetch(\\\"hiker://page/utility?rule=语音合成\\\")).rule)\\n        let path = voice(text.replace(/<[^>]+>/g, ''), getItem(\\\"egiii\\\", \\\"1\\\") == \\\"1\\\" ? 1 : 0)\\n        return getPath(path)\\n    }, a + text),\\n    img: \\\"https://lanmeiguojiang.com/tubiao/messy/33.svg\\\",\\n    col_type: \\\"icon_2_round\\\"\\n})\\nsetResult(d)\"},{\"col_type\":\"icon_2_round\",\"name\":\"设置\",\"path\":\"config.html\",\"rule\":\"js:\\ncontent = getMyVar('addRss')\\nr = readFile(\\\"addRss.txt\\\");\\nJson = r ? JSON.parse(r) : []\\ncontentList = content.split(\\\"\\\\n\\\")[0] ? content.split(\\\"\\\\n\\\") : [content];\\nJSON.parse(readFile('addRss.txt') || '[]')\\ncontentList.forEach((x) => {\\n    if (!x.split(\\\"@\\\")[1]) {\\n        return false\\n    } else {\\n        c = {\\n            img: 'https://picsum.photos/200/300',\\n            title: x.split(\\\"@\\\")[1],\\n            url: x.split(\\\"@\\\")[0],\\n            delete: false,\\n            visible: true\\n        }\\n        Json.push(c)\\n    }\\n})\\nclearMyVar('addRss')\\nsaveFile(\\\"addRss.txt\\\", JSON.stringify(Json))\\nhtml = readFile(\\\"addRss.txt\\\")\\nsetPageTitle('⚙ 设置 ⚙')\\naddListener('onClose', $.toString(() => {\\n    refreshPage()\\n}))\\nel = [];\\nel.push({\\n    url: \\\"refreshPage()\\\",\\n    col_type: 'input',\\n    title: '添加',\\n    desc: \\\"格式：rss地址@名称 批量导入用换行符\\\",\\n    extra: {\\n        onChange: \\\"putMyVar('addRss', input)\\\"\\n    }\\n})\\nel.push({\\n    title: getItem(\\\"egiii\\\", \\\"1\\\") == \\\"1\\\" ? \\\"微软\\\" : \\\"百度\\\",\\n    url: $().lazyRule(() => {\\n        setItem(\\\"egiii\\\", getItem(\\\"egiii\\\", \\\"1\\\") == \\\"1\\\" ? \\\"0\\\" : \\\"1\\\")\\n        refreshPage()\\n        return \\\"toast://切换成功\\\"\\n    }),\\n    col_type: \\\"text_2\\\"\\n})\\nel.push({\\n    title: getItem(\\\"mode\\\", \\\"阅读\\\") == \\\"阅读\\\" ? \\\"阅读\\\" : \\\"语音\\\",\\n    url: $().lazyRule(() => {\\n        setItem(\\\"mode\\\", getItem(\\\"mode\\\", \\\"阅读\\\") == \\\"阅读\\\" ? \\\"语音\\\" : \\\"阅读\\\")\\n        refreshPage()\\n        return \\\"toast://切换成功\\\"\\n    }),\\n    col_type: \\\"text_2\\\"\\n})\\nel.push({\\n    title: \\\"导入分享\\\",\\n    url: $(\\\"\\\", \\\"链接\\\").input(() => {\\n        if (input.startsWith(\\\"rss订阅分享 ¥ \\\")) {\\n            putMyVar('addRss', parsePaste(input.replace(\\\"rss订阅分享 ¥ \\\", \\\"\\\")))\\n            refreshPage()\\n            return \\\"hiker://empty\\\"\\n        } else {\\n            return \\\"toast://搁这卡bug呢\\\"\\n        }\\n    }),\\n    col_type: \\\"text_2\\\"\\n})\\nel.push({\\n    title: \\\"推荐订阅\\\",\\n    url: \\\"hiker://page/recommend\\\",\\n    col_type: \\\"text_2\\\"\\n})\\n\\neditMode = getMyVar('editMode', '启用/禁用')\\nlet config = ['显示/隐藏', '重新排序', '删除订阅', '更改名称', '更改网址', '分享订阅', '更改图标']\\n\\nconfig.forEach((v) => {\\n    el.push({\\n        title: v == editMode ? '““””' + v.bold().fontcolor('#12b668') : v,\\n        url: v == editMode ? 'hiker://empty' : $('#noLoading#').lazyRule((v) => {\\n            putMyVar('editMode', v)\\n            refreshPage(false)\\n            return 'hiker://empty'\\n        }, v),\\n        col_type: 'flex_button'\\n    })\\n})\\n\\nJson = JSON.parse(readFile('addRss.txt') || '[]');\\nflagLen = Json.length\\nif (!flagLen) {\\n    el.push({\\n        title: \\\"暂无订阅，快去添加吧\\\",\\n        col_type: \\\"text_center_1\\\",\\n        url: \\\"toast://快去添加吧\\\"\\n    })\\n}\\nswitch (editMode) {\\n    case \\\"删除订阅\\\":\\n        flagLen ?\\n            el.push({\\n                title: \\\"““””确认删除\\\".bold(),\\n                col_type: \\\"text_center_1\\\",\\n                url: $('#noLoading#').lazyRule((Json) => {\\n                    let rules = [];\\n                    Json.forEach((x) => {\\n                        !x.delete ? rules.push(x) : null\\n                    })\\n                    saveFile('addRss.txt', JSON.stringify(rules))\\n                    refreshPage(false)\\n                    return 'toast://删除成功'\\n                }, Json)\\n            }) : \\\"\\\"\\n\\n        break\\n\\n    case \\\"分享订阅\\\":\\n        flagLen ? el.push({\\n            title: \\\"““””分享全部\\\".bold(),\\n            col_type: \\\"text_center_1\\\",\\n            url: $(\\\"hiker://empty#noLoading#\\\").lazyRule((Json) => {\\n                let url = sharePaste(Json.map(x => x.url + \\\"@\\\" + x.title).join(\\\"\\\\n\\\"))\\n                return \\\"copy://rss订阅分享 ¥ \\\" + url\\n            }, Json)\\n        }) : \\\"\\\"\\n        break\\n}\\n\\n\\nJSON.parse(readFile('addRss.txt') || '[]').forEach((v, i) => {\\n    let d = {\\n        title: v.title,\\n        img: v.img\\n    }\\n    switch (editMode) {\\n        case '分享订阅':\\n            d.url = \\\"copy://\\\" + v.url + \\\"@\\\" + v.title\\n            break\\n        case '显示/隐藏':\\n            d.title = (v.visible ? '🟢  ' : '🔴  ') + d.title\\n            d.url = $('#noLoading#').lazyRule((i) => {\\n                let rules = JSON.parse(readFile('addRss.txt') || '[]')\\n                rules[i].visible = !rules[i].visible\\n                saveFile('addRss.txt', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, i)\\n            break\\n        case '删除订阅':\\n            d.title = (v.delete ? '❌  ' : '') + d.title\\n            d.url = $('#noLoading#').lazyRule((i) => {\\n                let rules = JSON.parse(readFile('addRss.txt') || '[]')\\n                rules[i].delete = !rules[i].delete\\n                saveFile('addRss.txt', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, i)\\n            break\\n        case '重新排序':\\n            let sortFlag = parseInt(getMyVar('sortFlag', '-1'))\\n            d.title = (sortFlag == i ? '🔃  ' : '') + d.title\\n            if (sortFlag == -1)\\n                d.url = $('#noLoading#').lazyRule((i) => {\\n                    putMyVar('sortFlag', i.toString())\\n                    refreshPage(false)\\n                    return 'toast://选择要移动到的位置'\\n                }, i)\\n            else\\n                d.url = $('#noLoading#').lazyRule((oldIndex, newIndex) => {\\n                    let rules = JSON.parse(readFile('addRss.txt') || '[]')\\n                    rules.splice(newIndex, 0, rules.splice(oldIndex, 1)[0])\\n                    saveFile('addRss.txt', JSON.stringify(rules))\\n                    putMyVar('sortFlag', '-1')\\n                    refreshPage(false)\\n                    return 'hiker://empty'\\n                }, sortFlag, i)\\n            break\\n        case '更改名称':\\n            d.url = $(v.title || '', '输入新名称：').input((i) => {\\n                let rules = JSON.parse(readFile('addRss.txt') || '[]')\\n                if (input)\\n                    rules[i].title = input\\n                saveFile('addRss.txt', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, i)\\n            break\\n        case '更改图标':\\n            d.url = $(v.img || '', '输入新图标地址或颜色代码：').input((i) => {\\n                let rules = JSON.parse(readFile('addRss.txt') || '[]')\\n                if (input)\\n                    rules[i].img = input\\n                saveFile('addRss.txt', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, i)\\n            break\\n        case '更改网址':\\n            d.url = $(v.url || '', '输入新网址：').input((i) => {\\n                let rules = JSON.parse(readFile('addRss.txt') || '[]')\\n                if (input)\\n                    rules[i].url = input\\n                saveFile('addRss.txt', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, i)\\n            break\\n    }\\n    el.push(d)\\n})\\n\\nsetResult(el)\"},{\"col_type\":\"text_1\",\"name\":\"推荐\",\"path\":\"recommend\",\"rule\":\"js:\\nvar d = [];\\nvar list = [\\\"https://feedx.net/rss/shanghaishuping.xml@上海書評(梯子)\\\", \\\"http://www.4sbooks.com/feed@四季书评(梯子)\\\", \\\"http://www.gcores.com/rss@机核\\\", \\\"https://feedx.net/rss/thepaper.xml@澎湃新闻（梯子）\\\", \\\"https://feedx.net/rss/infzm.xml@南方周末（梯子）\\\", \\\"https://rsshub.app/zhihu/hotlist@知乎热榜\\\", \\\"https://rsshub.app/rsshub/rss@隐藏功能\\\"]\\nfor (item of list) {\\n    d.push({\\n        title: item.split(\\\"@\\\")[1],\\n        url: $().lazyRule((item) => {\\n            putMyVar('addRss', item)\\n            back()\\n            return \\\"hiker://empty\\\"\\n        }, item)\\n    })\\n\\n}\\nsetResult(d);\"}]","proxy":"","icon":"https://thumbsnap.com/i/RvSQvhqJ.png"},{"last_chapter_rule":"","title":"小姐姐合集","author":"Hood(小🔥星收集)","version":33,"type":"all","url":"hiker://fyAll","col_type":"text_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js: \nvar titles=\n[\n'小姐姐0@@https://tvv.tw/xjj/get/',\n'小姐姐1@@https://v.nrzj.vip/',\n'小姐姐2@@https://xjj.349457.xyz/',\n'小姐姐3@@http://dou.plus/index.html',\n'小姐姐4@@http://xjj.nbtd.vip/index.html',\n'小姐姐5@@https://xjiejie.vip',\n'小电视@@http://tv.hzfe.team',\n'小姐姐6@@https://www.nihaowua.com/v/',\n'小姐姐7@@http://v.nrzj.vip/video.php',\n'小姐姐8@@https://t.xxgeek.com/tools/mmvod/m.php',\n'小姐姐9@@http://119.91.196.247:7778/xjj.php',\n'小姐姐10@@http://119.91.196.247:7778/xjj/ks.php',\n'小姐姐11@@https://xjjmv.com/',\n\n\n\n\n];\n\nvar t=titles;\nvar res={};\nvar d=[];\n\nd.push({\n    title:\"““””<b>\"+'<span style=\"color: #6699FF\">'+'小姐姐随机资源：'+'</span></b>',\n    url: 'toast://点什么点 (｡•ˇ‸ˇ•｡)',\n    col_type: 'text_1'\n});\n\nfor(var i=0;i<t.length;i++)\n{\n   var k=t[i].split(/\\s*@@\\s*/);\n   if(k.length<2)continue;\n   var r={};\n   r.title=k[0];\n   r.url=k[1];\n   r.col_type='text_3';\n   d.push(r);\n}\n\nfor(var b=0;b<3;b++)\n{\n   d.push({\n    col_type: 'big_blank_block'});\n}\n\nres.data = d;\nsetHomeResult(res);","searchFind":"","search_url":"","titleColor":"#fff20c00","group":"收藏","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"auto","preRule":"","pages":"[]","proxy":"","icon":"https://lanmeiguojiang.com/tubiao/movie/30.svg"},{"last_chapter_rule":"","title":"亮健好药","author":"香雅情","version":0,"type":"other","url":"https://m.360lj.com/classify.html","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar items = [];\nvar html = getResCode();\nvar conts = parseDomForArray(html, '.mui-control-content&&.v-table-view');\nfor (var i = 0; i < conts.length; i++) {\n    var list = parseDomForArray(conts[i], '.btn_list&&a');\n    items.push({\n        title: parseDomForHtml(conts[i], 'span&&Text'),\n        col_type: 'text_1'\n    });\n    for (var j = 0; j < list.length; j++) {\n        var title = parseDomForHtml(list[j], 'a&&title');\n        var url = parseDom(list[j], 'a&&href');\n        items.push({\n            title: title,\n            //pic_url: img,\n            url: url.replace('.html','-0-fypage-0-1-0-0-0-0-0.html'),\n            //desc: desc\n            col_type: 'text_3'\n        });\n    }\n}\nsetHomeResult({\n    data: items\n});","searchFind":"js:\nvar items = [];\nvar html = getResCode();\n\nvar list = parseDomForArray(html, '.item_list&&li');\n\nfor (var i = 0; i < list.length; i++) {\n    var title = parseDomForHtml(list[i], 'h3&&Text');\n    var img = parseDom(list[i], 'img&&src');\n    var url = parseDom(list[i], 'a&&href');\n    var content = parseDomForHtml(list[i], '.shop_info--h3&&Text');\n    items.push({\n        title: title,\n        pic_url: img,\n        url: $(url).rule(() => {\n            var items = [];\n            var html = getResCode();\n            var list = parseDomForArray(html, '.producer_img&&img')\n            for (var i = 0; i < list.length; i++) {\n                var img = parseDom(list[i], 'img&&src');\n                items.push({\n                    title: '',\n                    desc: '',\n                    pic_url: img,\n                    url: img,\n                    col_type: 'pic_2'\n                });\n            }\n            items.push({\n                title: '说明书',\n                col_type: 'text_center_1'\n            });\n            var descr = parseDomForHtml(html, \".direction&&Html\").replace('&amp;nbsp', ' ');\n            items.push({\n                title: descr,\n                col_type: 'rich_text'\n            });\n            setHomeResult({\n                data: items\n            });\n        }),\n        content: content,\n        col_type: 'movie_1_vertical_pic'\n    });\n}\n\nsetHomeResult({\n    data: items\n});","search_url":"https://m.360lj.com/Search-0-0-fypage-0-1-0-0-0-0-0.html?strSearch=**","group":"收藏","detail_col_type":"movie_1","detail_find_rule":"js:\nvar items = [];\nvar html = getResCode();\n\nvar list = parseDomForArray(html, '.item_list&&li');\n\nfor (var i = 0; i < list.length; i++) {\n    var title = parseDomForHtml(list[i], 'h3&&Text');\n    var img = parseDom(list[i], 'img&&src');\n    var url = parseDom(list[i], 'a&&href');\n    var desc = parseDomForHtml(list[i], '.shop_info--h3&&Text');\n    items.push({\n        title: title,\n        pic_url: img,\n        url: $(url).rule(() => {\n            var items = [];\n            var html = getResCode();\n            var list = parseDomForArray(html, '.producer_img&&img')\n            for (var i = 0; i < list.length; i++) {\n                var img = parseDom(list[i], 'img&&src');\n                items.push({\n                    title: '',\n                    desc: '',\n                    pic_url: img,\n                    url: img,\n                    col_type: 'pic_2'\n                });\n            }\n            items.push({\n                title: '说明书',\n                col_type: 'text_center_1'\n            });\n            var descr = parseDomForHtml(html, \".direction&&Html\").replace('&amp;nbsp', ' ');\n            items.push({\n                title: descr,\n                col_type: 'rich_text'\n            });\n            setHomeResult({\n                data: items\n            });\n        }),\n        desc: desc,\n        col_type: 'movie_1_vertical_pic'\n    });\n}\n\nsetHomeResult({\n    data: items\n});","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[]","proxy":"","icon":""},{"last_chapter_rule":"","title":"厨娃R","author":"1606142&Reborn","version":15,"url":"https://www.xiachufang.com/fyAll?page=fypage;get;utf-8;{User-Agent@Mozilla 5.0}","col_type":"movie_1","class_name":"本周最受欢迎&新秀菜谱&往期头条&厨房101&月度最佳&最新创建&流行菜单","class_url":"explore&explore/rising&explore/head&explore/honor&explore/monthhonor&explore/created&explore/menu/pop","area_name":"家常菜&快手菜&下饭菜&早餐&汤羹&烘培&小吃","area_url":"category/40076&category/40077&category/40078&category/40071&category/20130&category/51761&category/40073","sort_name":"甜品饮品&甜品&糖水&果汁\n&下午茶&深夜食堂&宵夜&零食\n&三明治&炸牛奶&炸鲜奶","year_name":"糖醋&粥&面条&炒饭\n&肉类&鸡蛋&猪&鸡&鸭&虾&鳕鱼&山药&藕&茄子\n&电饭煲&高压锅\n&懒人食谱&视频菜谱","sort_url":"category/52381/&category/20135/&category/50680/&category/51823/\n&category/40072/&category/52107/&category/51865/&category/40074/\n&category/20157/&category/1025798/&category/1000044/","year_url":"category/40066/&category/20131/&category/1025/&category/20143/\n&category/1012713/&category/394/&category/5399/&category/104/&category/275/&category/469/&category/1072/&category/524/&category/503/&category/178/\n&category/51313/&category/52376/\n&category/1012722/&category/52428/","find_rule":".pure-u-3-4&&li;img&&alt;img&&data-src;.stats||.stat||.time&&Text;a&&href.js: (input.indexOf('recipe_list') > -1 ? (input + '?page=fypage') : input) + '#noHistory#'","searchFind":"js:\nvar res = {};\nvar d = [];\nvar html = getResCode();\nvar host = 'https://www.xiachufang.com';\nvar noHistory = '#noHistory#';\n\n/**\n * 是否开启搜索结果包含菜单\n */\nvar containMenu = 1;\nlet valueInMap = getVar('xiachu_containMenu');\nvalueInMap = parseInt(valueInMap);\ncontainMenu = isNaN(valueInMap) === true ? containMenu : valueInMap;\n\ntry {\n    if (containMenu) {\n        let menusHtml = parseDomForArray(html, '.recipe-menus&&a');\n        for (let i = 0; i < menusHtml.length; i++) {\n            let menuHtml = menusHtml[i];\n            let menu = {};\n            menu.title = parseDomForHtml(menuHtml, 'a&&title');\n            menu.pic_url = parseDomForHtml(menuHtml, 'a&&img&&src');\n            menu.url = host + parseDomForHtml(menuHtml, 'a&&href') + '?page=fypage' + noHistory;\n            menu.desc = '菜单';\n            d.push(menu);\n        }\n        containMenu = 0;\n        putVar2('xiachu_containMenu', containMenu.toString());\n    }\n} catch (e) { }\n\ntry {\n    let resultsHtml = parseDomForArray(html, '.search-result-list&&ul&&li');\n        for (let i = 0; i < resultsHtml.length; i++) {\n            let resultHtml = resultsHtml[i];\n            let result = {};\n            result.title = parseDomForHtml(resultHtml, '.name&&Text');\n            result.pic_url = parseDomForHtml(resultHtml, '.cover&&img&&data-src').replace('w/215/h/136', 'w/430/h/272');\n            result.url = host + parseDomForHtml(resultHtml, 'a&&href') + noHistory;\n            result.content = parseDomForHtml(resultHtml, '.ing&&Text');\n            result.desc = parseDomForHtml(resultHtml, '.stats&&Text');\n            d.push(result);\n        }\n} catch (e) { }\n\nres.data = d;\nsetSearchResult(res);\n/*.search-result-list&&ul&&li;.name&&Text;a&&href.js: 'https://www.%78%69%61%63%68%75%66%61%6e%67.com' + input + '#noHistory#';.stats&&Text;.ing&&Text;.cover&&img&&data-src.js: input.replace('w/215/h/136', 'w/430/h/272')*/","search_url":"https://www.xiachufang.com/search/?keyword=**&page=fypage;get;utf-8;{User-Agent@Mozilla 5.0}","titleColor":"#ff148e8e","group":"收藏","detail_col_type":"rich_text","detail_find_rule":"js:\nif (MY_URL.indexOf('recipe_list') > -1) {\n    eval(JSON.parse(request(\"hiker://page/menu\")).rule)\n} else {\n    eval(JSON.parse(request(\"hiker://page/detail\")).rule)\n}","sdetail_col_type":"rich_text","sdetail_find_rule":"*","ua":"pc","preRule":"/**\n * 是否开启伪异步加载模式 1/开启 0/不开启\n *\n * 注意：二级会卡可以尝试开启该选项，但可能导致某些图片不显示\n */\nlet multiStepModel = 0;\n// 是否隐藏图片(省流模式) 1/隐藏 0/不隐藏\nlet hideImg = 0;\n// 图片质量，默认 300，推荐 600 或 800\nlet imgWidth = 600;\n// 是否显示看大图(防止无法加载图片) 1/显示 0/不显示\nlet showFullImgTips = 1;\n// 用户颜色\nlet userColor = \"#2979FF\";\n// 是否显示菜的描述 1/显示 0/不显示\nlet showDesc = 1;\n// 用料模块显示方式 1/完整视图 0/缩略模式\nlet ingsMode = 0;\n// 用料名颜色\nlet ingNameColor = \"#46c200\";\n// 用料量颜色\nlet ingUnitColor = \"#706a6b\";\n// 小贴士颜色\nlet tipsColor = \"#706a6b\";\n// 模块之间的间隔\nlet model_line_height = 1;\n// 正文提示\nlet contentTips = '下厨的时候一定要注意安全哦～' + '<br>';\n\n/**\n * 是否开启搜索结果包含菜单\n */\nvar containMenu = 1;\n\nputVar2('xiachu_multiStepModel', multiStepModel.toString());\nputVar2('xiachu_hideImg', hideImg.toString());\nputVar2('xiachu_imgWidth', imgWidth.toString());\nputVar2('xiachu_showFullImgTips', showFullImgTips.toString());\nputVar2('xiachu_userColor', userColor);\nputVar2('xiachu_showDesc', showDesc.toString());\nputVar2('xiachu_ingsMode', ingsMode.toString());\nputVar2('xiachu_ingNameColor', ingNameColor);\nputVar2('xiachu_ingUnitColor', ingUnitColor);\nputVar2('xiachu_tipsColor', tipsColor);\nputVar2('xiachu_model_line_height', model_line_height.toString());\nputVar2('xiachu_contentTips', contentTips);\n\nputVar2('xiachu_containMenu', containMenu.toString());\n\nputVar2('xiachu_host', base64Decode('d3d3LnhpYWNodWZhbmcuY29t'))","pages":"[{\"col_type\":\"rich_text\",\"name\":\"菜单列表\",\"path\":\"menu\",\"rule\":\"js:\\neval(JSON.parse(request(\\\"hiker://page/richtext\\\")).rule)\\neval(JSON.parse(request(\\\"hiker://page/settings\\\")).rule)\\n\\nvar res = {};\\nvar d = [];\\nvar html = getResCode();\\nvar urlSplits = MY_URL.split('?page=');\\nvar page = 1;\\ntry {\\n    let pageTemp = parseInt(urlSplits[1]);\\n    page = isNaN(pageTemp) === true ? page : pageTemp;\\n} catch (e) {}\\n\\ntry {\\n    let mainHtml = parseDomForHtml(html, '.main-panel&&Html');\\n\\n    if (page === 1) {\\n        /**\\n         * header\\n         */\\n        try {\\n            let headerTitle = getBigText(getStrongText(parseDomForHtml(mainHtml, 'h1&&Text'))) +\\n                ' ' + getSmallText(getAddressTag(MY_URL, '[查看原文]'));\\n            let headerHtml = parseDomForHtml(mainHtml, '.rl-summary&&Html');\\n            let collectionCount = '<br>' + getSmallText(parseDomForHtml(headerHtml, '.stats&&Text'));\\n            let time = ' ' + getSmallText(getGreyText(parseDomForHtml(headerHtml, '.time&&Text')));\\n            d.push({\\n                title: headerTitle + collectionCount + time\\n            });\\n            d.push({\\n                col_type: 'line'\\n            });\\n            let author = getAuthorText(parseDomForHtml(headerHtml, '.avatar-link&&Text'));\\n            let desc = '<br>' + parseDomForHtml(headerHtml, '.desc&&Text');\\n            let meta = getBlockquoteText(author + desc);\\n            if (model_line_height > 0) {\\n                d.push({\\n                    title: meta + getGreyText(contentTips)\\n                });\\n                for (let i = 0; i < model_line_height; i++) {\\n                    d.push({\\n                        col_type: 'line_blank'\\n                    });\\n                }\\n            } else {\\n                d.push({\\n                    title: meta\\n                });\\n            }\\n        } catch (e) {}\\n    }\\n    /**\\n     * 正文\\n     */\\n    try {\\n        let contentsHtml = parseDomForHtml(html, '.rl-recipes&&Html');\\n        if (page === 1) {\\n            let contentTitle = getBigText(parseDomForHtml(contentsHtml, '.block-title&&Text'));\\n            d.push({\\n                title: contentTitle\\n            });\\n        }\\n        let contentsHtmlArray = parseDomForArray(contentsHtml, '.normal-recipe-list&&li');\\n        for (let i = 0; i < contentsHtmlArray.length; i++) {\\n            let contentItemHtml = contentsHtmlArray[i];\\n            let cover = parseDomForHtml(contentItemHtml, '.cover&&img&&data-src');\\n            let title = parseDomForHtml(contentItemHtml, '.info&&.name&&Text');\\n            let desc = parseDomForHtml(contentItemHtml, '.stats&&Text');\\n            let url = parseDom(contentItemHtml, 'a&&href');\\n            d.push({\\n                title: title,\\n                pic_url: cover,\\n                desc: desc,\\n                url: \\\"hiker://page/detail?url=\\\" + url.replace(/\\\\?/, \\\"？？\\\") + \\\"；；get；；utf-8；；{User-Agent@Mozilla 5.0}\\\"\\n\\n/*$(url).rule(()=>eval(JSON.parse(request(\\\"hiker://page/detail\\\")).rule))*/,\\n                col_type: 'movie_1'\\n            })\\n        }\\n    } catch (e) {}\\n} catch (e) {}\\n\\n\\nres.data = d;\\nsetHomeResult(res);\"},{\"col_type\":\"rich_text\",\"name\":\"菜谱详情\",\"path\":\"detail\",\"rule\":\"js:\\nvar res = {};\\nvar d = [];\\nvar html = getResCode();\\nlog(html)\\n/*var urlSplits = MY_URL.split('?page=');\\nvar page = 1;\\ntry {\\n    let pageTemp = parseInt(urlSplits[1]);\\n    page = isNaN(pageTemp) === true ? page : pageTemp;\\n} catch (e) {}*/\\n\\neval(JSON.parse(request(\\\"hiker://page/settings\\\")).rule)\\n\\neval(JSON.parse(request(\\\"hiker://page/richtext\\\")).rule)\\n\\nString.prototype.replaceWithCallback = function(searchValue, replaceValue, callback) {\\n    let returnValue = this;\\n    if (callback != null) {\\n        returnValue = callback(this, searchValue, replaceValue);\\n    }\\n    return returnValue;\\n};\\n\\nlet imgError = '<font color=\\\"grey\\\">图片暂时无法显示，若要查看请<a href=\\\"' + MY_URL + '\\\">访问原文</a></font>';\\n\\nfunction imgTag(context, sourceTag, imgUrl) {\\n    if (/(w\\\\/(\\\\d+)\\\\/interlace)/.test(imgUrl) === true) {\\n        let url = RegExp.$1;\\n        // log(sourceTag)\\n        sourceTag = sourceTag.replace(url, 'w/' + imgWidth + '/interlace');\\n        // log(sourceTag)\\n    }\\n    let replaceString = sourceTag;\\n    let replaceString1 = imgUrl === '' ?\\n        imgError :\\n        ('<a href=\\\"' + imgUrl + '\\\">' +\\n            (hideImg === 1 ? '[点击查看大图]' : '图片无法加载？点我试试~') +\\n            '</a>');\\n    if (showFullImgTips) {\\n        replaceString += ('<br>' + getSmallText(replaceString1));\\n    }\\n    if (hideImg) {\\n        replaceString = replaceString1;\\n    }\\n    return context.replace(/<img data-v>/g, replaceString);\\n}\\n\\nfunction imgTagReplacement2(context, searchValue, replaceValue) {\\n    let matchArray = context.match(searchValue);\\n    let returnValue = context;\\n    // log(matchArray)\\n    if (matchArray != null) {\\n        for (let i = 0; i < matchArray.length; i++) {\\n            let item = matchArray[i];\\n            // log(item);\\n            /(<img (src|data-src)=\\\"(.*?)\\\"([\\\\s\\\\S]*?)>)/.test(item);\\n            let imgUrl = RegExp.$3;\\n            if (imgUrl !== '') {\\n                returnValue = returnValue.replace(item, replaceValue);\\n                let tag = item;\\n                // log(tag)\\n                returnValue = imgTag(returnValue, tag, imgUrl);\\n            }\\n        }\\n    }\\n    return returnValue;\\n}\\n\\ntry {\\n    let mainHtml = parseDomForHtml(html, '.main-panel&&Html');\\n    /**\\n     * header\\n     */\\n    try {\\n        let headerTitle = getBigText(getStrongText(parseDomForHtml(mainHtml, 'h1&&Text'))) +\\n            ' ' + getSmallText(getAddressTag(MY_URL, '[查看原文]'));\\n        let tags = '';\\n        try {\\n            let headerTagsHtml = parseDomForHtml(html, '.recipe-tags&&Html');\\n            let tagsHtmlArray = parseDomForArray(headerTagsHtml, '.recipe-cats&&a');\\n            // setError(JSON.stringify(tagsHtmlArray));\\n            for (let i = 0; i < tagsHtmlArray.length; i++) {\\n                let tagHtml = tagsHtmlArray[i];\\n                let tag = getCodeText(parseDomForHtml(tagHtml, 'Text'));\\n                tags += tag;\\n            }\\n            // setError(tags);\\n        } catch (e) {}\\n        tags = tags === '' ? '<br>' + getCodeText('暂无分类') : '<br>' + tags;\\n        d.push({\\n            title: headerTitle + tags\\n        });\\n        d.push({\\n            col_type: 'line'\\n        });\\n    } catch (e) {}\\n\\n    /**\\n     * 描述\\n     */\\n    try {\\n        let author = getAuthorText('作者：' + parseDomForHtml(mainHtml, '.author&&Text'));\\n        let desc = '';\\n        try {\\n            desc = '<br>' + parseDomForHtml(mainHtml, '.desc&&Html');\\n        } catch (e) {}\\n\\n        /**\\n         * 展示\\n         */\\n        let showVideo = '';\\n        try {\\n            let showHtml = parseDomForHtml(html, '.recipe-show&&Html');\\n            let iframeVideoUrl = parseDomForHtml(showHtml, 'iframe&&src');\\n            // setError(iframeVideoUrl);\\n            let iframeHtml = fetch(iframeVideoUrl, {});\\n            // setError(iframeHtml);\\n            let videoUrl = parseDomForHtml(iframeHtml, 'video&&src');\\n            showVideo = getAddressTag(videoUrl, '本帖含视频，点我查看～');\\n        } catch (e) {}\\n\\n        let ings = '';\\n        try {\\n            /**\\n             * 用料\\n             */\\n            let ingsHtml = parseDomForHtml(mainHtml, '.ings&&Html');\\n            let ingsHtmlArray = parseDomForArray(ingsHtml, 'table&&tr');\\n            // setError(JSON.stringify(ingsHtmlArray));\\n            for (let i = 0; i < ingsHtmlArray.length; i++) {\\n                let ingHtml = ingsHtmlArray[i];\\n                /<td class=\\\"name\\\">([\\\\s\\\\S]*?)<\\\\/td>/.test(ingHtml);\\n                let ingName = RegExp.$1;\\n                if (ingName !== '') {\\n                    ingName = getColorText(parseDomForHtml(ingName, 'Text'), ingNameColor);\\n                    /<td class=\\\"unit\\\">([\\\\s\\\\S]*?)<\\\\/td>/.test(ingHtml);\\n                    let ingUnit = RegExp.$1;\\n                    ingUnit = getColorText(((ingUnit === ingName) ? '未知' : ingUnit), ingUnitColor);\\n                    let ing = ingName + ' ' + ingUnit;\\n                    ing = i === (ingsHtmlArray.length - 1) ? ing : ing + (ingsMode === 1 ? '<br>' : '、');\\n                    ings += ing\\n                }\\n            }\\n            ings = (getBigText(getTitleText('用料')) + '<br>') + ings;\\n        } catch (e) {}\\n        desc = showDesc === 1 ? desc : '';\\n        if (model_line_height > 0) {\\n            d.push({\\n                title: getBlockquoteText(author + desc) + (showVideo === '' ? getGreyText(contentTips) : showVideo + '<br>')\\n            });\\n            for (let i = 0; i < model_line_height; i++) {\\n                d.push({\\n                    col_type: 'line_blank'\\n                });\\n            }\\n            d.push({\\n                title: ings\\n            });\\n            for (let i = 0; i < model_line_height; i++) {\\n                d.push({\\n                    col_type: 'line_blank'\\n                });\\n            }\\n        } else {\\n            d.push({\\n                title: getBlockquoteText(author + desc) + (showVideo === '' ? '' : showVideo + '<br><br>') + ings\\n            });\\n        }\\n    } catch (e) {}\\n\\n    /**\\n     * 正文\\n     */\\n    try {\\n        let stepsTitle = getBigText(getTitleText('' + parseDomForHtml(mainHtml, '#steps&&Text') + ''));\\n        let stepsHtmlArray = parseDomForArray(mainHtml, '.steps&&.container');\\n        if (multiStepModel && model_line_height > 0) {\\n            d.push({\\n                title: stepsTitle\\n            });\\n        }\\n        let steps = '';\\n        for (let i = 0; i < stepsHtmlArray.length; i++) {\\n            let step = parseDomForHtml(stepsHtmlArray[i], '.container&&Html');\\n            step = getStrongText('步骤' + (i + 1) + '<br>') +\\n                step\\n                .replace(/<\\\\/p> <img src=/g, '<br><img src=')\\n                .replaceWithCallback(/(<img (src|data-src)=\\\"(.*?)\\\"([\\\\s\\\\S]*?)>)/g, \\\"<img data-v>\\\", imgTagReplacement2)\\n                .replace(/(<p class=\\\"text\\\" style=\\\".*?\\\">)|(<\\\\/p>)/, '');\\n            if (multiStepModel && model_line_height > 0) {\\n                d.push({\\n                    title: step\\n                })\\n            } else {\\n                steps += '<br><br>' + step;\\n            }\\n        }\\n        if (!(multiStepModel && model_line_height > 0)) {\\n            d.push({\\n                title: stepsTitle + steps\\n            });\\n        }\\n        for (let i = 0; i < model_line_height; i++) {\\n            d.push({\\n                col_type: 'line_blank'\\n            });\\n        }\\n        /**\\n         * Tips\\n         */\\n        let tips = '';\\n        try {\\n            let tipsHtml = parseDomForHtml(mainHtml, '.tip-container&&Html');\\n            let tipsTitle = getBigText(getTitleText(parseDomForHtml(tipsHtml, 'h2&&Text')));\\n            tipsContent = '<br>' + parseDomForHtml(tipsHtml, '.tip&&Html');\\n            tips = getColorText(tipsTitle + tipsContent, tipsColor);\\n            d.push({\\n                title: tips\\n            });\\n            for (let i = 0; i < model_line_height; i++) {\\n                d.push({\\n                    col_type: 'line_blank'\\n                });\\n            }\\n        } catch (e) {}\\n    } catch (e) {}\\n\\n    /**\\n     * footer\\n     */\\n    try {\\n        let footerHtml = parseDomForHtml(html, '.recipe-stats&&Html');\\n        let time = parseDomForHtml(footerHtml, '.time&&Text');\\n        let collectionCount = parseDomForHtml(footerHtml, '.pv&&Text');\\n        let copyright = parseDomForHtml(footerHtml, '.copyright&&Text');\\n        let footer = getSmallText(getGreyText(time + '<br>' + collectionCount + '<br>' + copyright))\\n        d.push({\\n            title: footer\\n        });\\n    } catch (e) {}\\n\\n    /**\\n     * 评论\\n     */\\n    try {\\n        let commentHtml = parseDomForHtml(html, '.page-bottom-outer&&.page-container&&Html');\\n        let commentTitle = getBigText(getTitleText(parseDomForHtml(commentHtml, 'h2&&Text')));\\n        let commentsHtmlArray = parseDomForArray(commentHtml, '.question-list&&.recipe-quesions-content');\\n        if (commentsHtmlArray.length > 0) {\\n            d.push({\\n                col_type: 'line_blank'\\n            });\\n            d.push({\\n                title: commentTitle\\n            });\\n        }\\n        let comment = '';\\n        for (let i = 0; i < commentsHtmlArray.length; i++) {\\n            let commentsBlockHtmlArray = parseDomForArray(commentsHtmlArray[i], 'li&&.avatar-right-2');\\n            for (let j = 0; j < commentsBlockHtmlArray.length; j++) {\\n                let replyComment = '';\\n                let authorComment = '';\\n                if (commentsBlockHtmlArray[j].indexOf('赞') > -1) {\\n                    let replier = getAuthorText(parseDomForHtml(commentsBlockHtmlArray[j], '.info&&a&&Text'));\\n                    let reply_time = '';\\n                    if (/(<span class=\\\"normal-font gray-font align-baseline\\\">[\\\\s\\\\S]*?<\\\\/span>)/.test(commentsBlockHtmlArray[j]) === true) {\\n                        reply_time = getGreyText(RegExp.$1);\\n                    }\\n                    let reply_meta = getCommentMeta('<br>' + replier + reply_time);\\n                    let reply_content = parseDomForHtml(commentsBlockHtmlArray[j], '.right-bottom&&Html');\\n                    replyComment = reply_content + reply_meta;\\n                }\\n                if (commentsBlockHtmlArray[j].indexOf('作者回复') > -1) {\\n                    try {\\n                        let author = getAuthorText('作者回复');\\n                        let time = '';\\n                        if (/(<span class=\\\"normal-font gray-font align-baseline\\\">[\\\\s\\\\S]*?<\\\\/span>)/.test(commentsBlockHtmlArray[j]) === true) {\\n                            time = getGreyText(RegExp.$1);\\n                        }\\n                        let meta = getCommentMeta('<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' + author + time);\\n                        let commentContent = '<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>' +\\n                            parseDomForHtml(commentsBlockHtmlArray[j], '.right-bottom&&Html');\\n                        authorComment = commentContent + meta;\\n                        // authorComment = '<br>' + authorComment;\\n                    } catch (e) {}\\n                }\\n                comment = replyComment + authorComment;\\n                d.push({\\n                    title: comment.replace(/<div class=\\\"recipe-questions-digg\\\">/g, '')\\n                });\\n            }\\n            d.push({\\n                col_type: 'line'\\n            });\\n        }\\n    } catch (e) {}\\n} catch (e) {}\\n\\n\\nres.data = d;\\nsetHomeResult(res);\"},{\"col_type\":\"movie_3\",\"name\":\"富文本通用函数\",\"path\":\"richtext\",\"rule\":\"function getBigText(text) {\\n    return '<big>' + text + '</big>';\\n}\\n\\nfunction getSmallText(text) {\\n    return '<small>' + text + '</small>';\\n}\\n\\nfunction getStrongText(text) {\\n    return '<strong>' + text + '</strong>';\\n}\\n\\nfunction getTitleText(text) {\\n    return getStrongText(text);\\n}\\n\\nfunction getColorText(text, color) {\\n    return '<font color=\\\"' + color + '\\\">' + text + '</font>';\\n}\\n\\nfunction getGreyText(text) {\\n    return getColorText(text, 'grey');\\n}\\n\\nfunction getAuthorText(text) {\\n    return getColorText(text, userColor);\\n}\\n\\nfunction getCodeText(text) {\\n    return '<code>' + text + '</code>';\\n}\\n\\nfunction getBlockquoteText(text) {\\n    return '<blockquote>' + text + '</blockquote>'\\n}\\n\\nfunction getAddressTag(url, text) {\\n    return '<a href=\\\"' + url + '\\\">' + text + '</a>'\\n}\\n\\nfunction getCommentMeta(html) {\\n    return getSmallText(html);\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"获取个人配置\",\"path\":\"settings\",\"rule\":\"/**\\n * 个人配置已移到预处理，请前往预处理进行配置\\n */\\n\\n/**\\n * 是否开启伪异步加载模式 1/开启 0/不开启\\n *\\n * 注意：二级会卡可以尝试开启该选项，但可能导致某些图片不显示\\n */\\nlet valueInMap = getVar('xiachu_multiStepModel');\\nlet multiStepModel = 0;\\nvalueInMap = parseInt(valueInMap);\\nmultiStepModel = isNaN(valueInMap) === true ? multiStepModel : valueInMap;\\n// 是否隐藏图片(省流模式) 1/隐藏 0/不隐藏\\nlet hideImg = 0;\\nvalueInMap = getVar('xiachu_hideImg');\\nvalueInMap = parseInt(valueInMap);\\nhideImg = isNaN(valueInMap) === true ? hideImg : valueInMap;\\n// 图片质量，默认 300，推荐 600 或 800\\nlet imgWidth = 600;\\nvalueInMap = getVar('xiachu_imgWidth');\\nvalueInMap = parseInt(valueInMap);\\nimgWidth = isNaN(valueInMap) === true ? imgWidth : valueInMap;\\n// 是否显示看大图(防止无法加载图片) 1/显示 0/不显示\\nlet showFullImgTips = 1;\\nvalueInMap = getVar('xiachu_showFullImgTips');\\nvalueInMap = parseInt(valueInMap);\\nshowFullImgTips = isNaN(valueInMap) === true ? showFullImgTips : valueInMap;\\n// 用户颜色*\\nlet userColor = \\\"#2979FF\\\";\\nvalueInMap = getVar('xiachu_userColor');\\nuserColor = valueInMap === '' ? userColor : valueInMap;\\n// 是否显示菜的描述 1/显示 0/不显示\\nlet showDesc = 1;\\nvalueInMap = getVar('xiachu_showDesc');\\nvalueInMap = parseInt(valueInMap);\\nshowDesc = isNaN(valueInMap) === true ? showDesc : valueInMap;\\n// 用料模块显示方式 1/完整视图 0/缩略模式\\nlet ingsMode = 0;\\nvalueInMap = getVar('xiachu_ingsMode');\\nvalueInMap = parseInt(valueInMap);\\ningsMode = isNaN(valueInMap) === true ? ingsMode : valueInMap;\\n// 用料名颜色\\nlet ingNameColor = \\\"#46c200\\\";\\nvalueInMap = getVar('xiachu_ingNameColor');\\ningNameColor = valueInMap === '' ? ingNameColor : valueInMap;\\n// 用料量颜色\\nlet ingUnitColor = \\\"#706a6b\\\";\\nvalueInMap = getVar('xiachu_ingUnitColor');\\ningUnitColor = valueInMap === '' ? ingUnitColor : valueInMap;\\n// 小贴士颜色\\nlet tipsColor = \\\"#706a6b\\\";\\nvalueInMap = getVar('xiachu_tipsColor');\\ntipsColor = valueInMap === '' ? tipsColor : valueInMap;\\n// 模块之间的间隔*\\nlet model_line_height = 1;\\nvalueInMap = getVar('xiachu_model_line_height');\\nvalueInMap = parseInt(valueInMap);\\nmodel_line_height = isNaN(valueInMap) === true ? model_line_height : valueInMap;\\n// 正文提示*\\nlet contentTips = '下厨的时候一定要注意安全哦～' + '<br>';\\nvalueInMap = getVar('xiachu_contentTips');\\ncontentTips = valueInMap === '' ? contentTips : valueInMap;\"}]","icon":"#ff148e8e"},{"last_chapter_rule":"","title":"我不是盐神","author":"小棉袄🌞","version":3,"type":"other","url":"hiker://empty","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nlet url = \"https://onehu.xyz/\"\n\nsetResult([{\n    col_type: \"x5_webview_single\",\n    url: url,\n    desc: \"float&&100%\",\n    extra: {\n        canBack: true\n    }\n}])","searchFind":"","search_url":"","group":"收藏","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[]","proxy":"","icon":""},{"last_chapter_rule":"","title":"热榜","author":"小棉袄🌞","version":1,"type":"other","url":"hiker://empty##","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\nlet url = \"https://rebang.today/\";\nd.push({\n    col_type: \"x5_webview_single\",\n    url: url,\n    desc: \"float&&100%\",\n    title: \"\",\n    extra: {\n        canBack: true,\n        urlInterceptor: $.toString((my) => {\n            if (input.startsWith(my)) {\n                return false;\n            }\n            return $.toString((url) => {\n                fy_bridge_app.open(JSON.stringify({\n                    title: \"详情\",\n                    url: \"hiker://empty\",\n                    findRule: \"js:\" + $$$.toString((u) => {\n                        let js = $.toString(() => {\n                            try {\n                                if (document.title && document.title.length) {\n                                    let r = $$$().lazyRule((t) => {\n                                        setPageTitle(t);\n                                    }, document.title);\n                                    fy_bridge_app.parseLazyRule(r);\n                                }\n                            } catch (e) {\n                                fy_bridge_app.log(e.toString());\n                            }\n                        });\n                        setResult([{\n                            url: u,\n                            col_type: \"x5_webview_single\",\n                            extra: {\n                                canBack: true,\n                                js: js\n                            },\n                            desc: \"100%&&float\"\n                        }]);\n                    }, url)\n                }))\n            }, input)\n        }, url)\n    }\n});\n\nsetResult(d);","searchFind":"","search_url":"","group":"收藏","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[]","proxy":"","icon":""},{"last_chapter_rule":"","title":"即时热榜","author":"小棉袄🌞","version":1,"type":"other","url":"hiker://empty##","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\nlet url = \"https://m.jsrank.cn/\";\nd.push({\n    col_type: \"x5_webview_single\",\n    url: url,\n    desc: \"float&&100%\",\n    title: \"\",\n    extra: {\n        canBack: true,\n        urlInterceptor: $.toString((my) => {\n            if (input.startsWith(my)) {\n                return false;\n            }\n            return $.toString((url) => {\n                fy_bridge_app.open(JSON.stringify({\n                    title: \"详情\",\n                    url: \"hiker://empty\",\n                    findRule: \"js:\" + $$$.toString((u) => {\n                        let js = $.toString(() => {\n                            try {\n                                if (document.title && document.title.length) {\n                                    let r = $$$().lazyRule((t) => {\n                                        setPageTitle(t);\n                                    }, document.title);\n                                    fy_bridge_app.parseLazyRule(r);\n                                }\n                            } catch (e) {\n                                fy_bridge_app.log(e.toString());\n                            }\n                        });\n                        setResult([{\n                            url: u,\n                            col_type: \"x5_webview_single\",\n                            extra: {\n                                canBack: true,\n                                js: js\n                            },\n                            desc: \"100%&&float\"\n                        }]);\n                    }, url)\n                }))\n            }, input)\n        }, url)\n    }\n});\n\nsetResult(d);","searchFind":"","search_url":"","group":"收藏","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[]","proxy":"","icon":""},{"last_chapter_rule":"","title":"吾爱破解𝔥","author":"Hood","version":4,"type":"other","url":"https://www.52pojie.cn/forum.php?mod=guide&view=fyclass&page=fypage;get;GBK","col_type":"text_1","class_name":"最新热门&最新精华&最新回复&最新发表","class_url":"hot&digest&new&newthread","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar res = {};\nvar d = [];\nvar html = getResCode();\n\n//列表\nvar list = parseDomForArray(html,'body&&tbody[id]');\n\nfor(var i=1;i<list.length+1;i++){\nd.push({\ntitle: (i)+ '. ' +parseDomForHtml(list[i-1],'.xst&&Text'),\nurl:'x5://https://www.52pojie.cn/'+parseDomForHtml(list[i-1],'a&&href'),\ncol_type: 'text_1'});\n}\n\r\nres.data = d;\nsetHomeResult(res);","searchFind":"","search_url":"","titleColor":"#fff20c00","group":"收藏","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"pc","preRule":"","pages":"[]","proxy":"","icon":"https://www.52pojie.cn/favicon.ico"},{"last_chapter_rule":"","title":"期刊杂志demo","author":"Joker","version":6,"type":"read","url":"hiker://empty##fypage","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nlet d = [];\nlet now = getItem('now', '推荐期刊');\nif (MY_PAGE == 1) {\n    let arr = ['推荐期刊', '热门期刊', '直播', '收藏'];\n    for (let it of arr) {\n        d.push({\n            title: now == it ? '““””' + it.fontcolor('red') : it,\n            col_type: 'scroll_button',\n            url: $('#noLoading#').lazyRule((it) => {\n                setItem(\"now\", it);\n                refreshPage();\n                return 'hiker://empty';\n            }, it)\n        })\n    }\n    d.push({\n        title: '规则设置',\n        col_type: 'scroll_button',\n        url: 'hiker://page/setting'\n    });\n}\nif (now == '直播') {\n    eval(JSON.parse(fetch(\"hiker://page/getHeaders\")).rule);\n    let zb_list = JSON.parse(request(\"https://api.lifves.com/magazine/source\", {\n            headers: headers\n        })).data_list.live_source_list,\n        select_list = zb_list.select_list,\n        source_list = zb_list.source_list,\n        select_zb = getItem('select_zb', select_list[0].value);\n    if (MY_PAGE == 1) {\n        d.push({\n            col_type: \"blank_block\"\n        });\n        for (let obj of select_list) {\n            d.push({\n                title: obj.value == select_zb ? '““””' + obj.label.fontcolor('red') : obj.label,\n                url: $('#noLoading#').lazyRule((e) => {\n                    setItem('select_zb', e);\n                    refreshPage();\n                    return 'hiker://empty'\n                }, obj.value),\n                col_type: \"scroll_button\"\n            });\n        }\n        for (let it of source_list[select_zb].list) {\n            d.push({\n                title: it.title,\n                url: $().lazyRule((tag) => {\n                    eval(JSON.parse(fetch(\"hiker://page/getHeaders\")).rule);\n                    let list = JSON.parse(request('http://api.lifves.com/video/getLiveSourceLink?tag=' + tag, {\n                            headers: headers\n                        })).data_list,\n                        urls = list.map(v => v.href);\n                    return JSON.stringify({\n                        urls: urls\n                    });\n                }, it.tag),\n                col_type: \"icon_4_card\",\n                desc: it.sub_title,\n                pic_url: it.img\n            });\n        }\n    }\n} else if (now == '推荐期刊' || now == '热门期刊') {\n    eval(JSON.parse(fetch(\"hiker://page/getHeaders\")).rule);\n    let category_id = now == \"推荐期刊\" ? 0 : 1,\n        qk_list = JSON.parse(request(\"https://api.lifves.com/magazine/more?category_id=\" + category_id + \"&page=\" + MY_PAGE, {\n            headers: headers\n        })).data_list;\n    for (let i in qk_list) {\n        let it = qk_list[i];\n        d.push({\n            title: it.title,\n            desc: it.qishu,\n            img: it.img,\n            col_type: 'movie_3',\n            url: 'hiker://page/catalogue#immersiveTheme#',\n            extra: {\n                href: 'https://api.lifves.com/magazine/book?mag_id=' + it.mag_id + '&qishu=' + it.qishu,\n            }\n        });\n    }\n} else if (now == '收藏') {\n    if (MY_PAGE == 1) {\n        let collection = JSON.parse(readFile('collection') || '{}');\n        for (let i in collection) {\n            let it = collection[i];\n            d.push({\n                title: i,\n                col_type: 'movie_3',\n                img: it.img,\n                url: 'hiker://page/history',\n                extra: {\n                    href: it.url,\n                    title: i,\n                    img: it.img\n                }\n            })\n        }\n    }\n}\nsetResult(d);","searchFind":"js:\nlet d = [];\neval(JSON.parse(fetch(\"hiker://page/getHeaders\")).rule);\nlet qk_list = JSON.parse(request(\"https://api.lifves.com/magazine/search?keyword=\" + MY_URL.split(\"##\")[1], {\n    headers: headers\n})).data_list;\nfor (let i in qk_list) {\n    let it = qk_list[i];\n    d.push({\n        title: it.title,\n        desc: it.qishu,\n        img: it.img,\n        col_type: 'movie_3',\n        url: 'hiker://page/catalogue#immersiveTheme#',\n        extra: {\n            href: 'https://api.lifves.com/magazine/book?mag_id=' + it.mag_id + '&qishu=' + it.qishu,\n        }\n    });\n}\nsetResult(d);","search_url":"hiker://empty##**","group":"收藏","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"目录\",\"path\":\"catalogue\",\"rule\":\"js:\\neval(JSON.parse(fetch(\\\"hiker://page/getHeaders\\\")).rule);\\nlet readTheme = getItem('readTheme', 'false') == 'true' ? '#readTheme#' : '',\\n    fullTheme = getItem('fullTheme', 'true') == 'true' ? '#fullTheme#' : '',\\n    url = MY_PARAMS.href,\\n    data_list = JSON.parse(request(url, {\\n        headers: headers\\n    })).data_list;\\n\\nlet d = [];\\nd.push({\\n    title: data_list.title + \\\"\\\\n\\\" + data_list.qishu,\\n    desc: \\\"““””\\\" + \\\"点我查看往期期刊\\\".bold().big(),\\n    img: data_list.img,\\n    col_type: 'movie_1_vertical_pic_blur',\\n    url: \\\"hiker://page/history\\\",\\n    extra: {\\n        href: \\\"https://api.lifves.com/magazine/history?mag_id=\\\" + data_list.mag_id,\\n        title: data_list.title,\\n        img: data_list.img\\n    }\\n})\\nd.push({\\n    title: '目录'.big().bold(),\\n    col_type: 'rich_text'\\n})\\n\\nlet stroge = {};\\nfor (let i in data_list.ml) {\\n    let list = data_list.ml[i].list;\\n    for (let j in list) {\\n        stroge[list[j].title] = \\\"https://api.lifves.com/magazine/read?read_id=\\\" + list[j].read_id;\\n    }\\n}\\nsaveFile('stroge', JSON.stringify(stroge));\\nlet star = Object.keys(stroge);\\n\\nfor (let i in data_list.ml) {\\n    let item = data_list.ml[i];\\n    d.push({\\n        title: '““””<strong>▶' + item.title + '</strong>',\\n        col_type: 'text_1',\\n        url: \\\"hiker://empty\\\",\\n        extra: {\\n            lineVisible: false\\n        }\\n    })\\n\\n    item.list.forEach(e => {\\n        let index = star.indexOf(e.title);\\n        d.push({\\n            title: '““””&nbsp;&nbsp;&nbsp;&nbsp;•' + e.title,\\n            col_type: 'text_1',\\n            url: 'hiker://page/text' + fullTheme + readTheme,\\n            extra: {\\n                lineVisible: false,\\n                href: \\\"https://api.lifves.com/magazine/read?read_id=\\\" + e.read_id,\\n                index: index\\n            }\\n        })\\n    })\\n}\\n\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"获取请求头\",\"path\":\"getHeaders\",\"rule\":\" function random_char(t) {\\n     for (var n = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'], i = '', e = 0; e < t; e++) {\\n         var o = Math.ceil(35 * Math.random())\\n         i += n[o]\\n     }\\n     return i\\n }\\n\\n function getSecretdate() {\\n     var t = parseInt((new Date()).getTime() / 1e3)\\n     var n = random_char(32)\\n     var i = 'timestamp=' + t + '&nonce=' + n\\n     return i\\n }\\n\\n\\n var secretdate = getSecretdate()\\n var secreted = md5(secretdate + 'apilifves5201314')\\n\\n var headers = {\\n     'Secret-Date': secretdate,\\n     'Secreted': secreted,\\n     \\\"Content-Type\\\": \\\"application/json;charset=utf-8\\\"\\n }\"},{\"col_type\":\"movie_3\",\"name\":\"往期期刊\",\"path\":\"history\",\"rule\":\"js:\\naddListener('onClose', 'clearVar(\\\"year\\\")');\\neval(JSON.parse(fetch(\\\"hiker://page/getHeaders\\\")).rule);\\nlet d = [],\\n    {\\n        href: url,\\n        title: name,\\n        img\\n    } = MY_PARAMS,\\n    collection = JSON.parse(readFile('collection') || '{}'),\\n    isCollected = !!(collection[name] && collection[name].url == url),\\n    data_list = JSON.parse(request(url, {\\n        headers: headers\\n    })).data_list;\\nsetPageTitle(name);\\nsetLastChapterRule('js:' + $.toString(() => {\\n    eval(JSON.parse(fetch(\\\"hiker://page/getHeaders\\\")).rule);\\n    let url = MY_PARAMS.href,\\n        data_list = JSON.parse(request(url, {\\n            headers: headers\\n        })).data_list,\\n        data = data_list[0].data[0].qishu;\\n    setResult('最新：' + data);\\n}));\\nd.push({\\n    title: isCollected ? '♥已收藏' : '♡添加收藏',\\n    url: $().lazyRule((is, url, name, img) => {\\n        let collection = JSON.parse(readFile('collection') || '{}');\\n        if (is) {\\n            delete collection[name];\\n            saveFile('collection', JSON.stringify(collection));\\n            refreshPage();\\n            return 'toast://已取消收藏'\\n        } else {\\n            collection[name] = {\\n                url: url,\\n                img: img\\n            };\\n            saveFile('collection', JSON.stringify(collection));\\n            refreshPage();\\n            return 'toast://已添加收藏'\\n        }\\n    }, isCollected, url, name, img),\\n    col_type: \\\"scroll_button\\\",\\n});\\n\\nlet data = {},\\n    now = getVar('year', String(data_list[0].year));\\nfor (let list of data_list) {\\n    if (now == list.year) data = list.data;\\n    d.push({\\n        title: '““””' + (list.year == now ? '<font color=red>' + list.year + '</font>' : list.year),\\n        col_type: 'scroll_button',\\n        url: $().lazyRule((year) => {\\n            putVar('year', String(year));\\n            refreshPage();\\n            return 'hiker://empty'\\n        }, list.year)\\n    });\\n}\\nfor (let item of data) {\\n    d.push({\\n        title: item.qishu,\\n        url: 'hiker://page/catalogue#immersiveTheme#',\\n        img: item.img,\\n        extra: {\\n            href: \\\"https://api.lifves.com/magazine/book?mag_id=\\\" + item.mag_id + \\\"&qishu=\\\" + item.qishu\\n        }\\n    });\\n}\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"文章\",\"path\":\"text\",\"rule\":\"js:\\naddListener('onClose', $.toString(() => {\\n    clearVar('texthref');\\n    clearVar('texttitle');\\n    clearVar('textindex');\\n}));\\nlet click = getItem('click', 'true'),\\n    fontsize = parseInt(getItem('fontsize', String(17))),\\n    indent = parseInt(getItem('indent', String(7))),\\n    indents = '';\\nfor (let i = 0; i < indent; i++) {\\n    indents += '&nbsp;';\\n}\\nlet stroge = JSON.parse(readFile('stroge')),\\n    star = Object.keys(stroge);\\n\\neval(JSON.parse(fetch(\\\"hiker://page/getHeaders\\\")).rule);\\nlet index = parseInt(getVar('textindex') || MY_PARAMS.index),\\n    href = getVar('texthref', '') || MY_PARAMS.href,\\n    data_list = JSON.parse(request(href, {\\n        headers: headers\\n    })).data_list;\\n\\nlet d = [];\\nd.push({\\n    title: '““””<h2>' + data_list.title + '</h2>',\\n    col_type: 'text_center_1',\\n    url: \\\"http://qk.demo.lifves.com/book/read/\\\" + data_list.mag_id + \\\"/\\\" + data_list.qishu + \\\"/\\\" + data_list.read_id,\\n    extra: {\\n        lineVisible: false\\n    }\\n}, {\\n    title: data_list.content.replace(/\\\\>[a-zA-Z0-9+=\\\\-\\\\/]*\\\\</g, '><').replace(/(\\\\<p\\\\>\\\\s*)+\\\\</g,'<').replace(/\\\\<p\\\\>/g, '<p>' + indents),\\n    col_type: 'rich_text',\\n    extra: {\\n        textSize: fontsize,\\n        click: click\\n    }\\n})\\nif (index != 0) {\\n    let title = star[index - 1];\\n    let href = stroge[title];\\n    d.push({\\n        title: '上一篇:' + title,\\n        col_type: 'text_center_1',\\n        url: $('hiker://empty#noLoading#').lazyRule((href, title, index) => {\\n            putVar('texthref', href);\\n            putVar('texttitle', title);\\n            putVar('textindex', String(index - 1));\\n            refreshPage();\\n            return 'hiker://empty'\\n        }, href, title, index),\\n        extra: {\\n            href: href,\\n            lineVisible: false\\n        }\\n    })\\n}\\nif (index != star.index) {\\n    let title = star[index + 1];\\n    let href = stroge[title];\\n    d.push({\\n        title: '下一篇:' + title,\\n        col_type: 'text_center_1',\\n        url: $('hiker://empty#noLoading#').lazyRule((href, title, index) => {\\n            putVar('texthref', href);\\n            putVar('texttitle', title);\\n            putVar('textindex', String(index + 1));\\n            refreshPage();\\n            return 'hiker://empty'\\n        }, href, title, index),\\n        extra: {\\n            href: href,\\n            lineVisible: false\\n        }\\n    })\\n}\\nfor (let i = 0; i < 10; i++) {\\n    d.push({\\n        col_type: 'blank_block'\\n    })\\n}\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"设置页\",\"path\":\"setting\",\"rule\":\"js:\\nlet d = [];\\nlet fontsize = parseInt(getItem('fontsize', String(17)));\\nlet indent = parseInt(getItem('indent', String(7)));\\nlet indents = '';\\nfor (let i = 0; i < indent; i++) {\\n    indents += '&nbsp;';\\n}\\nlet readTheme = getItem('readTheme','false');\\nlet fullTheme = getItem('fullTheme', 'true');\\nlet click = getItem('click', 'true');\\n\\nd.push({\\n    title: '阅读模式' + (readTheme == 'true' ? '✔' : '✘'),\\n    col_type: 'text_3',\\n    url: readTheme == 'true' ? $('hiker://empty#noLoading#').lazyRule(() => {\\n        setItem('readTheme', 'false');\\n        refreshPage();\\n        return 'hiker://empty';\\n    }) :$('注意：开启阅读模式后,全屏模式设置和字号设置将不起作用！').confirm(() => {\\n        setItem('readTheme', 'true');\\n        refreshPage();\\n        return 'hiker://empty';\\n    })\\n})\\nd.push({\\n    title: '全屏模式' + (fullTheme == 'true' ? '✔' : '✘'),\\n    col_type: 'text_3',\\n    url: $('hiker://empty#noLoading#').lazyRule((i) => {\\n        setItem('fullTheme', i == 'true' ? 'false' : 'true');\\n        refreshPage();\\n        return 'hiker://empty';\\n    }, fullTheme)\\n})\\nd.push({\\n    title: '点击翻页' + (click == 'true' ? '✔' : '✘'),\\n    col_type: 'text_3',\\n    url: $('hiker://empty#noLoading#').lazyRule((i) => {\\n        setItem('click', i == 'true' ? 'false' : 'true');\\n        refreshPage();\\n        return 'hiker://empty';\\n    }, click)\\n})\\n\\nd.push({\\n    title: '调整字号'.big().bold(),\\n    col_type: 'rich_text'\\n})\\nd.push({\\n    title: '字号➕',\\n    col_type: 'flex_button',\\n    url: $(\\\"hiker://empty#noLoading#\\\").lazyRule((s) => {\\n        setItem('fontsize', String(s + 1));\\n        refreshPage(false);\\n        return \\\"hiker://empty\\\"\\n    }, fontsize)\\n}, {\\n    title: '字号➖',\\n    col_type: 'flex_button',\\n    url: $(\\\"hiker://empty#noLoading#\\\").lazyRule((s) => {\\n        setItem('fontsize', String(s - 1));\\n        refreshPage(false);\\n        return \\\"hiker://empty\\\"\\n    }, fontsize)\\n})\\n\\nd.push({\\n    col_type: 'line'\\n})\\n\\nd.push({\\n    title: '调整缩进'.big().bold(),\\n    col_type: 'rich_text'\\n})\\nd.push({\\n    title: '缩进➕',\\n    col_type: 'flex_button',\\n    url: $(\\\"hiker://empty#noLoading#\\\").lazyRule((s) => {\\n        setItem('indent', String(s + 1));\\n        refreshPage(false);\\n        return \\\"hiker://empty\\\"\\n    }, indent)\\n}, {\\n    title: '缩进➖',\\n    col_type: 'flex_button',\\n    url: $(\\\"hiker://empty#noLoading#\\\").lazyRule((s) => {\\n        setItem('indent', String(s - 1));\\n        refreshPage(false);\\n        return \\\"hiker://empty\\\"\\n    }, indent)\\n})\\n\\nd.push({\\n    col_type: 'line'\\n})\\n\\nd.push({\\n    title: '预览'.big() + '(字号:' + fontsize + ',缩进:' + indent + ')',\\n    col_type: 'rich_text'\\n}, {\\n    title: '<p>小棉袄帅吗?</p><p>小棉袄怎么这么帅？</p><p>小棉袄真是超超超超超超超超级帅!!!!帅炸了好不好？举世颜无双!!!!</p>'.replace(/\\\\<p\\\\>/g, '<p>' + indents),\\n    col_type: 'rich_text',\\n    extra: {\\n        textSize: fontsize\\n    }\\n})\\nsetResult(d);\"}]","proxy":"","icon":"http://qk.demo.lifves.com/favicon.ico"},{"last_chapter_rule":"","title":"吾爱破解","author":"","version":2,"type":"news","url":"hiker://empty##https://www.52pojie.cn/forum.php?mod=guide&view=hot&page=1","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nlet ad = JSON.parse(fetch(\"hiker://page/ad\")).rule;\nad = ad.split(\"￥\")[2];\nlet blockRules = ad.split(\"&&\");\nlet url = 'https://www.52pojie.cn/forum.php?mod=guide&view=hot&page=1';\nlet ite = $.require(\"hiker://page/u\")(MY_RULE.title, url);\nsetResult([{\n    col_type: \"x5_webview_single\",\n    url: url,\n    desc: \"float&&100%\",\n    extra: {\n        urlInterceptor: ite,\n        canBack: true,\n        blockRules: blockRules,\n        //floatVideo: true\n    }\n}])","searchFind":"","search_url":"","group":"收藏","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"广告拦截\",\"path\":\"ad\",\"rule\":\"海阔视界规则分享，当前分享的是：广告网址拦截￥ad_url_rule￥/ad/&&.GIF&&/sh/to/\"},{\"col_type\":\"movie_3\",\"name\":\"ysfx\",\"path\":\"ysfx\",\"rule\":\"js:\\nvar d = [];\\nlet rule = getParam(\\\"r\\\").split(\\\"##\\\")[0];\\nlet url = MY_URL.split(\\\"##\\\")[1];\\nlet ite = $.require(\\\"hiker://page/u\\\")(rule, getHome(url));\\nlet js = $.toString(() => {\\n    try {\\n        if (document.title && document.title.length) {\\n            let r = $$$().lazyRule((t) => {\\n                setPageTitle(t);\\n            }, document.title);\\n            fy_bridge_app.parseLazyRule(r);\\n        }\\n    } catch (e) {\\n        fy_bridge_app.log(e.toString());\\n    }\\n});\\nlet ad = JSON.parse(fetch(\\\"hiker://page/ad\\\")).rule;\\nad = ad.split(\\\"￥\\\")[2];\\nlet blockRules = ad.split(\\\"&&\\\");\\nlog(blockRules);\\nd.push({\\n    title: \\\"\\\",\\n    url: url,\\n    col_type: \\\"x5_webview_single\\\",\\n    desc: \\\"100%&&float\\\",\\n    pic_url: \\\"\\\",\\n    extra: {\\n        urlInterceptor: ite,\\n        js: js,\\n        canBack: true,\\n        jsLoadingInject: true,\\n        //floatVideo: true,\\n        blockRules: blockRules\\n    }\\n});\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"u\",\"path\":\"u\",\"rule\":\"$.exports = function(rule, origin) {\\n    return $.toString((rule, origin) => {\\n        let host = origin.replace(new RegExp(\\\"http://|https://\\\"), \\\"\\\").split(\\\"/\\\")[0];\\n        let hosts = host.split(\\\".\\\");\\n        if (hosts.length > 2) {\\n            host = hosts[hosts.length - 2] + \\\".\\\" + hosts[hosts.length - 1];\\n        }\\n        if (input.startsWith(\\\"magnet\\\")) {\\n            confirm({\\n                title: \\\"温馨提示\\\",\\n                content: \\\"检测到新的磁链地址，点击确定按钮即可播放，点击取消按钮可以复制链接\\\",\\n                confirm: $.toString((mag) => {\\n                    return mag;\\n                }, input),\\n                cancel: $.toString((mag) => {\\n                    return \\\"copy://\\\" + mag\\n                }, input)\\n            })\\n            return true;\\n        } else if ((!input.includes(host) && input.startsWith(\\\"http\\\")) || input.includes(\\\"/play\\\") || (input.includes(\\\"/thread-\\\") && !origin.includes(\\\"/thread-\\\"))) {\\n            log(input);\\n            return $.toString((url, rule) => {\\n                //跳网页\\n                fy_bridge_app.open(JSON.stringify({\\n                    title: \\\"详情\\\",\\n                    url: \\\"hiker://page/ysfx?rule=\\\" + rule + \\\"&r=\\\" + rule + \\\"##\\\" + url,\\n                }))\\n            }, input, rule);\\n        } else if (!input.startsWith(\\\"http\\\")) {\\n            log(input);\\n            //能唤起APP的白名单\\n            let white = [\\n                \\\"qklink\\\",\\n                \\\"bdnetdisk\\\",\\n                \\\"xunleiapp\\\"\\n            ];\\n            let inWhite = white.filter(it => input.startsWith(it)).length > 0;\\n            if (!inWhite) {\\n                return false;\\n            }\\n            return $.toString((url, rule) => {\\n                fy_bridge_app.openThirdApp && fy_bridge_app.openThirdApp(url);\\n            }, input, rule)\\n        } else {\\n\\n        }\\n    }, rule, origin);\\n}\"}]","proxy":"","icon":"https://www.52pojie.cn/favicon.ico"},{"last_chapter_rule":"","title":"游戏集𝔥","author":"小棉袄🌞&小🔥星&鬼四&爱是用心&Joker&Hood","version":5,"type":"other","url":"hiker://empty","col_type":"icon_round_small_4","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\r\nvar res = {};\r\nvar d = [];\r\nvar html = getResCode();\n\nd.push({\n    title: \"更新数据\",\n    pic_url: \"https://lanmeiguojiang.com/tubiao/movie/38.svg\",\n    url: $(\"#noLoading#\").lazyRule(() => {\n        confirm({\n            title: \" 确认更新数据？\",\n            content: \"这会覆盖本地文件\",\n            confirm: `eval(JSON.parse(fetch('hiker://page/update')).rule);refreshPage();'toast://数据已更新'`,\n            cancel: ''\n        });\n        return 'hiker://empty'\n    }),\n    col_type: 'avatar'\n});\n\n//列表\neval(fetch(\"hiker://files/rules/Hood/yxj.json\"));\n\nfor(var i in list){\n    let picurl = list[i].split(\",\")[2];\n    if(!picurl) picurl = \"https://lanmeiguojiang.com/tubiao/ke/58.png\";\n    d.push({\n        title: list[i].split(\",\")[0],\n        pic_url: picurl + \"@Referer=\",\n        url: list[i].split(\",\")[1] + \"#gameTheme#\"\n    });\n}\n\r\nres.data = d;\r\nsetHomeResult(res);","searchFind":"","search_url":"","group":"收藏","detail_col_type":"movie_1","detail_find_rule":"js:\nsetResult([{\n    col_type: 'x5_webview_single',\n    url: MY_URL,\n    desc: \"auto&&float\",\n    extra: {\n        canBack: true\n    }\n}])","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"//自动更新？1启用, 0关闭\nvar update = 0;\n\n//更新间隔, 单位为天\nvar uptime = 3;\n\nvar local = \"hiker://files/rules/Hood/yxj.json\";\nvar date_txt = \"hiker://files/cache/update/yxj.txt\";\n\n//计算时间间隔\nvar start = new Date(fetch(date_txt)); \nvar now = new Date(); \nvar D_T = now.getTime() - start.getTime(); \nvar D_D = D_T / (1000 * 3600 * 24);\nvar mytime=parseInt(D_D)+'';\n\nif(!fetch(date_txt) || !fetch(local) || (update==1&&mytime>=uptime)){\n    try{\n        var cloud = base64Decode(fetch(\"https://ghproxy.com/https://raw.githubusercontent.com/xixifree/Hiker/main/yxj.json\",{}));\n        if(cloud.includes(\"合集\")){\n            writeFile(local,cloud);\n            writeFile(date_txt,new Date()+'');\n        }\n    }catch(e){}\n}","pages":"[{\"col_type\":\"movie_3\",\"name\":\"更新数据\",\"path\":\"update\",\"rule\":\"var cloud = base64Decode(fetchCache(\\\"https://ghproxy.com/https://raw.githubusercontent.com/xixifree/Hiker/main/yxj.json\\\",24));\\nif(cloud.includes(\\\"合集\\\")){\\n    writeFile(\\\"hiker://files/rules/Hood/yxj.json\\\",cloud);\\n    writeFile(\\\"hiker://files/cache/update/yxj.txt\\\",new Date()+'');\\n}\"}]","proxy":"","icon":"https://lanmeiguojiang.com/tubiao/ke/58.png"},{"firstHeader":"class","last_chapter_rule":"","title":"网易公版影像","author":"家娃","version":0,"type":"video","url":"https://active.163.com/service/form/v1/9347/view/1618.jsonp?param_entry_kinds=fyAll&page=fypage&pageSize=20","col_type":"movie_3","class_name":"电影&纪录片&动画片&珍贵史料","class_url":"movie&doc&ani&his","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar res = {};\nvar d = [];\nvar lazy = $(\"\").lazyRule(() => {\n\tvar playJsonUrl =\"https://so.v.163.com/mobile/getBatchOnlineVideo.do?vidstr=\";\n\tvar reqUrl = playJsonUrl+input;\n\tvar reqJson = JSON.parse(request(reqUrl)).data.video_list[0];\n\t//log(reqJson.mp4SdUrl);\n    return reqJson.mp4SdUrl;\n});\n\ntry {\n    var jsonStr = getResCode();\n   //log(jsonStr.substring(10,jsonStr.length-2));\n    var json = JSON.parse(jsonStr.substring(10,jsonStr.length-2));\n\t\n    for (var i = 0; i < json.list.length; i++) {\n        var j = json.list[i];\n        d.push({\n            title: j.title,\n            pic_url: j.cover_pic,\n            desc: j.meida_type,\n            url: j.vid+lazy,\n        });\n    } \n} \ncatch (e) {\n\t\n}\nres.data = d;\nsetHomeResult(res);","searchFind":"js:\nvar d = [];\n\nvar lazy = $(\"\").lazyRule(() => {\n    var playJsonUrl = \"https://so.v.163.com/mobile/getBatchOnlineVideo.do?vidstr=\";\n    var reqUrl = playJsonUrl + input;\n    var reqJson = JSON.parse(request(reqUrl)).data.video_list[0];\n    log(reqJson.mp4SdUrl);\n    return reqJson.mp4SdUrl;\n});\n\ntry {\n    var jsonStr = getResCode();\n    //log(jsonStr.substring(10,jsonStr.length-2));\n    var json = JSON.parse(jsonStr.substring(10, jsonStr.length - 2));\n    for (var i = 0; i < json.list.length; i++) {\n        var j = json.list[i];\n        d.push({\n            title: j.title,\n            pic_url: j.cover_pic,\n            content: j.desc,\n            desc: j.meida_type,\n            url: j.vid + lazy,\n        });\n\n    }\n} catch (e) {\n\n}\nsetResult(d);","search_url":"https://active.163.com/service/form/v1/9347/view/1619.jsonp?_charset=UTF-8&_decode=UTF-8&param_title=**&page=fypage&pageSize=6","group":"收藏","detail_col_type":"text_3","detail_find_rule":"","sdetail_col_type":"text_3","sdetail_find_rule":"*","ua":"pc","preRule":"","pages":"[]","proxy":"","icon":"https://iconfont.tyrantg.com/api/illustrate.svg?svg_string=%3Csvg%20class%3D%22icon%22%20style%3D%22width%3A%201.00390625em%3Bheight%3A%201em%3Bvertical-align%3A%20middle%3Bfill%3A%20currentColor%3Boverflow%3A%20hidden%3B%22%20viewBox%3D%220%200%201028%201024%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20d%3D%22M192%20645.12c7.68-10.24-5.12-46.08-5.12-46.08-46.08-40.96-35.84%2030.72-35.84%2030.72%2033.28%2053.76%2040.96%2015.36%2040.96%2015.36z%20m189.44-30.72s-53.76%202.56-40.96%2035.84c0%200%2079.36%2017.92%2087.04-15.36%200%200%207.68-30.72-46.08-20.48z%20m-209.92-158.72c-43.52-46.08%2015.36-61.44%2015.36-61.44%2023.04-64-30.72-56.32-30.72-56.32-51.2-10.24-20.48%2025.6-20.48%2025.6-10.24%2035.84-35.84%2046.08-35.84%2046.08-71.68-15.36-15.36-66.56-15.36-66.56-2.56-35.84%2051.2-35.84%2051.2-35.84%2017.92%200%2015.36-20.48%2015.36-20.48-7.68-40.96-66.56-20.48-66.56-20.48-30.72%2020.48-61.44%2097.28-61.44%2097.28-20.48%2038.4%2030.72%2061.44%2030.72%2061.44%2017.92%2030.72-30.72%2081.92-30.72%2081.92%202.56%2084.48%2051.2%2066.56%2051.2%2066.56%205.12%2015.36%2066.56%205.12%2066.56%205.12-2.56-10.24%2046.08-40.96%2046.08-40.96%207.68-56.32-15.36-81.92-15.36-81.92z%20m-46.08%2087.04s-76.8%202.56-61.44-30.72c0%200%2017.92-43.52%2025.6-40.96%200%200%2035.84-40.96%2061.44%2010.24%200%200%2010.24%2046.08-25.6%2061.44z%20m-122.88%20128c-10.24%2066.56%2035.84%2040.96%2035.84%2040.96-2.56-30.72%2020.48-46.08%2020.48-46.08v-66.56C15.36%20586.24%202.56%20670.72%202.56%20670.72z%20m87.04-51.2c-15.36%20153.6%2035.84%2071.68%2035.84%2071.68%207.68-128-35.84-71.68-35.84-71.68z%20m401.92-240.64c20.48-38.4-25.6-71.68-25.6-71.68l-30.72-5.12c-35.84-17.92-97.28-5.12-97.28-5.12-35.84%2012.8-102.4%205.12-102.4%205.12C189.44%20358.4%20230.4%20414.72%20230.4%20414.72v107.52c-7.68%2097.28-46.08%20148.48-46.08%20148.48%205.12%2061.44%2040.96%2025.6%2040.96%2025.6%2025.6-15.36%2035.84-133.12%2035.84-133.12l25.6%2010.24v61.44c12.8%2025.6%2038.4%2015.36%2040.96%2010.24%202.56-5.12%200-15.36%200-15.36-15.36-7.68-5.12-56.32-5.12-56.32%200-25.6%20107.52-15.36%20107.52-15.36%2023.04-56.32-56.32-40.96-56.32-40.96-17.92-2.56-10.24-35.84-10.24-35.84%2035.84-17.92%2081.92-2.56%2081.92%2010.24%202.56%2012.8%200%20168.96%200%20168.96%2015.36%2097.28%2051.2%2035.84%2051.2%2035.84%207.68-25.6-15.36-102.4-15.36-102.4-15.36-56.32%2010.24-215.04%2010.24-215.04z%20m-161.28%20148.48c-51.2-10.24-66.56%205.12-66.56%205.12-5.12-76.8%2066.56-46.08%2066.56-46.08v40.96z%20m115.2-87.04l-48.64-5.12%205.12-25.6c17.92-10.24%2015.36-51.2%2015.36-51.2-51.2-30.72-46.08%2040.96-46.08%2040.96-2.56%2056.32-40.96%2046.08-40.96%2046.08h-56.32c-51.2-35.84-10.24-97.28-10.24-97.28l51.2-10.24c2.56-20.48%2076.8-10.24%2076.8-10.24%2046.08%202.56%2051.2%2035.84%2051.2%2035.84l2.56%2076.8z%20m409.6%20148.48s-99.84%2061.44-122.88%2087.04c0%200-74.24%2020.48-97.28%2025.6%200%200-64%2066.56%2061.44%2035.84%200%200%2069.12-28.16%2097.28-61.44%200%200%2087.04-64%20117.76-92.16%200%200%207.68-56.32-56.32%205.12z%20m171.52%200c2.56-74.24-92.16-112.64-92.16-112.64-7.68%200-71.68-5.12-71.68-5.12-48.64-5.12-30.72%2035.84-30.72%2035.84-135.68%20112.64-209.92%20112.64-209.92%20112.64-64%2040.96%2010.24%2046.08%2010.24%2046.08%2064%205.12%20240.64-148.48%20240.64-148.48%2017.92-10.24%2040.96%200%2040.96%200%200%2023.04%2010.24%2030.72%2010.24%2030.72%20102.4-17.92%2046.08%2092.16%2046.08%2092.16-30.72%2056.32-107.52%2051.2-107.52%2051.2-46.08-28.16-40.96%200-40.96%200%2017.92%20117.76%20143.36%2020.48%20143.36%2020.48%2081.92-61.44%2061.44-122.88%2061.44-122.88z%20m-166.4-209.92c58.88-12.8%2015.36-35.84%2015.36-35.84-17.92-12.8-133.12%200-133.12%200-28.16%2023.04%200%2035.84%200%2035.84h117.76z%20m-560.64-15.36c-20.48%2020.48%205.12%2056.32%205.12%2056.32%2017.92%2020.48%2030.72%205.12%2030.72%205.12v-35.84c-10.24-38.4-35.84-25.6-35.84-25.6z%20m314.88%20204.8c135.68-7.68%20189.44-102.4%20189.44-102.4l128-5.12c43.52-15.36%2040.96-40.96%2040.96-40.96%2010.24-15.36%200-66.56%200-66.56-5.12-69.12-35.84-81.92-35.84-81.92-25.6-5.12-35.84-10.24-35.84-10.24-20.48-7.68-76.8%200-76.8%200-30.72-20.48-97.28%200-97.28%200-56.32%2020.48-10.24%2046.08-10.24%2046.08%20209.92-46.08%20209.92%2025.6%20209.92%2025.6%2020.48%2081.92-20.48%2081.92-20.48%2081.92-56.32-2.56-46.08%2010.24-46.08%2010.24-17.92%202.56-25.6-5.12-25.6-5.12-35.84-12.8-71.68%2010.24-71.68%2010.24h-35.84c-20.48-2.56-25.6-30.72-25.6-30.72v-81.92c-28.16-43.52-46.08%205.12-46.08%205.12v107.52c25.6%2058.88%2092.16%2035.84%2092.16%2035.84-12.8%2030.72-87.04%2056.32-87.04%2056.32-20.48%202.56-51.2%200-51.2%200-38.4%2028.16%205.12%2046.08%205.12%2046.08z%22%20fill%3D%22%23FB2505%22%20%2F%3E%3C%2Fsvg%3E"},{"last_chapter_rule":"","title":"DJ+直播大全","author":"入戏","version":36,"type":"live","url":"hiker://empty##fyAll","col_type":"text_3","class_name":"劲爆DJ&超清直播&歌曲MV","class_url":"https://wds.ecsxs.com/222825.txt&https://wds.ecsxs.com/222806.txt&https://wds.ecsxs.com/223273.txt","area_name":"点播片&影视频道&电视直播&1080直播","area_url":"https://wds.ecsxs.com/223363.txt&https://wds.ecsxs.com/223012.txt&https://wds.ecsxs.com/223091.txt&https://wds.ecsxs.com/224289.txt","sort_name":"","year_name":"在线影视(镇佬提供)","sort_url":"","year_url":"https://wds.ecsxs.com/223509.js","find_rule":"js:\nvar data = [];\nputMyVar('my',MY_URL.split(\"##\")[1])\ndata.push({\n    title: \"🔎\",\n    url: \"'hiker://search?rule=\" + MY_RULE.title + \"&s='+input\",\n    desc: \"搜索频道\",\n    col_type: \"input\"\n})\nconst {\n    renderLiveData\n} = $.require(\"hiker://page/tool\")\nrenderLiveData(MY_URL.split(\"##\")[1])\nsetResult(data);","searchFind":"js:\nlet rule = JSON.parse(fetch(\"hiker://home@\" + MY_RULE.title))\nlet key = MY_URL.split(\"##\")[1];\nMY_URL = rule.url;\nvar data = [];\nconst {\n    renderLiveData\n} = $.require(\"hiker://page/tool\")\nrenderLiveData(getMyVar('my'), key)\nsetResult(data);","search_url":"hiker://empty##**","group":"收藏","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"工具\",\"path\":\"tool\",\"rule\":\"function getReferer(url) {\\n    if (url.indexOf(\\\"gitee\\\") > 0) {\\n        return \\\"https://\\\" + url.split(\\\"://\\\")[1].split(\\\"/\\\")[0];\\n    } else {\\n        return null\\n    }\\n}\\n\\nfunction renderLiveData(url, filter) {\\n    try {\\n        let _d = [];\\n\\n        try {\\n            let html = request(url, {\\n                headers: {\\n                    Referer: getReferer(url)\\n                }\\n            });\\n            if (html.includes(\\\"<html>\\\")) {\\n                throw \\\"not xxx\\\";\\n            }\\n            const d1 = []\\n            try {\\n                if (filter != null) {\\n                    var lists = html.replace(/[\\\\S]*\\\\$|\\\\$\\\\$\\\\$/g, \\\"\\\")\\n                    var list = lists.split('\\\\n')\\n                } else {\\n                    if (html.indexOf('@@@') > -1) {\\n                        var conts = html.split('@@@');\\n                    } else {\\n                        var conts = html.split('$$$');\\n                    }\\n                    var lists = [];\\n                    var tabs = [];\\n\\n                    for (let i in conts) {\\n                        lists.push(conts[i].split('$')[1].split('\\\\n'))\\n                        tabs.push(conts[i].split('$')[0])\\n                    }\\n                    var  m=getMyVar('my');\\n                    var fold = getVar(\\\"fold#\\\"+m, \\\"0\\\");\\n                    \\n\\n                    for (let i = 0; i < 8; i++) {\\n                        _d.push({\\n                            col_type: \\\"blank_block\\\"\\n                        })\\n                    }\\n                    for (var i = 0; i < tabs.length; i++) {\\n\\n                        _d.push({\\n                           title:  fold== i ? '‘‘’’<strong><font color=\\\"#19B89D\\\">' + tabs[i] + '</strong></font>' : tabs[i],\\n                          \\n                            url: $(\\\"\\\").lazyRule((i,m) => {\\n                                putVar(\\\"fold#\\\"+m, i)\\n                                refreshPage();\\n                                return \\\"hiker://empty\\\"\\n                            }, i,m),\\n                            col_type: 'flex_button'\\n                        })\\n                    }\\n                    _d.push({\\n                        col_type: \\\"line_blank\\\"\\n                    })\\n     \\n\\n                    var list = lists[fold]\\n\\n\\n                }\\n            } catch (e) {\\n                var list = html.replace(/#EXTINF:-1 ,/g, '')\\n                    .replace(/#EXTINF:-1,/g, '')\\n                    .replace(/\\\\n#genre#/g, ',#genre#')\\n                    .replace(/#EXTINF:-1/g, '')\\n                    .replace(/group-title=\\\"/g, '')\\n                    .replace(/\\\\nhttp/g, ',http')\\n                    //.replace(/=/g, '')\\n                    .replace(/，#/g, ',#')\\n                    .replace(/\\\",/g, '/')\\n                    .replace(/ /g, '')\\n                    .split('\\\\n');\\n            }\\n            for (var i = 0; i < list.length; i++) {\\n                var r = {};\\n                var j = list[i].split(',');\\n                if (list[i].indexOf(\\\"#EXTINF\\\") == 0 &&\\n                    j.length == 3 && j[2].indexOf(\\\"http\\\") == 0) {\\n                    r.title = j[1].split('/')[j[0].split('/').length - 1];\\n                    r.url = j[2].replace(`\\\\n`, '').replace('\\\\r', '');\\n                    if (r.url.indexOf(\\\"http\\\") == 0 || r.url.indexOf(\\\"rtmp\\\") == 0 || r.url.indexOf(\\\"rtsp\\\") == 0) {\\n                        r.url = r.url + \\\"#isVideo=true#\\\";\\n                    }\\n                    d1.push(r);\\n                    continue;\\n                }\\n\\n                if (j.length < 2) {\\n                    continue;\\n                }\\n                r.title = j[0].split('/')[j[0].split('/').length - 1];\\n                if (filter != null && !r.title.includes(filter)) {\\n                    continue;\\n                }\\n                r.url = j[1].replace(`\\\\n`, '').replace('\\\\r', '');\\n                if (r.url.indexOf(\\\"http\\\") == 0 || r.url.indexOf(\\\"rtmp\\\") == 0 || r.url.indexOf(\\\"rtsp\\\") == 0) {\\n                    r.url = r.url + \\\"#isVideo=true#\\\";\\n                }\\n                d1.push(r);\\n            }\\n            //多线路\\n            const d2 = {}\\n            for (let it of d1) {\\n                if (d2[it.title] == null) {\\n                    d2[it.title] = []\\n                }\\n                d2[it.title].push(it.url)\\n            }\\n\\n            for (let it of Object.keys(d2)) {\\n                _d.push({\\n                    title: it,\\n                    col_type: 'icon_2_round',\\n                    img: \\\"https://lanmeiguojiang.com/tubiao/more/228.png\\\",\\n                    url: JSON.stringify({\\n                        urls: d2[it]\\n                    })\\n                })\\n\\n            }\\n        } catch (e) {}\\n        if (_d && _d.length) {\\n            data = data.concat(_d)\\n            saveFile(\\\"data.json\\\", JSON.stringify(_d));\\n        } else {\\n\\n            let _td = readFile(\\\"data.json\\\").replace(/{\\\"col_type.*line_blank\\\"},/g, \\\"\\\");\\n            log(_td)\\n            if (_td) {\\n                data = data.concat(JSON.parse(_td))\\n            }\\n        }\\n    } catch (e) {\\n        data.push({\\n            title: \\\"数据加载失败\\\",\\n            desc: JSON.stringify(e),\\n            col_type: \\\"text_1\\\"\\n        })\\n    }\\n}\\n$.exports = {\\n    renderLiveData: renderLiveData,\\n}\"}]","proxy":"","icon":"https://lanmeiguojiang.com/tubiao/movie/98.svg"}]